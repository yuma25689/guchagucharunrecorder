/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package app.guchagucharr.guchagucharunrecorder;

public final class R {
    public static final class attr {
        /**  Default AbsListView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int absListViewStyle=0x7f010088;
        /**  The event types this serivce would like to receive as specified in
             {@link android.view.accessibility.AccessibilityEvent}. This setting
             can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>typeViewClicked</code></td><td>0x00000001</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_CLICKED} events.</td></tr>
<tr><td><code>typeViewLongClicked</code></td><td>0x00000002</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_LONG_CLICKED} events. </td></tr>
<tr><td><code>typeViewSelected</code></td><td>0x00000004</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SELECTED} events. </td></tr>
<tr><td><code>typeViewFocused</code></td><td>0x00000008</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_FOCUSED} events. </td></tr>
<tr><td><code>typeViewTextChanged</code></td><td>0x00000010</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED} events. </td></tr>
<tr><td><code>typeWindowStateChanged</code></td><td>0x00000020</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED} events. </td></tr>
<tr><td><code>typeNotificationStateChanged</code></td><td>0x00000040</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED} events. </td></tr>
<tr><td><code>typeViewHoverEnter</code></td><td>0x00000080</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_ENTER} events. </td></tr>
<tr><td><code>typeViewHoverExit</code></td><td>0x00000100</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_EXIT} events. </td></tr>
<tr><td><code>typeTouchExplorationGestureStart</code></td><td>0x00000200</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_START} events. </td></tr>
<tr><td><code>typeTouchExplorationGestureEnd</code></td><td>0x00000400</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_END} events. </td></tr>
<tr><td><code>typeWindowContentChanged</code></td><td>0x00000800</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED} events. </td></tr>
<tr><td><code>typeViewScrolled</code></td><td>0x000001000</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SCROLLED} events. </td></tr>
<tr><td><code>typeViewTextSelectionChanged</code></td><td>0x000002000</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_SELECTION_CHANGED} events. </td></tr>
<tr><td><code>typeAllMask</code></td><td>0xffffffff</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPES_ALL_MASK} i.e. all events. </td></tr>
</table>
         */
        public static final int accessibilityEventTypes=0x7f0101c3;
        /**  The feedback types this serivce provides as specified in
             {@link android.accessibilityservice.AccessibilityServiceInfo}. This setting
             can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>feedbackSpoken</code></td><td>0x00000001</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_SPOKEN} feedback. </td></tr>
<tr><td><code>feedbackHaptic</code></td><td>0x00000002</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_HAPTIC} feedback. </td></tr>
<tr><td><code>feedbackAudible</code></td><td>0x00000004</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_AUDIBLE} feedback. </td></tr>
<tr><td><code>feedbackVisual</code></td><td>0x00000008</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_VISUAL} feedback. </td></tr>
<tr><td><code>feedbackGeneric</code></td><td>0x00000010</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_GENERIC} feedback. </td></tr>
<tr><td><code>feedbackAllMask</code></td><td>0xffffffff</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_ALL_MASK} feedback. </td></tr>
</table>
         */
        public static final int accessibilityFeedbackType=0x7f0101c5;
        /**  Additional flags as specified in
             {@link android.accessibilityservice.AccessibilityServiceInfo}.
             This setting can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>flagDefault</code></td><td>0x00000001</td><td> Has flag {@link android.accessibilityservice.AccessibilityServiceInfo#DEFAULT} </td></tr>
<tr><td><code>flagIncludeNotImportantViews</code></td><td>0x00000002</td><td> Has flag {@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS} </td></tr>
<tr><td><code>flagRequestTouchExplorationMode</code></td><td>0x00000004</td><td> Has flag {@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE} </td></tr>
</table>
         */
        public static final int accessibilityFlags=0x7f0101c7;
        /**  The drawable for accessibility focused views. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int accessibilityFocusedDrawable=0x7f010115;
        /**  A preferences.xml file for authenticator-specific settings. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int accountPreferences=0x7f0103b1;
        /**  The account type this authenticator handles. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int accountType=0x7f0103af;
        /**  The action name to assign to the Intent, as per
            {@link android.content.Intent#setAction Intent.setAction()}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int action=0x7f010465;
        /**  Custom divider drawable to use for elements in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarDivider=0x7f0100d3;
        /**  Custom item state list drawable background for action bar items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarItemBackground=0x7f0100d4;
        /**  Size of the Action Bar, including the contextual
             bar used to present Action Modes. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>wrap_content</code></td><td>0</td><td></td></tr>
</table>
         */
        public static final int actionBarSize=0x7f0100d2;
        /**  Reference to a style for the split Action Bar. This style
             controls the split component that holds the menu/action
             buttons. actionBarStyle is still used for the primary
             bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarSplitStyle=0x7f0100d0;
        /**  Reference to a style for the Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarStyle=0x7f0100cf;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabBarStyle=0x7f0100cc;
        /**  Default style for tabs within an action bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabStyle=0x7f0100cb;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabTextStyle=0x7f0100cd;
        /**  Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar. Most of the time
             this will be a reference to the current theme, but when
             the action bar has a significantly different contrast
             profile than the rest of the activity the difference
             can become important. If this is set to @null the current
             theme will be used.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarWidgetTheme=0x7f0100d1;
        /**  Default action button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionButtonStyle=0x7f0100aa;
        /**  Default ActionBar dropdown style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionDropDownStyle=0x7f0100a9;
        /**  An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionLayout=0x7f010364;
        /**  TextAppearance style that will be applied to text that
             appears within action menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionMenuTextAppearance=0x7f0100d5;
        /**  Color for text that appears within action menu items. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int actionMenuTextColor=0x7f0100d6;
        /**  Background drawable to use for action mode UI 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeBackground=0x7f0100d9;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseButtonStyle=0x7f0100d8;
        /**  Drawable to use for the close action mode button 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseDrawable=0x7f0100db;
        /**  Drawable to use for the Copy action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCopyDrawable=0x7f0100dd;
        /**  Drawable to use for the Cut action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCutDrawable=0x7f0100dc;
        /**  Drawable to use for the Find action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeFindDrawable=0x7f0100e1;
        /**  Drawable to use for the Paste action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePasteDrawable=0x7f0100de;
        /**  PopupWindow style to use for action modes when showing as a window overlay. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePopupWindowStyle=0x7f0100e3;
        /**  Drawable to use for the Select all action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSelectAllDrawable=0x7f0100df;
        /**  Drawable to use for the Share action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeShareDrawable=0x7f0100e0;
        /**  Background drawable to use for action mode UI in the lower split bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSplitBackground=0x7f0100da;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeStyle=0x7f0100d7;
        /**  Drawable to use for the Web Search action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeWebSearchDrawable=0x7f0100e2;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionOverflowButtonStyle=0x7f0100ce;
        /**  The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int actionProviderClass=0x7f010366;
        /**  The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int actionViewClass=0x7f010365;
        /**  Drawable used as a background for activated items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activatedBackgroundIndicator=0x7f01004d;
        /**  Default ActivityChooserView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityChooserViewStyle=0x7f0100c4;
        /**   When closing the current activity, this is the animation that is
              run on the next activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityCloseEnterAnimation=0x7f010150;
        /**   When closing the current activity, this is the animation that is
              run on the current activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityCloseExitAnimation=0x7f010151;
        /**   When opening a new activity, this is the animation that is
              run on the next activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityOpenEnterAnimation=0x7f01014e;
        /**   When opening a new activity, this is the animation that is
              run on the previous activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityOpenExitAnimation=0x7f01014f;
        /** 
    The size of the ad. It must be one of BANNER, FULL_BANNER, LEADERBOARD,
    MEDIUM_RECTANGLE, SMART_BANNER, WIDE_SKYSCRAPER, or
    &lt;width&gt;x&lt;height&gt;.
    
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int adSize=0x7f010000;
        /** 
    A comma-separated list of the supported ad sizes. The sizes must be one of
    BANNER, FULL_BANNER, LEADERBOARD, MEDIUM_RECTANGLE, SMART_BANNER,
    WIDE_SKYSCRAPER, or &lt;width&gt;x&lt;height&gt;.
    
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int adSizes=0x7f010001;
        /**  The ad unit ID. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int adUnitId=0x7f010002;
        /**  Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int addStatesFromChildren=0x7f0101ab;
        /**  Set this to true if you want the ImageView to adjust its bounds
             to preserve the aspect ratio of its drawable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int adjustViewBounds=0x7f0101f0;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogButtonGroupStyle=0x7f01007d;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alertDialogCenterButtons=0x7f01007e;
        /**  Icon drawable to use for alerts 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogIcon=0x7f0100fe;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogStyle=0x7f01007c;
        /**  Theme to use for alert dialogs spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogTheme=0x7f0100fd;
        /**  Alignment constants. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td> Align the bounds of the children.
        See {@link android.widget.GridLayout#ALIGN_BOUNDS}. </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td> Align the margins of the children.
        See {@link android.widget.GridLayout#ALIGN_MARGINS}. </td></tr>
</table>
         */
        public static final int alignmentMode=0x7f01012c;
        /**  Resource representing the term "All Contacts" (e.g. "All Friends" or
        "All connections"). Optional (Default is "All Contacts"). 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allContactsName=0x7f0103bb;
        /**  Whether to allow the application to participate in the backup
         and restore infrastructure.  If this attribute is set to <code>false</code>,
         no backup or restore of the application will ever be performed, even by a
         full-system backup that would otherwise cause all application data to be saved
         via adb.  The default value of this attribute is <code>true</code>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowBackup=0x7f01043c;
        /**  Option to let applications specify that user data can/cannot be 
         cleared. This flag is turned on by default.
         <em>This attribute is usable only by applications
         included in the system image. Third-party apps cannot use it.</em> 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowClearUserData=0x7f010408;
        /**  true if the storage can be shared via USB mass storage 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowMassStorage=0x7f0103f0;
        /**  Set to true to tell the SyncManager that this SyncAdapter supports
             multiple simultaneous syncs for the same account type and authority.
             Otherwise the SyncManager will be sure not to issue a start sync request
             to this SyncAdapter if the SyncAdapter is already syncing another account.
             Defaults to false.
             
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowParallelSyncs=0x7f0103b6;
        /**  Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowScaling=0x7f0103c1;
        /**  Indicates whether the drawer can be opened/closed by a single tap
             on the handle.  (If false, the user must drag or fling, or click
             using the trackball, to open/close the drawer.)  Default is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowSingleTap=0x7f010291;
        /**  Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.  Use with the
         application tag (to supply a default for all activities in the
         application), or with an activity tag (to supply a specific
         setting for that component).
    
         <p>Normally when an application is started, it is associated with
         the task of the activity that started it and stays there for its
         entire lifetime.  You can use the allowTaskReparenting feature to force an
         activity to be re-parented to a different task when the task it is
         in goes to the background.  Typically this is used to cause the
         activities of an application to move back to the main task associated
         with that application.  The activity is re-parented to the task
         with the same {@link android.R.attr#taskAffinity} as it has. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowTaskReparenting=0x7f010420;
        /**  alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque). 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alpha=0x7f010193;
        /**  The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphabeticShortcut=0x7f010360;
        /**  Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysDrawnWithCache=0x7f0101aa;
        /**  Specify whether an acitivty's task state should always be maintained
         by the system, or if it is allowed to reset the task to its initial
         state in certain situations.
         
         <p>Normally the system will reset a task (remove all activities from
         the stack and reset the root activity) in certain situations when
         the user re-selects that task from the home screen.  Typically this
         will be done if the user hasn't visited that task for a certain
         amount of time, such as 30 minutes.
         
         <p>By setting this attribute, the user will always return to your
         task in its last state, regardless of how they get there.  This is
         useful, for example, in an application like the web browser where there
         is a lot of state (such as multiple open tabs) that the application
         would not like to lose. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysRetainTaskState=0x7f010426;
        /**  Used when the handle shouldn't wait to be hit before following the finger 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysTrackFinger=0x7f0103cc;
        /**  Angle of the gradient. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int angle=0x7f0102e7;
        /**  Defines whether to animate the current View when the ViewAnimation
             is first displayed. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateFirstView=0x7f01027c;
        /**  Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateLayoutChanges=0x7f0101a4;
        /**  Indicates whether the drawer should be opened/closed with an animation
             when the user clicks the handle. Default is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateOnClick=0x7f010292;
        /**  Animation to use on each child. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int animation=0x7f010321;
        /**  Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationCache=0x7f0101a8;
        /**  Sets how long a transition animation should run (in milliseconds)
             when layout has changed.  Only relevant if animation is turned on. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationDuration=0x7f0101e6;
        /**  The order in which the animations will be started. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Animations are started in the natural order. </td></tr>
<tr><td><code>reverse</code></td><td>1</td><td> Animations are started in the reverse order. </td></tr>
<tr><td><code>random</code></td><td>2</td><td> Animations are started randomly. </td></tr>
</table>
         */
        public static final int animationOrder=0x7f010322;
        /**  Timeout between frames of animation in milliseconds
             {@deprecated Not used by the framework.} 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int animationResolution=0x7f010229;
        /**  Enables or disables antialiasing. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int antialias=0x7f010305;
        /**  Indicates whether the application can accommodate any screen
             density.  Older applications are assumed to not be able to,
             new ones able to.  You can explicitly supply your abilities
             here. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int anyDensity=0x7f010454;
        /**  Value is a string that specifies the Maps API Key to use. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int apiKey=0x7f01035a;
        /**  Aspect to use when drawing LockPatternView. Choices are "square"(default), "lock_width"
             or "lock_height" 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int aspect=0x7f0103cf;
        /**  Name of the author of this component, e.g. Google. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int author=0x7f0103ae;
        /**  Specify the authorities under which this content provider can be
         found.  Multiple authorities may be supplied by separating them
         with a semicolon.  Authority names should use a Java-style naming
         convention (such as <code>com.google.provider.MyProvider</code>)
         in order to avoid conflicts.  Typically this name is the same
         as the class implementation describing the provider's data structure. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int authorities=0x7f01042a;
        /**  The view id of the AppWidget subview which should be auto-advanced.
             by the widget's host. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoAdvanceViewId=0x7f0103a9;
        /**  Default AutoCompleteTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoCompleteTextViewStyle=0x7f010089;
        /**  Controls whether links such as urls and email addresses are
         automatically found and converted to clickable links.  The default
         value is "none", disabling this feature. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00</td><td> Match no patterns (default). </td></tr>
<tr><td><code>web</code></td><td>0x01</td><td> Match Web URLs. </td></tr>
<tr><td><code>email</code></td><td>0x02</td><td> Match email addresses. </td></tr>
<tr><td><code>phone</code></td><td>0x04</td><td> Match phone numbers. </td></tr>
<tr><td><code>map</code></td><td>0x08</td><td> Match map addresses. </td></tr>
<tr><td><code>all</code></td><td>0x0f</td><td> Match all patterns (equivalent to web|email|phone|map). </td></tr>
</table>
         */
        public static final int autoLink=0x7f010128;
        /**  When true, automatically start animating 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int autoStart=0x7f01027e;
        /**  If set, specifies that this TextView has a textual input method
             and automatically corrects some common spelling errors.
             The default is "false".
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int autoText=0x7f01025e;
        /**  If provided and <code>true</code>, URLs entered in the search dialog while searching
             within this activity would be detected and treated as URLs (show a 'go' button in the
             keyboard and invoke the browser directly when user launches the URL instead of passing
             the URL to the activity). If set to <code>false</code> any URLs entered are treated as
             normal query text.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int autoUrlDetect=0x7f010356;
        /**  A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int background=0x7f010166;
        /**  Default background dim amount when a menu, dialog, or something similar pops up. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAmount=0x7f01001d;
        /**  Control whether dimming behind the window is enabled.  The default
             theme does not set this value, meaning it is based on whether the
             window is floating. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimEnabled=0x7f01001e;
        /**  Specifies a background drawable for the bottom component of a split action bar. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundSplit=0x7f0103d6;
        /**  Specifies a background drawable for a second stacked row of the action bar. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundStacked=0x7f0103d5;
        /**  The name of the class subclassing <code>BackupAgent</code> to manage
         backup and restore of the application's data on external storage. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backupAgent=0x7f01043b;
        /**  The offset of the baseline within this view. See {see android.view.View#getBaseline}
             for details 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baseline=0x7f0101f6;
        /**  If true, the image view will be baseline aligned with based on its
             bottom edge. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baselineAlignBottom=0x7f0101f4;
        /**  When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baselineAligned=0x7f0101fb;
        /**  When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int baselineAlignedChildIndex=0x7f0101fc;
        /**  Drawable to use as the icon bitmap. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int bitmap=0x7f0103e7;
        /**  Padding to use at the bottom of the prefs content. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int borderBottom=0x7f01020d;
        /**  Padding to use at the left of the prefs content. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int borderLeft=0x7f01020e;
        /**  Padding to use at the right of the prefs content. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int borderRight=0x7f01020f;
        /**  Padding to use at the top of the prefs content. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int borderTop=0x7f01020c;
        /**  Style for buttons without an explicit border, often used in groups. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int borderlessButtonStyle=0x7f010104;
        /**  Amount of bottom padding inside the gradient shape. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottom=0x7f0102f7;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int bottomBright=0x7f01013b;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int bottomDark=0x7f010137;
        /**  Radius of the bottom left corner. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomLeftRadius=0x7f0102f2;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int bottomMedium=0x7f01013c;
        /**  Extra offset for the handle at the bottom of the SlidingDrawer. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomOffset=0x7f01028f;
        /**  Radius of the bottom right corner. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomRightRadius=0x7f0102f3;
        /**  The short title for the bread crumb of this item. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int breadCrumbShortTitle=0x7f01036c;
        /**  The title for the bread crumb of this item. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int breadCrumbTitle=0x7f01036b;
        /**  Determines the minimum type that getText() will return.
             The default is "normal".
             Note that EditText and LogTextBox always return Editable,
             even if you specify something less powerful here. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Can return any CharSequence, possibly a
             Spanned one if the source text was Spanned. </td></tr>
<tr><td><code>spannable</code></td><td>1</td><td> Can only return Spannable. </td></tr>
<tr><td><code>editable</code></td><td>2</td><td> Can only return Spannable and Editable. </td></tr>
</table>
         */
        public static final int bufferType=0x7f010240;
        /**  Drawable used for the button graphic (e.g. checkbox, radio button, etc). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int button=0x7f0101d9;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarButtonStyle=0x7f010012;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarStyle=0x7f010011;
        /**  Normal Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyle=0x7f01004e;
        /**  Button style to inset into an EditText. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleInset=0x7f010050;
        /**  Small Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleSmall=0x7f01004f;
        /**  ToggleButton style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleToggle=0x7f010051;
        /**  Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x7f0101cf;
        /**  Whether the calendar view is shown. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int calendarViewShown=0x7f010288;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cameraBearing=0x7f010004;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cameraTargetLat=0x7f010005;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cameraTargetLng=0x7f010006;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cameraTilt=0x7f010007;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cameraZoom=0x7f010008;
        /**  Flag whether the accessibility service wants to be able to retrieve the
             active window content. This setting cannot be changed at runtime. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int canRetrieveWindowContent=0x7f0101c8;
        /**  A styled string, specifying the style to be used for showing
             inline candidate text when composing with an input method.  The
             text itself will be ignored, but the style spans will be applied
             to the candidate text as it is edited. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int candidatesTextStyleSpans=0x7f010047;
        /**  Declare that this application can't participate in the normal
             state save/restore mechanism.  Since it is not able to save and
             restore its state on demand,
             it can not participate in the normal activity lifecycle.  It will
             not be killed while in the background; the user must explicitly
             quit it.  Only one such app can be running at a time; if the user
             tries to launch a second such app, they will be prompted
             to quit the first before doing so.  While the
             application is running, the user will be informed of this.
             @hide 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cantSaveState=0x7f010445;
        /**  If set, specifies that this TextView has a textual input method
             and should automatically capitalize what the user types.
             The default is "none".
             {@deprecated Use inputType instead.} 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't automatically capitalize anything. </td></tr>
<tr><td><code>sentences</code></td><td>1</td><td> Capitalize the first word of each sentence. </td></tr>
<tr><td><code>words</code></td><td>2</td><td> Capitalize the first letter of every word. </td></tr>
<tr><td><code>characters</code></td><td>3</td><td> Capitalize every character. </td></tr>
</table>
         */
        @Deprecated
        public static final int capitalize=0x7f01025d;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int centerBright=0x7f01013a;
        /**  Optional center color. For linear gradients, use centerX or centerY
             to place the center color. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerColor=0x7f0102e4;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int centerDark=0x7f010136;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int centerMedium=0x7f01013d;
        /**  X coordinate of the origin of the gradient within the shape. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerX=0x7f0102e9;
        /**  Y coordinate of the origin of the gradient within the shape. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerY=0x7f0102ea;
        /**  Default style for CheckBoxPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkBoxPreferenceStyle=0x7f0100e9;
        /**  Drawable used for the check mark graphic. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkMark=0x7f0101da;
        /**  Whether the item is capable of displaying a check mark. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checkable=0x7f010362;
        /**  Whether the items are capable of displaying a check mark. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> The items are not checkable. </td></tr>
<tr><td><code>all</code></td><td>1</td><td> The items are all checkable. </td></tr>
<tr><td><code>single</code></td><td>2</td><td> The items are checkable and there will only be a single checked item in
                 this group. </td></tr>
</table>
         */
        public static final int checkableBehavior=0x7f01035d;
        /**  Default Checkbox style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkboxStyle=0x7f01008a;
        /**  Indicates the initial checked state of this button. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checked=0x7f0101d8;
        /**  The id of the child radio button that should be checked by default
             within this radio group. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int checkedButton=0x7f010232;
        /**  Default CheckedTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkedTextViewStyle=0x7f01008b;
        /**  Drawables to use for chevron animations. May be null. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int chevronDrawables=0x7f0103c6;
        /**  Drawable or color that is used as a divider for children. (It will drawn
             below and above child items.) The height of this will be the same as
             the height of the normal list item divider. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int childDivider=0x7f0101e5;
        /**  Indicator shown beside the child View. This can be a stateful Drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int childIndicator=0x7f0101e0;
        /**  The left bound for a child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int childIndicatorLeft=0x7f0101e3;
        /**  The right bound for a child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int childIndicatorRight=0x7f0101e4;
        /**  Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
         */
        public static final int choiceMode=0x7f0101d2;
        /**  Specify whether an activity's task should be cleared when it
         is re-launched from the home screen.  As a result, every time the
         user starts the task, they will be brought to its root activity,
         regardless of whether they used BACK or HOME to last leave it.
         This flag only applies to activities that
         are used to start the root of a new task.
         
         <p>An example of the use of this flag would be for the case where
         a user launches activity A from home, and from there goes to
         activity B.  They now press home, and then return to activity A.
         Normally they would see activity B, since that is what they were
         last doing in A's task.  However, if A has set this flag to true,
         then upon going to the background all of the tasks on top of it (B
         in this case) are removed, so when the user next returns to A they
         will restart at its original activity.
         
         <p>When this option is used in conjunction with
         {@link android.R.attr#allowTaskReparenting}, the allowTaskReparenting trumps the
         clear.  That is, all activities above the root activity of the
         task will be removed: those that have an affinity will be moved
         to the task they are associated with, otherwise they will simply
         be dropped as described here. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clearTaskOnLaunch=0x7f010424;
        /**  Color of the outline of click feedback. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clickColor=0x7f01022d;
        /**  Defines whether this view reacts to click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clickable=0x7f010187;
        /**  Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipChildren=0x7f0101a5;
        /**  The orientation for the clip. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Clip the drawable horizontally. </td></tr>
<tr><td><code>vertical</code></td><td>2</td><td> Clip the drawable vertically. </td></tr>
</table>
         */
        public static final int clipOrientation=0x7f01030c;
        /**  Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipToPadding=0x7f0101a6;
        /**  The unicode value or comma-separated values that this key outputs. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int codes=0x7f010397;
        /**  The zero-based index of the columns to collapse. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int collapseColumns=0x7f010235;
        /**  Solid color for the gradient shape. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int color=0x7f0102ec;
        /**  Default highlight color for items that are
             activated. (Activated meaning persistent selection.) 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorActivatedHighlight=0x7f01001a;
        /**  Color that matches (as closely as possible) the window background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorBackground=0x7f010015;
        /**  This is a hint for a solid color that can be used for caching
             rendered views.  This should be the color of the background when
             there is a solid background color; it should be null when the
             background is a texture or translucent.  When a device is able
             to use accelerated drawing (thus setting state_accelerated), the
             cache hint is ignored and always assumed to be transparent. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorBackgroundCacheHint=0x7f010016;
        /**  Default highlight color for items that are
             focused. (Focused meaning cursor-based selection.) 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorFocusedHighlight=0x7f010019;
        /**  Default color of foreground imagery. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorForeground=0x7f010013;
        /**  Default color of foreground imagery on an inverted background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorForegroundInverse=0x7f010014;
        /**  Default highlight color for items that are long-pressed. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorLongPressedHighlight=0x7f010018;
        /**  Default highlight color for items in multiple selection
             mode. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorMultiSelectHighlight=0x7f01001b;
        /**  Default highlight color for items that are pressed. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorPressedHighlight=0x7f010017;
        /**  The maxmimum number of columns to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnCount=0x7f010202;
        /**  Fraction of the animation duration used to delay the beginning of
         the animation of each column. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnDelay=0x7f010323;
        /**  When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnOrderPreserved=0x7f010205;
        /**  Specifies the fixed width for each column. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnWidth=0x7f0101ec;
        /**  Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the largest screens an application is
             compatible with.  This attribute provides the maximum
             "smallest screen width" (as per the -swNNNdp resource configuration)
             that the application is designed for.  If this value is smaller than
             the "smallest screen width" of the device it is running on, the user
             is offered to run it in a compatibility mode that emulates a
             smaller screen and zooms it to fit the screen. Currently the compatibility mode only
             emulates phone screens with a 320dp width, so compatibility mode is not applied if the
             value for compatibleWidthLimitDp is larger than 320. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int compatibleWidthLimitDp=0x7f01044d;
        /**  Defines the hint displayed in the drop down menu. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int completionHint=0x7f01026f;
        /**  Defines the hint view displayed in the drop down menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int completionHintView=0x7f010270;
        /**  Defines the number of characters that the user must type before
         completion suggestions are displayed in a drop down menu. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int completionThreshold=0x7f010271;
        /**  Specify one or more configuration changes that the activity will
         handle itself.  If not specified, the activity will be restarted
         if any of these configuration changes happen in the system.  Otherwise,
         the activity will remain running and its
         {@link android.app.Activity#onConfigurationChanged Activity.onConfigurationChanged}
         method called with the new configuration.
         
         <p>Note that all of these configuration changes can impact the
         resource values seen by the application, so you will generally need
         to re-retrieve all resources (including view layouts, drawables, etc)
         to correctly handle any configuration change.
         
         <p>These values must be kept in sync with those in
         {@link android.content.pm.ActivityInfo} and
         include/utils/ResourceTypes.h. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>mcc</code></td><td>0x0001</td><td> The IMSI MCC has changed, that is a SIM has been detected and
             updated the Mobile Country Code. </td></tr>
<tr><td><code>mnc</code></td><td>0x0002</td><td> The IMSI MNC has changed, that is a SIM has been detected and
             updated the Mobile Network Code. </td></tr>
<tr><td><code>locale</code></td><td>0x0004</td><td> The locale has changed, that is the user has selected a new
             language that text should be displayed in. </td></tr>
<tr><td><code>touchscreen</code></td><td>0x0008</td><td> The touchscreen has changed.  Should never normally happen. </td></tr>
<tr><td><code>keyboard</code></td><td>0x0010</td><td> The keyboard type has changed, for example the user has plugged
             in an external keyboard. </td></tr>
<tr><td><code>keyboardHidden</code></td><td>0x0020</td><td> The keyboard or navigation accessibility has changed, for example
             the user has slid the keyboard out to expose it.  Note that
             despite its name, this applied to any accessibility: keyboard
             or navigation. </td></tr>
<tr><td><code>navigation</code></td><td>0x0040</td><td> The navigation type has changed.  Should never normally happen. </td></tr>
<tr><td><code>orientation</code></td><td>0x0080</td><td> The screen orientation has changed, that is the user has
             rotated the device. </td></tr>
<tr><td><code>screenLayout</code></td><td>0x0100</td><td> The screen layout has changed.  This might be caused by a
             different display being activated. </td></tr>
<tr><td><code>uiMode</code></td><td>0x0200</td><td> The global user interface mode has changed.  For example,
             going in or out of car mode, night mode changing, etc. </td></tr>
<tr><td><code>screenSize</code></td><td>0x0400</td><td> The current available screen size has changed.  If applications don't
             target at least {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2}
             then the activity will always handle this itself (the change
             will not result in a restart).  This represents a change in the
             currently available size, so will change when the user switches
             between landscape and portrait. </td></tr>
<tr><td><code>smallestScreenSize</code></td><td>0x0800</td><td> The physical screen size has changed.  If applications don't
             target at least {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2}
             then the activity will always handle this itself (the change
             will not result in a restart).  This represents a change in size
             regardless of orientation, so will only change when the actual
             physical screen size has changed such as switching to an external
             display. </td></tr>
<tr><td><code>layoutDirection</code></td><td>0x2000</td><td> The layout direction has changed. For example going from LTR to RTL. </td></tr>
<tr><td><code>fontScale</code></td><td>0x40000000</td><td> The font scaling factor has changed, that is the user has
             selected a new global font size. </td></tr>
</table>
         */
        public static final int configChanges=0x7f010431;
        /**  A class name in the AppWidget's package to be launched to configure.
             If not supplied, then no activity will be launched. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int configure=0x7f0103a7;
        /**  If true, the drawable's reported internal size will remain
             constant as the state changes; the size is the maximum of all
             of the states.  If false, the size will vary based on the
             current state. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int constantSize=0x7f0102d7;
        /**  Identifier for the child that represents the drawer's content. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int content=0x7f01028e;
        /**  the authority of a content provider. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentAuthority=0x7f0103b3;
        /**  Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentDescription=0x7f010190;
        /**  If true, the image will be cropped to fit within its padding. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cropToPadding=0x7f0101f5;
        /**  Makes the cursor visible (the default) or invisible. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cursorVisible=0x7f010244;
        /**  Specifies a layout for custom navigation. Overrides navigationMode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int customNavigationLayout=0x7f0103d7;
        /**  Account handles its own token storage and permissions.
             Default to false
          
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int customTokens=0x7f0103b2;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cycles=0x7f010328;
        /**  Gap between dashes in the stroke. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dashGap=0x7f0102ee;
        /**  Length of a dash in the stroke. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dashWidth=0x7f0102ed;
        /**  The data URI to assign to the Intent, as per
            {@link android.content.Intent#setData Intent.setData()}.
            <p><em>Note: scheme and host name matching in the Android framework is
            case-sensitive, unlike the formal RFC.  As a result,
            URIs here should always be normalized to use lower case letters
            for these elements (as well as other proper Uri normalization).</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int data=0x7f010466;
        /**  The DatePicker style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int datePickerStyle=0x7f0100c3;
        /**  The text appearance for the calendar dates. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dateTextAppearance=0x7f0102cb;
        /**  Flag indicating whether the application can be debugged, even when
         running on a device that is running in user mode. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int debuggable=0x7f010419;
        /**  The default value for the preference, which will be set either if persistence
             is off or persistence is on and the preference is not found in the persistent
             storage.  
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a floating point value, such as "<code>1.2</code>".
         */
        public static final int defaultValue=0x7f010373;
        /**  Fraction of the animation duration used to delay the beginning of
         the animation of each child. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int delay=0x7f010320;
        /**  The key of another Preference that this Preference will depend on.  If the other
             Preference is not set or is off, this Preference will be disabled. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dependency=0x7f010372;
        /**  Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
         */
        public static final int descendantFocusability=0x7f0101ac;
        /**  Descriptive text for the associated data. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int description=0x7f010432;
        /**  Special option for window animations: if this window is on top
             of a wallpaper, don't animate the wallpaper with it. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int detachWallpaper=0x7f010314;
        /**  Column in data table that contains details for this data. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int detailColumn=0x7f0103b9;
        /**  Flag indicating that detail should be built from SocialProvider. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int detailSocialSummary=0x7f0103ba;
        /**  Background that can be used behind parts of a UI that provide
             details on data the user is selecting.  For example, this is
             the background element of PreferenceActivity's embedded
             preference fragment. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int detailsElementBackground=0x7f01007f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dial=0x7f0101d4;
        /**  Window decor layout to use in dialog mode with custom titles 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogCustomTitleDecorLayout=0x7f0100fb;
        /**  The icon for the dialog. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogIcon=0x7f01037a;
        /**  A layout to be used as the content View for the dialog. By default, this shouldn't
             be needed. If a custom DialogPreference is required, this should be set. For example,
             the EditTextPreference uses a layout with an EditText as this attribute. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogLayout=0x7f01037d;
        /**  The message in the dialog. If a dialogLayout is provided and contains
             a TextView with ID android:id/message, this message will be placed in there. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dialogMessage=0x7f010379;
        /**  Default style for DialogPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogPreferenceStyle=0x7f0100eb;
        /**  Theme to use for dialogs spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogTheme=0x7f0100f9;
        /**  The title in the dialog. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dialogTitle=0x7f010378;
        /**  Window decor layout to use in dialog mode with title only 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogTitleDecorLayout=0x7f0100fc;
        /**  Window decor layout to use in dialog mode with icons 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogTitleIconsDecorLayout=0x7f0100fa;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int digit=0x7f010401;
        /**  If set, specifies that this TextView has a numeric input method
             and that these specific characters are the ones that it will
             accept.
             If this is set, numeric is implied to be true.
             The default is false. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int digits=0x7f01025a;
        /**  Direction of the animation in the grid. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left_to_right</code></td><td>0x0</td><td> Animates columns from left to right. </td></tr>
<tr><td><code>right_to_left</code></td><td>0x1</td><td> Animates columns from right to left. </td></tr>
<tr><td><code>top_to_bottom</code></td><td>0x0</td><td> Animates rows from top to bottom. </td></tr>
<tr><td><code>bottom_to_top</code></td><td>0x2</td><td> Animates rows from bottom to top. </td></tr>
</table>
         */
        public static final int direction=0x7f010325;
        /**  Reference to an array resource that be used to announce the directions with targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int directionDescriptions=0x7f0103c4;
        /**  Priority of the rows and columns. When the priority is none,
         both rows and columns have the same priority. When the priority is
         column, the animations will be applied on the columns first. The same
         goes for rows. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Rows and columns are animated at the same time. </td></tr>
<tr><td><code>column</code></td><td>1</td><td> Columns are animated first. </td></tr>
<tr><td><code>row</code></td><td>2</td><td> Rows are animated first. </td></tr>
</table>
         */
        public static final int directionPriority=0x7f010326;
        /**  Whether this spinner should mark child views as enabled/disabled when
             the spinner itself is enabled/disabled. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disableChildrenWhenDisabled=0x7f010284;
        /**  The state (true for on, or false for off) that causes dependents to be disabled. By default,
             dependents will be disabled when this is unchecked, so the value of this preference is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disableDependentsState=0x7f010377;
        /**  Default disabled alpha for widgets that set enabled/disabled alpha programmatically. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disabledAlpha=0x7f01001c;
        /**  Options affecting how the action bar is displayed. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
<tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
<tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
</table>
         */
        public static final int displayOptions=0x7f0103d1;
        /**  Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dither=0x7f0102d8;
        /**  Drawable or color to draw between list items. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int divider=0x7f010206;
        /**  Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerHeight=0x7f010207;
        /**  Drawable to use for generic horizontal dividers. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerHorizontal=0x7f010101;
        /**  Size of padding on either end of a divider. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerPadding=0x7f010200;
        /**  Drawable to use for generic vertical dividers. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerVertical=0x7f010100;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dotSize=0x7f0103fa;
        /**  When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x7f0101ca;
        /**  Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawable=0x7f0102dd;
        /**  @hide The alpha value (0-255) set on the ImageView's drawable. Equivalent
             to calling ImageView.setAlpha(int), not the same as View.setAlpha(float). 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawableAlpha=0x7f0101f7;
        /**  The drawable to be drawn below the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableBottom=0x7f010262;
        /**  The drawable to be drawn to the end of the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableEnd=0x7f010266;
        /**  The drawable to be drawn to the left of the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableLeft=0x7f010263;
        /**  The padding between the drawables and the text. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawablePadding=0x7f010267;
        /**  The drawable to be drawn to the right of the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableRight=0x7f010264;
        /**  The drawable to be drawn to the start of the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableStart=0x7f010265;
        /**  The drawable to be drawn above the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int drawableTop=0x7f010261;
        /**  Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Lets the framework decide what quality level should be used
                 for the drawing cache. </td></tr>
<tr><td><code>low</code></td><td>1</td><td> Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory. </td></tr>
<tr><td><code>high</code></td><td>2</td><td> High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory. </td></tr>
</table>
         */
        public static final int drawingCacheQuality=0x7f01018b;
        /**  View to anchor the auto-complete dropdown to. If not specified, the text view itself
             is used. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownAnchor=0x7f010275;
        /**  Specifies the basic height of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant height,
             fill_parent or match_parent to fill the height of the
             screen, or wrap_content to match the height of
             the content of the drop down. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the height of the content. </td></tr>
</table>
         */
        public static final int dropDownHeight=0x7f010277;
        /**  Default style for drop down hints. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownHintAppearance=0x7f0100b2;
        /**  Amount of pixels by which the drop down should be offset horizontally. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropDownHorizontalOffset=0x7f010274;
        /**  Default style for drop down items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownItemStyle=0x7f0100b0;
        /**  Default ListView style for drop downs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownListViewStyle=0x7f01008c;
        /**  Selector in a drop down list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int dropDownSelector=0x7f010272;
        /**  Default dropdown Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownSpinnerStyle=0x7f0100a8;
        /**  Amount of pixels by which the drop down should be offset vertically. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropDownVerticalOffset=0x7f010273;
        /**  Specifies the basic width of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant width,
             fill_parent or match_parent to match the width of the
             screen, or wrap_content to match the width of
             the anchored view. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fill the width of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the width of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the width of its anchor. </td></tr>
</table>
         */
        public static final int dropDownWidth=0x7f010276;
        /**  The preferred item height for dropdown lists. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropdownListPreferredItemHeight=0x7f010064;
        /**  When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duplicateParentState=0x7f01018d;
        /**  Amount of time (in milliseconds) to display this frame. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duration=0x7f0102dc;
        /**  EditText background drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextBackground=0x7f010044;
        /**  EditText text foreground color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int editTextColor=0x7f010043;
        /**  Default style for EditTextPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextPreferenceStyle=0x7f0100ec;
        /**  Default EditText style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextStyle=0x7f01008d;
        /**  If set, specifies that this TextView has an input method.
             It will be a textual one unless it has otherwise been specified.
             For TextView, this is false by default.  For EditText, it is
             true by default.
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int editable=0x7f01025f;
        /**  Reference to an
             {@link android.R.styleable#InputExtras &lt;input-extras&gt;}
             XML resource containing additional data to
             supply to an input method, which is private to the implementation
             of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#extras
             EditorInfo.extras} field when the input
             method is connected. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editorExtras=0x7f01026e;
        /**  Where to ellipsize text. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>start</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>3</td><td></td></tr>
<tr><td><code>marquee</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int ellipsize=0x7f010122;
        /**  Makes the TextView be exactly this many ems wide. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ems=0x7f01024a;
        /**  true if the storage is emulated via the FUSE sdcard daemon 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int emulated=0x7f0103ee;
        /**  Specifies whether the widget is enabled. The interpretation of the enabled state varies by subclass.
             For example, a non-enabled EditText prevents the user from editing the contained text, and
             a non-enabled Button prevents the user from tapping the button.
             The appearance of enabled and non-enabled widgets may differ, if the drawables referenced
             from evaluating state_enabled differ. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enabled=0x7f010250;
        /**  End color of the gradient. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int endColor=0x7f0102e5;
        /**  The last year (inclusive), for example "2010".
             {@deprecated Use maxDate instead.}
         
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int endYear=0x7f010286;
        /**  Amount of time (in milliseconds) to fade in a new state drawable. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enterFadeDuration=0x7f0102d9;
        /**  Reference to an array resource that will populate a list/adapter. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int entries=0x7f010129;
        /**  The array to find the value to save for a preference when an entry from
             entries is selected. If a user clicks on the second item in entries, the
             second item in this array will be saved to the preference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int entryValues=0x7f01037e;
        /**  Background used instead of errorMessageBackground when the popup has to be above. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int errorMessageAboveBackground=0x7f010046;
        /**  Popup text displayed in TextView when setError is used. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int errorMessageBackground=0x7f010045;
        /**  Defines whether the overlay should intercept the motion events when a gesture
             is recognized. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int eventsInterceptionEnabled=0x7f01029c;
        /**  Indicates that an Activity should be excluded from the list of
         recently launched activities. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int excludeFromRecents=0x7f010428;
        /**  Amount of time (in milliseconds) to fade out an old state drawable. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int exitFadeDuration=0x7f0102da;
        /**  The drawable to show in the button for expanding the activities overflow popup.
             <strong>Note:</strong> Clients would like to set this drawable
             as a clue about the action the chosen activity will perform. For
             example, if share activity is to be chosen the drawable should
             give a clue that sharing is to be performed.
         
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandActivityOverflowButtonDrawable=0x7f010368;
        /**  The preferred left bound for an expandable list child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredChildIndicatorLeft=0x7f010062;
        /**  The preferred right bound for an expandable list child's indicator. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredChildIndicatorRight=0x7f010063;
        /**  The preferred left padding for an expandable list item that is a child.
             If this is not provided, it defaults to the expandableListPreferredItemPaddingLeft. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredChildPaddingLeft=0x7f01005f;
        /**  The preferred left bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorLeft. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredItemIndicatorLeft=0x7f010060;
        /**  The preferred right bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorRight. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredItemIndicatorRight=0x7f010061;
        /**  The preferred left padding for an expandable list item (for child-specific layouts,
             use expandableListPreferredChildPaddingLeft). This takes into account
             the indicator that will be shown to next to the item. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int expandableListPreferredItemPaddingLeft=0x7f01005e;
        /**  Default ExpandableListView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandableListViewStyle=0x7f01008e;
        /**  ExpandableListView with white background. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandableListViewWhiteStyle=0x7f01008f;
        /**  Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int exported=0x7f01041c;
        /**  This drawable is a state list where the "activated" state
             indicates active media routing. Non-activated indicates
             that media is playing to the local device only.
             @hide 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int externalRouteEnabledDrawable=0x7f0103f5;
        /**  This is the amount by which to multiply the tension. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int extraTension=0x7f01032a;
        /**  This is the amount of deceleration to add when easing in. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int factor=0x7f010327;
        /**  Duration, in milliseconds, of the fade out effect after the user is done
             drawing a gesture. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeDuration=0x7f010297;
        /**  Defines whether the gesture will automatically fade out after being recognized. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeEnabled=0x7f01029d;
        /**  Time, in milliseconds, to wait before the gesture fades out after the user
             is done drawing it. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeOffset=0x7f010296;
        /**  Defines whether to fade out scrollbars when they are not in use. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeScrollbars=0x7f010175;
        /**  This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).
             Using fading edges may introduce noticeable performance
             degradations and should be used only when required by the application's
             visual design. To request fading edges with API level 14 and above,
             use the <code>android:requiresFadingEdge</code> attribute instead. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int fadingEdge=0x7f01017f;
        /**  Defines the length of the fading edges. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadingEdgeLength=0x7f010181;
        /**  When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollAlwaysVisible=0x7f0101d3;
        /**  Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollEnabled=0x7f0101d0;
        /**  Position of the fast scroll index overlay window. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>floating</code></td><td>0</td><td></td></tr>
<tr><td><code>atThumb</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int fastScrollOverlayPosition=0x7f0100c9;
        /**  Drawable to use as the fast scroll index preview window background
             when shown on the left. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fastScrollPreviewBackgroundLeft=0x7f0100c7;
        /**  Drawable to use as the fast scroll index preview window background
             when shown on the right. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fastScrollPreviewBackgroundRight=0x7f0100c6;
        /**  Text color for the fast scroll index overlay. Make sure it
             plays nicely with fastScrollPreviewBackground[Left|Right]. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollTextColor=0x7f0100ca;
        /**  Drawable to use as the fast scroll thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fastScrollThumbDrawable=0x7f0100c5;
        /**  Drawable to use as the track for the fast scroll thumb.
             This may be null. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fastScrollTrackDrawable=0x7f0100c8;
        /**  Number of waves/chevrons to show in animation. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int feedbackCount=0x7f0103cb;
        /**  When set to true, the animation transformation is applied after the animation is
             over. The default value is false. If fillEnabled is not set to true and the
             animation is not set on a View, fillAfter is assumed to be true.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillAfter=0x7f01030f;
        /**  When set to true or when fillEnabled is not set to true, the animation transformation
             is applied before the animation has started. The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillBefore=0x7f01030e;
        /**  When set to true, the value of fillBefore is taken into account. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillEnabled=0x7f01030d;
        /**  Defines whether the scrollview should stretch its content to fill the viewport. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillViewport=0x7f010280;
        /**  Enables or disables bitmap filtering. Filtering is used when the bitmap is
             shrunk or stretched to smooth its apperance. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int filter=0x7f010306;
        /**  Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int filterTouchesWhenObscured=0x7f01018a;
        /**  Drawable for WebView find-on-page dialogue's "next" button. @hide 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int findOnPageNextDrawable=0x7f010116;
        /**  Drawable for WebView find-on-page dialogue's "previous" button. @hide 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int findOnPagePreviousDrawable=0x7f010117;
        /**  Specify whether an activity should be finished when a "close system
         windows" request has been made.  This happens, for example, when
         the home key is pressed, when the device is locked, when a system
         dialog showing recent applications is displayed, etc. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int finishOnCloseSystemDialogs=0x7f010423;
        /**  Specify whether an activity should be finished when its task is
         brought to the foreground by relaunching from the home screen.
         
         <p>If both this option and {@link android.R.attr#allowTaskReparenting} are
         specified, the finish trumps the affinity: the affinity will be
         ignored and the activity simply finished. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int finishOnTaskLaunch=0x7f010422;
        /**  The first day of week according to {@link java.util.Calendar}. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int firstDayOfWeek=0x7f0102c1;
        /**  Location along the circle of the first item, in degrees.
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int firstItemOffset=0x7f0103bf;
        /**  Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fitsSystemWindows=0x7f010171;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int flipInterval=0x7f01027d;
        /**  Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusable=0x7f01016e;
        /**  Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusableInTouchMode=0x7f01016f;
        /**  The color for the dates of the focused month. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int focusedMonthDateColor=0x7f0102c5;
        /**  Default font family. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontFamily=0x7f010119;
        /**  When set to false, the ListView will not draw the divider before each footer view.
             The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int footerDividersEnabled=0x7f010209;
        /**  Defines the drawable to draw over the content. This can be used as an overlay.
             The foreground drawable participates in the padding of the content if the gravity
             is set to fill. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int foreground=0x7f0101db;
        /**  Defines the gravity to apply to the foreground drawable. The gravity defaults
             to fill. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
         */
        public static final int foregroundGravity=0x7f0101dc;
        /**  Defines whether the foreground drawable should be drawn inside the padding.
             This property is turned on by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int foregroundInsidePadding=0x7f0101dd;
        /**  Format string: if specified, the Chronometer will display this
             string, with the first "%s" replaced by the current timer value
             in "MM:SS" or "H:MM:SS" form.
             If no format string is specified, the Chronometer will simply display
             "MM:SS" or "H:MM:SS". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format=0x7f0101d7;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm aa". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format12Hour=0x7f01023d;
        /**  Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "k:mm". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int format24Hour=0x7f01023e;
        /**  The fragment that is displayed when the user selects this item. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fragment=0x7f01036d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentCloseEnterAnimation=0x7f010146;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentCloseExitAnimation=0x7f010147;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentFadeEnterAnimation=0x7f010148;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentFadeExitAnimation=0x7f010149;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentOpenEnterAnimation=0x7f010144;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentOpenExitAnimation=0x7f010145;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int frameDuration=0x7f0102ff;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int framesCount=0x7f010300;
        /**  If set, the text view will include its current complete text
             inside of its frozen icicle in addition to meta-data such as
             the current cursor position.  By default this is disabled;
             it can be useful when the contents of a text view is not stored
             in a persistent place such as a content provider. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int freezesText=0x7f010260;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromAlpha=0x7f01031e;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromDegrees=0x7f0102fb;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromXDelta=0x7f01031a;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromXScale=0x7f010316;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromYDelta=0x7f01031c;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fromYScale=0x7f010318;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int fullBright=0x7f010138;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int fullDark=0x7f010134;
        /**  Flag indicating that an Instrumentation class should be run as a
         functional test. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int functionalTest=0x7f010435;
        /**  The preferred background for gallery items. This should be set
             as the background of any Views you provide from the Adapter. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int galleryItemBackground=0x7f010052;
        /**  Default Gallery style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int galleryStyle=0x7f010090;
        /**  Color used to draw a gesture. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureColor=0x7f010294;
        /**  Default GestureOverlayView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int gestureOverlayViewStyle=0x7f010091;
        /**  Minimum curve angle a stroke must contain before it is recognized as a gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeAngleThreshold=0x7f01029b;
        /**  Minimum length of a stroke before it is recognized as a gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeLengthThreshold=0x7f010299;
        /**  Squareness threshold of a stroke before it is recognized as a gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeSquarenessThreshold=0x7f01029a;
        /**  Defines the type of strokes that define a gesture. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>single</code></td><td>0</td><td> A gesture is made of only one stroke. </td></tr>
<tr><td><code>multiple</code></td><td>1</td><td> A gesture is made of multiple strokes. </td></tr>
</table>
         */
        public static final int gestureStrokeType=0x7f010298;
        /**  Width of the stroke used to draw the gesture. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStrokeWidth=0x7f010293;
        /**  The GLES driver version number needed by an application.
             The higher 16 bits represent the major number and the lower 16 bits
             represent the minor number. For example for GL 1.2 referring to
             0x00000102, the actual value should be set as 0x00010002. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int glEsVersion=0x7f010447;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int glowDot=0x7f0103fc;
        /**  Radius of glow under finger. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int glowRadius=0x7f0103be;
        /**  Radius of the gradient, used only with radial gradient. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gradientRadius=0x7f0102eb;
        /**  If true, the {@link android.content.Context#grantUriPermission
         Context.grantUriPermission} or corresponding Intent flags can
         be used to allow others to access specific URIs in the content
         provider, even if they do not have an explicit read or write
         permission.  If you are supporting this feature, you must be
         sure to call {@link android.content.Context#revokeUriPermission
         Context.revokeUriPermission} when URIs are deleted from your
         provider.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int grantUriPermissions=0x7f01040f;
        /**  Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.  
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int gravity=0x7f010127;
        /**  Default GridView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int gridViewStyle=0x7f010092;
        /**  Indicator shown beside the group View. This can be a stateful Drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int groupIndicator=0x7f0101df;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int hand_hour=0x7f0101d5;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int hand_minute=0x7f0101d6;
        /**  Identifier for the child that represents the drawer's handle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handle=0x7f01028d;
        /**  Sets a drawable as the drag center. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handleDrawable=0x7f0103c5;
        /**  Flag indicating that an Instrumentation class wants to take care
         of starting/stopping profiling itself, rather than relying on
         the default behavior of profiling the complete time it is running.
         This allows it to target profiling data at a specific set of
         operations. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int handleProfiling=0x7f010434;
        /**  Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hapticFeedbackEnabled=0x7f01018f;
        /**  <p>Flag indicating whether the application's rendering should be hardware
         accelerated if possible. This flag is turned on by default for applications
         that are targeting {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}
         or later.</p>
         <p>This flag can be set on the application and any activity declared
         in the manifest. When enabled for the application, each activity is
         automatically assumed to be hardware accelerated. This flag can be
         overridden in the activity tags, either turning it off (if on for the
         application) or on (if off for the application.)</p>
         <p>When this flag is turned on for an activity (either directly or via
         the application tag), every window created from the activity, including
         the activity's own window, will be hardware accelerated, if possible.</p>
         <p>Please refer to the documentation of
         {@link android.view.WindowManager.LayoutParams#FLAG_HARDWARE_ACCELERATED}
         for more information on how to control this flag programmatically.</p> 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hardwareAccelerated=0x7f01041b;
        /**  Indicate whether this application contains code.  If set to false,
             there is no code associated with it and thus the system will not
             try to load its code when launching components.  The default is true
             for normal behavior. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasCode=0x7f010443;
        /**  Default background for the menu header. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int headerBackground=0x7f010214;
        /**  When set to false, the ListView will not draw the divider after each header view.
             The default value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int headerDividersEnabled=0x7f010208;
        /**  Makes the TextView be exactly this many pixels tall.
             You could get the same effect by specifying this number in the
             layout parameters. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int height=0x7f010247;
        /**  Hint text to display when the text is empty. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hint=0x7f010242;
        /**  Specifies a drawable to use for the 'home as up' indicator. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeAsUpIndicator=0x7f010110;
        /**  Specifies a layout to use for the "home" section of the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeLayout=0x7f0103d8;
        /**  Default horizontal divider between rows of menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int horizontalDivider=0x7f010212;
        /**  Default horizontal gap between keys. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x7f010393;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int horizontalProgressLayout=0x7f010143;
        /**  Default HorizontalScrollView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int horizontalScrollViewStyle=0x7f0100a6;
        /**  Defines the default horizontal spacing between columns. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalSpacing=0x7f0101e9;
        /**  Specify a URI authority host that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.
             <p><em>Note: host name matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             host names here should always use lower case letters.</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int host=0x7f010460;
        /**  X coordinate of the icon hot spot. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hotSpotX=0x7f0103e8;
        /**  Y coordinate of the icon hot spot. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hotSpotY=0x7f0103e9;
        /**  A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010405;
        /**  The icon to show in the popup preview. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconPreview=0x7f01039e;
        /**  The default state of the SearchView. If true, it will be iconified when not in
             use and expanded when clicked. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int iconifiedByDefault=0x7f0103dc;
        /**  Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int id=0x7f010162;
        /**  Indicates what view should not be affected by gravity. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ignoreGravity=0x7f0101fa;
        /**  The style resource to use for an ImageButton. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imageButtonStyle=0x7f010093;
        /**  The style resource to use for an ImageButton that is an image well. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imageWellStyle=0x7f010094;
        /**  Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeActionId=0x7f01026d;
        /**  Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeActionLabel=0x7f01026c;
        /**  Animation to use when showing the fullscreen extract UI after
             it had previously been hidden. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imeExtractEnterAnimation=0x7f010384;
        /**  Animation to use when hiding the fullscreen extract UI after
             it had previously been shown. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imeExtractExitAnimation=0x7f010385;
        /**  Background to use for entire input method when it is being
             shown in fullscreen mode with the extract view, to ensure
             that it completely covers the application.  This allows,
             for example, the candidate view to be hidden
             while in fullscreen mode without having the application show through
             behind it.
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int imeFullscreenBackground=0x7f010383;
        /**  Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.  The constants
         here correspond to those defined by
         {@link android.view.inputmethod.EditorInfo#imeOptions}. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td> The action key performs a "previous"
             operation, taking the user to the previous field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td> Used to request that the IME never go
             into fullscreen mode.  Applications need to be aware that the flag is not
             a guarantee, and not all IMEs will respect it.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td> Like flagNavigateNext, but
             specifies there is something interesting that a backward navigation
             can focus on.  If the user selects the IME's facility to backward
             navigate, this will show up in the application as an actionPrevious
             at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td> Used to specify that there is something
             interesting that a forward navigation can focus on. This is like using
             actionNext, except allows the IME to be multiline (with
             an enter key) as well as provide forward navigation.  Note that some
             IMEs may not be able to do this, especially when running on a small
             screen where there is little space.  In that case it does not need to
             present a UI for this option.  Like actionNext, if the
             user selects the IME's facility to forward navigate, this will show up
             in the application at
             {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td> Used to request that the IME should be capable of inputting ASCII
             characters.  The intention of this flag is to ensure that the user
             can type Roman alphabet characters in a {@link android.widget.TextView}
             used for, typically, account ID or password input.  It is expected that IMEs
             normally are able to input ASCII even without being told so (such IMEs
             already respect this flag in a sense), but there could be some cases they
             aren't when, for instance, only non-ASCII input languagaes like Arabic,
             Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
             aware that the flag is not a guarantee, and not all IMEs will respect it.
             However, it is strongly recommended for IME authors to respect this flag
             especially when their IME could end up with a state that has only non-ASCII
             input languages enabled.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. </td></tr>
</table>
         */
        public static final int imeOptions=0x7f010124;
        /**  The extra value of the subtype. This string can be any string and will be passed to
             the IME when the framework calls the IME with the subtype.  
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeSubtypeExtraValue=0x7f0101bf;
        /**  The locale of the subtype. This string should be a locale (e.g. en_US, fr_FR...)
             and will be passed to the IME when the framework calls the IME
             with the subtype. This is also used by the framework to know the supported locales
             of the IME.  
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeSubtypeLocale=0x7f0101bb;
        /**  The mode of the subtype. This string can be a mode (e.g. voice, keyboard...) and this
             string will be passed to the IME when the framework calls the IME with the
             subtype.  
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imeSubtypeMode=0x7f0101bc;
        /**  Flag declaring this activity to be 'immersive'; immersive activities
         should not be interrupted with other activities or notifications. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int immersive=0x7f01042c;
        /**  Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen. Note: While not recommended, an accessibility service may
             decide to ignore this attribute and operate on all views in the view tree. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> The system determines whether the view is important for accessibility - default
                 (recommended). </td></tr>
<tr><td><code>yes</code></td><td>1</td><td> The view is important for accessibility. </td></tr>
<tr><td><code>no</code></td><td>2</td><td> The view is not important for accessibility. </td></tr>
</table>
         */
        public static final int importantForAccessibility=0x7f0101a2;
        /**  Identifier for the animation to use when a view is shown. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int inAnimation=0x7f01027a;
        /**  Leave enough room for ascenders and descenders instead of
             using the font ascent and descent strictly.  (Normally true). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int includeFontPadding=0x7f010252;
        /**  If provided and <code>true</code>, this searchable activity will be
             included in any global lists of search targets.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int includeInGlobalSearch=0x7f010353;
        /**  Allows to enable the indeterminate mode. In this mode the progress
         bar plays an infinite looping animation. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indeterminate=0x7f010220;
        /**  Defines how the indeterminate mode should behave when the progress
        reaches max. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Progress starts over from 0. </td></tr>
<tr><td><code>cycle</code></td><td>2</td><td> Progress keeps the current value and goes back to 0. </td></tr>
</table>
         */
        public static final int indeterminateBehavior=0x7f010225;
        /**  Drawable used for the indeterminate mode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indeterminateDrawable=0x7f010222;
        /**  Duration of the indeterminate animation. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indeterminateDuration=0x7f010224;
        /**  Restricts to ONLY indeterminate mode (state-keeping progress mode will not work). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indeterminateOnly=0x7f010221;
        /**  Specifies a style resource to use for an indeterminate progress spinner. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indeterminateProgressStyle=0x7f0103d9;
        /**  The left bound for an item's indicator. To specify a left bound specific to children,
             use childIndicatorLeft. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indicatorLeft=0x7f0101e1;
        /**  The right bound for an item's indicator. To specify a right bound specific to children,
             use childIndicatorRight. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int indicatorRight=0x7f0101e2;
        /**  Overrides the id of the inflated View with this value. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int inflatedId=0x7f0101af;
        /**  Specify the order in which content providers hosted by a process
         are instantiated when that process is created.  Not needed unless
         you have providers with dependencies between each other, to make
         sure that they are created in the order needed by those dependencies.
         The value is a simple integer, with higher numbers being
         initialized first. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int initOrder=0x7f01042d;
        /**  The maximal number of items initially shown in the activity list. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int initialActivityCount=0x7f010367;
        /**  A resource id of a layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int initialKeyguardLayout=0x7f0103a6;
        /**  A resource id of a layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int initialLayout=0x7f0103a5;
        /**  Inner radius of the ring. When defined, innerRadiusRatio is ignored. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadius=0x7f0102e1;
        /**  Inner radius of the ring expressed as a ratio of the ring's width. For instance,
             if innerRadiusRatio=9, then the inner radius equals the ring's width divided by 9.
             This value is ignored if innerRadius is defined. Default value is 9. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadiusRatio=0x7f0102df;
        /**  If set, specifies that this TextView should use the specified
             input method (specified by fully-qualified class name).
             {@deprecated Use inputType instead.} 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int inputMethod=0x7f01025c;
        /**  The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
         */
        public static final int inputType=0x7f010123;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetBottom=0x7f010304;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetLeft=0x7f010301;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetRight=0x7f010302;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int insetTop=0x7f010303;
        /**  The default install location defined by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Let the system decide ideal install location </td></tr>
<tr><td><code>internalOnly</code></td><td>1</td><td> Explicitly request to be installed on internal phone storage
             only. </td></tr>
<tr><td><code>preferExternal</code></td><td>2</td><td> Prefer to be installed on SD card. There is no guarantee that
             the system will honor this request. The application might end
             up being installed on internal storage if external media
             is unavailable or too full. </td></tr>
</table>
         */
        public static final int installLocation=0x7f010440;
        /**  @hide The layout of the date picker. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int internalLayout=0x7f01028b;
        /**  @hide The max height of the NumberPicker. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int internalMaxHeight=0x7f0102d1;
        /**  @hide The max width of the NumberPicker. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int internalMaxWidth=0x7f0102d3;
        /**  @hide The min height of the NumberPicker. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int internalMinHeight=0x7f0102d0;
        /**  @hide The min width of the NumberPicker. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int internalMinWidth=0x7f0102d2;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int interpolator=0x7f010228;
        /**  Set to true to tell the SyncManager to automatically call setIsSyncable(..., ..., 1)
             for the SyncAdapter instead of issuaing an initialization sync to the SyncAdapter.
             Defaults to false.
             
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isAlwaysSyncable=0x7f0103b7;
        /**  Set true if the subtype is auxiliary.  An auxiliary subtype won't be shown in the
             input method selection list in the settings app.
             InputMethodManager#switchToLastInputMethod will ignore auxiliary subtypes when it
             chooses a target subtype. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isAuxiliary=0x7f0101bd;
        /**  Set to true in all of the configurations for which this input
             method should be considered an option as the default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isDefault=0x7f0101ba;
        /**  Whether this rating bar is an indicator (and non-changeable by the user). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isIndicator=0x7f010231;
        /**  Whether this is a modifier key such as Alt or Shift. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isModifier=0x7f01039b;
        /**  Whether long-pressing on this key will make it repeat. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isRepeatable=0x7f01039d;
        /**  Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isScrollContainer=0x7f010174;
        /**  Whether this is a toggle key. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isSticky=0x7f01039c;
        /**  If set to true, this service will run under a special process
             that is isolated from the rest of the system.  The only communication
             with it is through the Service API (binding and starting). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isolatedProcess=0x7f010459;
        /**  Default background for each menu item. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int itemBackground=0x7f010215;
        /**  Default disabled icon alpha for each menu item that shows an icon. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int itemIconDisabledAlpha=0x7f010216;
        /**  Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int itemPadding=0x7f0103db;
        /**  Default appearance of menu item text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int itemTextAppearance=0x7f010211;
        /**  Controls whether the view's window should keep the screen on
             while visible. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keepScreenOn=0x7f01018c;
        /**  The key to store the Preference value. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int key=0x7f01036e;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x7f010387;
        /**  Key edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
         */
        public static final int keyEdgeFlags=0x7f01039a;
        /**  Default height of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHeight=0x7f010392;
        /**  The icon to display on the key instead of the label. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyIcon=0x7f0103a1;
        /**  The label to display on the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabel=0x7f0103a0;
        /**  The string of characters to output when this key is pressed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyOutputText=0x7f01039f;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x7f01038d;
        /**  Layout resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLayout=0x7f01038b;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x7f01038c;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x7f01038a;
        /**  Size of the text for character keys. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextSize=0x7f010388;
        /**  Default width of a key, in pixels or percentage of display width. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyWidth=0x7f010391;
        /**  The key character map file resource. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardLayout=0x7f0103f4;
        /**  Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardMode=0x7f010396;
        /**  Default KeyboardView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardViewStyle=0x7f010386;
        /**  This enum provides the same keycode values as can be found in
        {@link android.view.KeyEvent}. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>KEYCODE_UNKNOWN</code></td><td>0</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_LEFT</code></td><td>1</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_RIGHT</code></td><td>2</td><td></td></tr>
<tr><td><code>KEYCODE_HOME</code></td><td>3</td><td></td></tr>
<tr><td><code>KEYCODE_BACK</code></td><td>4</td><td></td></tr>
<tr><td><code>KEYCODE_CALL</code></td><td>5</td><td></td></tr>
<tr><td><code>KEYCODE_ENDCALL</code></td><td>6</td><td></td></tr>
<tr><td><code>KEYCODE_0</code></td><td>7</td><td></td></tr>
<tr><td><code>KEYCODE_1</code></td><td>8</td><td></td></tr>
<tr><td><code>KEYCODE_2</code></td><td>9</td><td></td></tr>
<tr><td><code>KEYCODE_3</code></td><td>10</td><td></td></tr>
<tr><td><code>KEYCODE_4</code></td><td>11</td><td></td></tr>
<tr><td><code>KEYCODE_5</code></td><td>12</td><td></td></tr>
<tr><td><code>KEYCODE_6</code></td><td>13</td><td></td></tr>
<tr><td><code>KEYCODE_7</code></td><td>14</td><td></td></tr>
<tr><td><code>KEYCODE_8</code></td><td>15</td><td></td></tr>
<tr><td><code>KEYCODE_9</code></td><td>16</td><td></td></tr>
<tr><td><code>KEYCODE_STAR</code></td><td>17</td><td></td></tr>
<tr><td><code>KEYCODE_POUND</code></td><td>18</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_UP</code></td><td>19</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_DOWN</code></td><td>20</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_LEFT</code></td><td>21</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_RIGHT</code></td><td>22</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_CENTER</code></td><td>23</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_UP</code></td><td>24</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_DOWN</code></td><td>25</td><td></td></tr>
<tr><td><code>KEYCODE_POWER</code></td><td>26</td><td></td></tr>
<tr><td><code>KEYCODE_CAMERA</code></td><td>27</td><td></td></tr>
<tr><td><code>KEYCODE_CLEAR</code></td><td>28</td><td></td></tr>
<tr><td><code>KEYCODE_A</code></td><td>29</td><td></td></tr>
<tr><td><code>KEYCODE_B</code></td><td>30</td><td></td></tr>
<tr><td><code>KEYCODE_C</code></td><td>31</td><td></td></tr>
<tr><td><code>KEYCODE_D</code></td><td>32</td><td></td></tr>
<tr><td><code>KEYCODE_E</code></td><td>33</td><td></td></tr>
<tr><td><code>KEYCODE_F</code></td><td>34</td><td></td></tr>
<tr><td><code>KEYCODE_G</code></td><td>35</td><td></td></tr>
<tr><td><code>KEYCODE_H</code></td><td>36</td><td></td></tr>
<tr><td><code>KEYCODE_I</code></td><td>37</td><td></td></tr>
<tr><td><code>KEYCODE_J</code></td><td>38</td><td></td></tr>
<tr><td><code>KEYCODE_K</code></td><td>39</td><td></td></tr>
<tr><td><code>KEYCODE_L</code></td><td>40</td><td></td></tr>
<tr><td><code>KEYCODE_M</code></td><td>41</td><td></td></tr>
<tr><td><code>KEYCODE_N</code></td><td>42</td><td></td></tr>
<tr><td><code>KEYCODE_O</code></td><td>43</td><td></td></tr>
<tr><td><code>KEYCODE_P</code></td><td>44</td><td></td></tr>
<tr><td><code>KEYCODE_Q</code></td><td>45</td><td></td></tr>
<tr><td><code>KEYCODE_R</code></td><td>46</td><td></td></tr>
<tr><td><code>KEYCODE_S</code></td><td>47</td><td></td></tr>
<tr><td><code>KEYCODE_T</code></td><td>48</td><td></td></tr>
<tr><td><code>KEYCODE_U</code></td><td>49</td><td></td></tr>
<tr><td><code>KEYCODE_V</code></td><td>50</td><td></td></tr>
<tr><td><code>KEYCODE_W</code></td><td>51</td><td></td></tr>
<tr><td><code>KEYCODE_X</code></td><td>52</td><td></td></tr>
<tr><td><code>KEYCODE_Y</code></td><td>53</td><td></td></tr>
<tr><td><code>KEYCODE_Z</code></td><td>54</td><td></td></tr>
<tr><td><code>KEYCODE_COMMA</code></td><td>55</td><td></td></tr>
<tr><td><code>KEYCODE_PERIOD</code></td><td>56</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_LEFT</code></td><td>57</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_RIGHT</code></td><td>58</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_LEFT</code></td><td>59</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_RIGHT</code></td><td>60</td><td></td></tr>
<tr><td><code>KEYCODE_TAB</code></td><td>61</td><td></td></tr>
<tr><td><code>KEYCODE_SPACE</code></td><td>62</td><td></td></tr>
<tr><td><code>KEYCODE_SYM</code></td><td>63</td><td></td></tr>
<tr><td><code>KEYCODE_EXPLORER</code></td><td>64</td><td></td></tr>
<tr><td><code>KEYCODE_ENVELOPE</code></td><td>65</td><td></td></tr>
<tr><td><code>KEYCODE_ENTER</code></td><td>66</td><td></td></tr>
<tr><td><code>KEYCODE_DEL</code></td><td>67</td><td></td></tr>
<tr><td><code>KEYCODE_GRAVE</code></td><td>68</td><td></td></tr>
<tr><td><code>KEYCODE_MINUS</code></td><td>69</td><td></td></tr>
<tr><td><code>KEYCODE_EQUALS</code></td><td>70</td><td></td></tr>
<tr><td><code>KEYCODE_LEFT_BRACKET</code></td><td>71</td><td></td></tr>
<tr><td><code>KEYCODE_RIGHT_BRACKET</code></td><td>72</td><td></td></tr>
<tr><td><code>KEYCODE_BACKSLASH</code></td><td>73</td><td></td></tr>
<tr><td><code>KEYCODE_SEMICOLON</code></td><td>74</td><td></td></tr>
<tr><td><code>KEYCODE_APOSTROPHE</code></td><td>75</td><td></td></tr>
<tr><td><code>KEYCODE_SLASH</code></td><td>76</td><td></td></tr>
<tr><td><code>KEYCODE_AT</code></td><td>77</td><td></td></tr>
<tr><td><code>KEYCODE_NUM</code></td><td>78</td><td></td></tr>
<tr><td><code>KEYCODE_HEADSETHOOK</code></td><td>79</td><td></td></tr>
<tr><td><code>KEYCODE_FOCUS</code></td><td>80</td><td></td></tr>
<tr><td><code>KEYCODE_PLUS</code></td><td>81</td><td></td></tr>
<tr><td><code>KEYCODE_MENU</code></td><td>82</td><td></td></tr>
<tr><td><code>KEYCODE_NOTIFICATION</code></td><td>83</td><td></td></tr>
<tr><td><code>KEYCODE_SEARCH</code></td><td>84</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PLAY_PAUSE</code></td><td>85</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_STOP</code></td><td>86</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_NEXT</code></td><td>87</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PREVIOUS</code></td><td>88</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_REWIND</code></td><td>89</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_FAST_FORWARD</code></td><td>90</td><td></td></tr>
<tr><td><code>KEYCODE_MUTE</code></td><td>91</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_UP</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_DOWN</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_PICTSYMBOLS</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_SWITCH_CHARSET</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_A</code></td><td>96</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_B</code></td><td>97</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_C</code></td><td>98</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_X</code></td><td>99</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Y</code></td><td>100</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Z</code></td><td>101</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L1</code></td><td>102</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R1</code></td><td>103</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L2</code></td><td>104</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R2</code></td><td>105</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBL</code></td><td>106</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBR</code></td><td>107</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_START</code></td><td>108</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_SELECT</code></td><td>109</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_MODE</code></td><td>110</td><td></td></tr>
<tr><td><code>KEYCODE_ESCAPE</code></td><td>111</td><td></td></tr>
<tr><td><code>KEYCODE_FORWARD_DEL</code></td><td>112</td><td></td></tr>
<tr><td><code>KEYCODE_CTRL_LEFT</code></td><td>113</td><td></td></tr>
<tr><td><code>KEYCODE_CTRL_RIGHT</code></td><td>114</td><td></td></tr>
<tr><td><code>KEYCODE_CAPS_LOCK</code></td><td>115</td><td></td></tr>
<tr><td><code>KEYCODE_SCROLL_LOCK</code></td><td>116</td><td></td></tr>
<tr><td><code>KEYCODE_META_LEFT</code></td><td>117</td><td></td></tr>
<tr><td><code>KEYCODE_META_RIGHT</code></td><td>118</td><td></td></tr>
<tr><td><code>KEYCODE_FUNCTION</code></td><td>119</td><td></td></tr>
<tr><td><code>KEYCODE_SYSRQ</code></td><td>120</td><td></td></tr>
<tr><td><code>KEYCODE_BREAK</code></td><td>121</td><td></td></tr>
<tr><td><code>KEYCODE_MOVE_HOME</code></td><td>122</td><td></td></tr>
<tr><td><code>KEYCODE_MOVE_END</code></td><td>123</td><td></td></tr>
<tr><td><code>KEYCODE_INSERT</code></td><td>124</td><td></td></tr>
<tr><td><code>KEYCODE_FORWARD</code></td><td>125</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PLAY</code></td><td>126</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PAUSE</code></td><td>127</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_CLOSE</code></td><td>128</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_EJECT</code></td><td>129</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_RECORD</code></td><td>130</td><td></td></tr>
<tr><td><code>KEYCODE_F1</code></td><td>131</td><td></td></tr>
<tr><td><code>KEYCODE_F2</code></td><td>132</td><td></td></tr>
<tr><td><code>KEYCODE_F3</code></td><td>133</td><td></td></tr>
<tr><td><code>KEYCODE_F4</code></td><td>134</td><td></td></tr>
<tr><td><code>KEYCODE_F5</code></td><td>135</td><td></td></tr>
<tr><td><code>KEYCODE_F6</code></td><td>136</td><td></td></tr>
<tr><td><code>KEYCODE_F7</code></td><td>137</td><td></td></tr>
<tr><td><code>KEYCODE_F8</code></td><td>138</td><td></td></tr>
<tr><td><code>KEYCODE_F9</code></td><td>139</td><td></td></tr>
<tr><td><code>KEYCODE_F10</code></td><td>140</td><td></td></tr>
<tr><td><code>KEYCODE_F11</code></td><td>141</td><td></td></tr>
<tr><td><code>KEYCODE_F12</code></td><td>142</td><td></td></tr>
<tr><td><code>KEYCODE_NUM_LOCK</code></td><td>143</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_0</code></td><td>144</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_1</code></td><td>145</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_2</code></td><td>146</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_3</code></td><td>147</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_4</code></td><td>148</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_5</code></td><td>149</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_6</code></td><td>150</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_7</code></td><td>151</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_8</code></td><td>152</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_9</code></td><td>153</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_DIVIDE</code></td><td>154</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_MULTIPLY</code></td><td>155</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_SUBTRACT</code></td><td>156</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_ADD</code></td><td>157</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_DOT</code></td><td>158</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_COMMA</code></td><td>159</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_ENTER</code></td><td>160</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_EQUALS</code></td><td>161</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_LEFT_PAREN</code></td><td>162</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_RIGHT_PAREN</code></td><td>163</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_MUTE</code></td><td>164</td><td></td></tr>
<tr><td><code>KEYCODE_INFO</code></td><td>165</td><td></td></tr>
<tr><td><code>KEYCODE_CHANNEL_UP</code></td><td>166</td><td></td></tr>
<tr><td><code>KEYCODE_CHANNEL_DOWN</code></td><td>167</td><td></td></tr>
<tr><td><code>KEYCODE_ZOOM_IN</code></td><td>168</td><td></td></tr>
<tr><td><code>KEYCODE_ZOOM_OUT</code></td><td>169</td><td></td></tr>
<tr><td><code>KEYCODE_TV</code></td><td>170</td><td></td></tr>
<tr><td><code>KEYCODE_WINDOW</code></td><td>171</td><td></td></tr>
<tr><td><code>KEYCODE_GUIDE</code></td><td>172</td><td></td></tr>
<tr><td><code>KEYCODE_DVR</code></td><td>173</td><td></td></tr>
<tr><td><code>KEYCODE_BOOKMARK</code></td><td>174</td><td></td></tr>
<tr><td><code>KEYCODE_CAPTIONS</code></td><td>175</td><td></td></tr>
<tr><td><code>KEYCODE_SETTINGS</code></td><td>176</td><td></td></tr>
<tr><td><code>KEYCODE_TV_POWER</code></td><td>177</td><td></td></tr>
<tr><td><code>KEYCODE_TV_INPUT</code></td><td>178</td><td></td></tr>
<tr><td><code>KEYCODE_STB_POWER</code></td><td>179</td><td></td></tr>
<tr><td><code>KEYCODE_STB_INPUT</code></td><td>180</td><td></td></tr>
<tr><td><code>KEYCODE_AVR_POWER</code></td><td>181</td><td></td></tr>
<tr><td><code>KEYCODE_AVR_INPUT</code></td><td>182</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_GRED</code></td><td>183</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_GREEN</code></td><td>184</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_YELLOW</code></td><td>185</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_BLUE</code></td><td>186</td><td></td></tr>
<tr><td><code>KEYCODE_APP_SWITCH</code></td><td>187</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_1</code></td><td>188</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_2</code></td><td>189</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_3</code></td><td>190</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_4</code></td><td>191</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_5</code></td><td>192</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_6</code></td><td>193</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_7</code></td><td>194</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_8</code></td><td>195</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_9</code></td><td>196</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_10</code></td><td>197</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_11</code></td><td>198</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_12</code></td><td>199</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_13</code></td><td>200</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_14</code></td><td>201</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_15</code></td><td>202</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_16</code></td><td>203</td><td></td></tr>
<tr><td><code>KEYCODE_LANGUAGE_SWITCH</code></td><td>204</td><td></td></tr>
<tr><td><code>KEYCODE_MANNER_MODE</code></td><td>205</td><td></td></tr>
<tr><td><code>KEYCODE_3D_MODE</code></td><td>206</td><td></td></tr>
<tr><td><code>KEYCODE_CONTACTS</code></td><td>207</td><td></td></tr>
<tr><td><code>KEYCODE_CALENDAR</code></td><td>208</td><td></td></tr>
<tr><td><code>KEYCODE_MUSIC</code></td><td>209</td><td></td></tr>
<tr><td><code>KEYCODE_CALCULATOR</code></td><td>210</td><td></td></tr>
<tr><td><code>KEYCODE_ZENKAKU_HANKAKU</code></td><td>211</td><td></td></tr>
<tr><td><code>KEYCODE_EISU</code></td><td>212</td><td></td></tr>
<tr><td><code>KEYCODE_MUHENKAN</code></td><td>213</td><td></td></tr>
<tr><td><code>KEYCODE_HENKAN</code></td><td>214</td><td></td></tr>
<tr><td><code>KEYCODE_KATAKANA_HIRAGANA</code></td><td>215</td><td></td></tr>
<tr><td><code>KEYCODE_YEN</code></td><td>216</td><td></td></tr>
<tr><td><code>KEYCODE_RO</code></td><td>217</td><td></td></tr>
<tr><td><code>KEYCODE_KANA</code></td><td>218</td><td></td></tr>
</table>
         */
        public static final int keycode=0x7f01012d;
        /**  Whether the application in question should be terminated after its
         settings have been restored during a full-system restore operation.
         Single-package restore operations will never cause the application to
         be shut down.  Full-system restore operations typically only occur once,
         when the phone is first set up.  Third-party applications will not usually
         need to use this attribute.

         <p>The default is <code>true</code>, which means that after the application
         has finished processing its data during a full-system restore, it will be
         terminated. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int killAfterRestore=0x7f01043d;
        /**  A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int label=0x7f010404;
        /**  Specifies the id of a view for which this view serves as a label for
             accessibility purposes. For example, a TextView before an EditText in
             the UI usually specifies what infomation is contained in the EditText.
             Hence, the TextView is a label for the EditText. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelFor=0x7f0101a3;
        /**  Size of the text for custom keys with some text and no icon. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelTextSize=0x7f010389;
        /**  Request that your application's processes be created with
             a large Dalvik heap.  This applies to <em>all</em> processes
             created for the application.  It only applies to the first
             application loaded into a process; if using a sharedUserId
             to allow multiple applications to use a process, they all must
             use this option consistently or will get unpredictable results. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int largeHeap=0x7f010444;
        /**  Indicates whether the application supports larger screen form-factors.
             A large screen is defined as a screen that is significantly larger
             than a normal phone screen, and thus may require some special care
             on the application's part to make good use of it.  An example would
             be a VGA <em>normal density</em> screen, though even larger screens
             are certainly possible.  An application that does not support
             large screens will be placed as a postage stamp on such a
             screen, so that it retains the dimensions it was originally
             designed for. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int largeScreens=0x7f010451;
        /**  Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the screens an application is
             compatible with.  This attribute provides the maximum
             "smallest screen width" (as per the -swNNNdp resource configuration)
             that the application can work well on.  If this value is smaller than
             the "smallest screen width" of the device it is running on, the
             application will be forced in to screen compatibility mode with
             no way for the user to turn it off. Currently the compatibility mode only
             emulates phone screens with a 320dp width, so compatibility mode is not applied if the
             value for largestWidthLimitDp is larger than 320. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int largestWidthLimitDp=0x7f01044e;
        /**  Specify how an activity should be launched.  See the
         <a href="{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
         Stack</a> document for important information on how these options impact
         the behavior of your application.
         
         <p>If this attribute is not specified, <code>standard</code> launch
         mode will be used.  Note that the particular launch behavior can
         be changed in some ways at runtime through the
         {@link android.content.Intent} flags
         {@link android.content.Intent#FLAG_ACTIVITY_SINGLE_TOP},
         {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK}, and
         {@link android.content.Intent#FLAG_ACTIVITY_MULTIPLE_TASK}. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>standard</code></td><td>0</td><td> The default mode, which will usually create a new instance of
             the activity when it is started, though this behavior may change
             with the introduction of other options such as
             {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK
             Intent.FLAG_ACTIVITY_NEW_TASK}. </td></tr>
<tr><td><code>singleTop</code></td><td>1</td><td> If, when starting the activity, there is already an
            instance of the same activity class in the foreground that is
            interacting with the user, then
            re-use that instance.  This existing instance will receive a call to
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()} with
            the new Intent that is being started. </td></tr>
<tr><td><code>singleTask</code></td><td>2</td><td> If, when starting the activity, there is already a task running
            that starts with this activity, then instead of starting a new
            instance the current task is brought to the front.  The existing
            instance will receive a call to {@link android.app.Activity#onNewIntent
            Activity.onNewIntent()}
            with the new Intent that is being started, and with the
            {@link android.content.Intent#FLAG_ACTIVITY_BROUGHT_TO_FRONT
            Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT} flag set.  This is a superset
            of the singleTop mode, where if there is already an instance
            of the activity being started at the top of the stack, it will
            receive the Intent as described there (without the
            FLAG_ACTIVITY_BROUGHT_TO_FRONT flag set).  See the
            <a href="{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
            Stack</a> document for more details about tasks.</td></tr>
<tr><td><code>singleInstance</code></td><td>3</td><td> Only allow one instance of this activity to ever be 
            running.  This activity gets a unique task with only itself running 
            in it; if it is ever launched again with the same Intent, then that 
            task will be brought forward and its 
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()}
            method called.  If this 
            activity tries to start a new activity, that new activity will be 
            launched in a separate task.  See the
            <a href="{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
            Stack</a> document for more details about tasks.</td></tr>
</table>
         */
        public static final int launchMode=0x7f01042f;
        /**  Specifies the type of layer backing this view. The default value is none.
             Refer to {@link android.view.View#setLayerType(int, android.graphics.Paint)}
             for more information.
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't use a layer. </td></tr>
<tr><td><code>software</code></td><td>1</td><td> Use a software layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information. </td></tr>
<tr><td><code>hardware</code></td><td>2</td><td> Use a hardware layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information. </td></tr>
</table>
         */
        public static final int layerType=0x7f01019e;
        /**  Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout=0x7f0101ae;
        /**  Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layoutAnimation=0x7f0101a7;
        /**  Defines the direction of layout drawing. This typically is associated with writing
             direction of the language script used. The possible values are "ltr" for Left-to-Right,
             "rtl" for Right-to-Left, "locale" and "inherit" from parent view. If there is nothing
             to inherit, "locale" is used. "locale" falls back to "en-US". "ltr" is the direction
             used in "en-US". The default for this attribute is "inherit". 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ltr</code></td><td>0</td><td> Left-to-Right </td></tr>
<tr><td><code>rtl</code></td><td>1</td><td> Right-to-Left </td></tr>
<tr><td><code>inherit</code></td><td>2</td><td> Inherit from parent </td></tr>
<tr><td><code>locale</code></td><td>3</td><td> Locale </td></tr>
</table>
         */
        public static final int layoutDirection=0x7f01019f;
        /**  Positions the bottom edge of this view above the given anchor view ID.
            Accommodates bottom margin of this view and top margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_above=0x7f0102a7;
        /**  Positions the baseline of this view on the baseline of the given anchor view ID. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignBaseline=0x7f0102a9;
        /**  Makes the bottom edge of this view match the bottom edge of the given anchor view ID.
            Accommodates bottom margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignBottom=0x7f0102ad;
        /**  Makes the end edge of this view match the end edge of the given anchor view ID.
            Accommodates end margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignEnd=0x7f0102b9;
        /**  Makes the left edge of this view match the left edge of the given anchor view ID.
            Accommodates left margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignLeft=0x7f0102aa;
        /**  If true, makes the bottom edge of this view match the bottom edge of the parent.
            Accommodates bottom margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentBottom=0x7f0102b1;
        /**  If true, makes the end edge of this view match the end edge of the parent.
            Accommodates end margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentEnd=0x7f0102bb;
        /**  If true, makes the left edge of this view match the left edge of the parent.
            Accommodates left margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentLeft=0x7f0102ae;
        /**  If true, makes the right edge of this view match the right edge of the parent.
            Accommodates right margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentRight=0x7f0102b0;
        /**  If true, makes the start edge of this view match the start edge of the parent.
            Accommodates start margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentStart=0x7f0102ba;
        /**  If true, makes the top edge of this view match the top edge of the parent.
            Accommodates top margin. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignParentTop=0x7f0102af;
        /**  Makes the right edge of this view match the right edge of the given anchor view ID.
            Accommodates right margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignRight=0x7f0102ac;
        /**  Makes the start edge of this view match the start edge of the given anchor view ID.
            Accommodates start margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignStart=0x7f0102b8;
        /**  Makes the top edge of this view match the top edge of the given anchor view ID.
            Accommodates top margin. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_alignTop=0x7f0102ab;
        /**  If set to true, the parent will be used as the anchor when the anchor cannot be
             be found for layout_toLeftOf, layout_toRightOf, etc. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_alignWithParentIfMissing=0x7f0102b5;
        /**  Positions the top edge of this view below the given anchor view ID.
            Accommodates top margin of this view and bottom margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_below=0x7f0102a8;
        /**  If true, centers this child horizontally within its parent. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerHorizontal=0x7f0102b3;
        /**  If true, centers this child horizontally and vertically within its parent. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerInParent=0x7f0102b2;
        /**  If true, centers this child vertically within its parent. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerVertical=0x7f0102b4;
        /**  Percentage of the screen this child should consume or center within.
             If 0/default, the view will be measured by standard rules
             as if this were a FrameLayout. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerWithinArea=0x7f0103ff;
        /**  Some child types have special behavior. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
         */
        public static final int layout_childType=0x7f0103fe;
        /**  The index of the column in which this child should be. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x7f010236;
        /**  The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnSpan=0x7f0102a4;
        /**  Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f01012a;
        /**  Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
         */
        public static final int layout_height=0x7f0101b1;
        /**   Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_margin=0x7f0101b2;
        /**   Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginBottom=0x7f0101b6;
        /**   Specifies extra space on the end side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginEnd=0x7f0101b8;
        /**   Specifies extra space on the left side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginLeft=0x7f0101b3;
        /**   Specifies extra space on the right side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginRight=0x7f0101b5;
        /**   Specifies extra space on the start side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginStart=0x7f0101b7;
        /**   Specifies extra space on the top side of this view.
              This space is outside this view's bounds. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_marginTop=0x7f0101b4;
        /**  The maximum valid height for this item. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unbounded</code></td><td>-1</td><td> Indicates that the view may be resized arbitrarily large. </td></tr>
</table>
         */
        public static final int layout_maxHeight=0x7f0103cd;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxWidth=0x7f010400;
        /**  The minimum valid height for this item. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_minHeight=0x7f0103ce;
        /**  Padding to use at the top of the prefs content. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_removeBorders=0x7f010210;
        /**  The row boundary delimiting the top of the group of cells
        occupied by this view. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_row=0x7f0102a2;
        /**  The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowSpan=0x7f0102a3;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_scale=0x7f0102bc;
        /**  Defines how many columns this child should span.  Must be >= 1.
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_span=0x7f010237;
        /**  Positions the start edge of this view to the end of the given anchor view ID.
             Accommodates start margin of this view and end margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_toEndOf=0x7f0102b7;
        /**  Positions the right edge of this view to the left of the given anchor view ID.
             Accommodates right margin of this view and left margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_toLeftOf=0x7f0102a5;
        /**  Positions the left edge of this view to the right of the given anchor view ID.
            Accommodates left margin of this view and right margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_toRightOf=0x7f0102a6;
        /**  Positions the end edge of this view to the start of the given anchor view ID.
             Accommodates end margin of this view and start margin of anchor view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout_toStartOf=0x7f0102b6;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_weight=0x7f0102a1;
        /**  Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
         */
        public static final int layout_width=0x7f0101b0;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_x=0x7f01029f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_y=0x7f0102a0;
        /**  Amount of left padding inside the gradient shape. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int left=0x7f0102f4;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int leftToRight=0x7f0103fd;
        /**  Extra spacing between lines of text. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lineSpacingExtra=0x7f010268;
        /**  Extra spacing between lines of text, as a multiplier. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lineSpacingMultiplier=0x7f010269;
        /**  Makes the TextView be exactly this many lines tall. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int lines=0x7f010246;
        /**  If set to false, keeps the movement method from being set
             to the link movement method even if autoLink causes links
             to be found. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int linksClickable=0x7f010258;
        /**  Drawable used as a background for selected list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceBackgroundIndicator=0x7f01004c;
        /**  Drawable to use for multiple choice indicators. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceIndicatorMultiple=0x7f01004a;
        /**  Drawable to use for single choice indicators. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceIndicatorSingle=0x7f01004b;
        /**  The drawable for the list divider. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listDivider=0x7f01005b;
        /**  The list divider used in alert dialogs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listDividerAlertDialog=0x7f01005c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listItemLayout=0x7f010141;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listLayout=0x7f01013e;
        /**  Default ListPopupWindow style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listPopupWindowStyle=0x7f0100be;
        /**  The preferred list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeight=0x7f010053;
        /**  A larger, more robust list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeightLarge=0x7f010055;
        /**  A smaller, sleeker list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeightSmall=0x7f010054;
        /**  The preferred padding along the end edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingEnd=0x7f010066;
        /**  The preferred padding along the left edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingLeft=0x7f010057;
        /**  The preferred padding along the right edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingRight=0x7f010058;
        /**  The preferred padding along the start edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingStart=0x7f010065;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x7f0101c9;
        /**  TextView style for list separators. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listSeparatorTextViewStyle=0x7f01005d;
        /**  Default ListView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listViewStyle=0x7f010095;
        /**  ListView with white background. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listViewWhiteStyle=0x7f010096;
        /**  A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int logo=0x7f010406;
        /**  Defines whether this view reacts to long click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longClickable=0x7f010188;
        /** Defines whether the animator loops to the first view once it
        has reached the end of the list. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int loopViews=0x7f01027f;
        /**  Causes targets to snap to the finger location on activation. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int magneticTargets=0x7f0103c0;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int majorWeightMax=0x7f0102bf;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int majorWeightMin=0x7f0102bd;
        /**  Name of the activity to be launched to manage application's space on
         device. The specified activity gets automatically launched when the
         application's space needs to be managed and is usually invoked 
         through user actions. Applications can thus provide their own custom
         behavior for managing space for various scenarios like out of memory
         conditions. This is an optional attribute and
         applications can choose not to specify a default activity to 
         manage space. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int manageSpaceActivity=0x7f010407;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>normal</code></td><td>1</td><td></td></tr>
<tr><td><code>satellite</code></td><td>2</td><td></td></tr>
<tr><td><code>terrain</code></td><td>3</td><td></td></tr>
<tr><td><code>hybrid</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int mapType=0x7f010003;
        /**  Default MapView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mapViewStyle=0x7f0100b4;
        /**  The number of times to repeat the marquee animation. Only applied if the
             TextView has marquee enabled. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>marquee_forever</code></td><td>-1</td><td> Indicates that marquee should repeat indefinitely. </td></tr>
</table>
         */
        public static final int marqueeRepeatLimit=0x7f01026a;
        /**  Defines the maximum value the progress can take. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int max=0x7f01021d;
        /**  The maximal date shown by this calendar view in mm/dd/yyyy format. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxDate=0x7f01028a;
        /**  Makes the TextView be at most this many ems wide. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxEms=0x7f010249;
        /**  maximum file size for the volume in megabytes, zero or unspecified if it is unbounded 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxFileSize=0x7f0103f1;
        /**  An optional argument to supply a maximum height for this view.
             See {see android.widget.ImageView#setMaxHeight} for details. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxHeight=0x7f0101f2;
        /**  Defines the maximum number of items to show. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxItems=0x7f01021b;
        /**  Defines the maximum number of items per row. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxItemsPerRow=0x7f01021a;
        /**  Set an input filter to constrain the text length to the
             specified number. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLength=0x7f010253;
        /**  The maximum level allowed for this item. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLevel=0x7f0102fa;
        /**  Makes the TextView be at most this many lines tall.

        When used on an editable text, the <code>inputType</code> attribute's value must be
        combined with the <code>textMultiLine</code> flag for the maxLines attribute to apply. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxLines=0x7f010245;
        /**  Defines the maximum number of rows displayed. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxRows=0x7f010219;
        /**  This is the maximum SDK version number that an application works
             on.  You can use this to ensure your application is filtered out
             of later versions of the platform when you know you have
             incompatibility with them. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxSdkVersion=0x7f01044b;
        /**  An optional argument to supply a maximum width for this view.
             See {see android.widget.ImageView#setMaxWidth} for details. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxWidth=0x7f0101f1;
        /**  Determines whether to measure all children or just those in
             the VISIBLE or INVISIBLE state when measuring. Defaults to false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int measureAllChildren=0x7f0101de;
        /**  When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int measureWithLargestChild=0x7f0101fe;
        /**  Default style for the MediaRouteButton widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mediaRouteButtonStyle=0x7f010113;
        /**  The types of media routes the button and its resulting
             chooser will filter by. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>liveAudio</code></td><td>0x1</td><td> Allow selection of live audio routes. </td></tr>
<tr><td><code>user</code></td><td>0x800000</td><td> Allow selection of user (app-specified) routes. </td></tr>
</table>
         */
        public static final int mediaRouteTypes=0x7f0103f6;
        /**  The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.) 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>container</code></td><td>0x00010000</td><td> Items are part of a container. </td></tr>
<tr><td><code>system</code></td><td>0x00020000</td><td> Items are provided by the system. </td></tr>
<tr><td><code>secondary</code></td><td>0x00030000</td><td> Items are user-supplied secondary (infrequently used). </td></tr>
<tr><td><code>alternative</code></td><td>0x00040000</td><td> Items are alternative actions. </td></tr>
</table>
         */
        public static final int menuCategory=0x7f01035b;
        /**  Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.
             <p><em>Note: MIME type matching in the Android framework is
             case-sensitive, unlike formal RFC MIME types.  As a result,
             MIME types here should always use lower case letters.</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int mimeType=0x7f01045e;
        /**  The minimal date shown by this calendar view in mm/dd/yyyy format. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minDate=0x7f010289;
        /**  Makes the TextView be at least this many ems wide. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minEms=0x7f01024c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minHeight=0x7f010227;
        /**  The minimum level allowed for this item. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minLevel=0x7f0102f9;
        /**  Makes the TextView be at least this many lines tall.

        When used on an editable text, the <code>inputType</code> attribute's value must be
        combined with the <code>textMultiLine</code> flag for the minLines attribute to apply. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minLines=0x7f010248;
        /**  Minimum height that the AppWidget can be resized to. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minResizeHeight=0x7f0103a3;
        /**  Minimum width that the AppWidget can be resized to. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minResizeWidth=0x7f0103a2;
        /**  This is the minimum SDK version number that the application
             requires.  This number is an abstract integer, from the list
             in {@link android.os.Build.VERSION_CODES}  If
             not supplied, the application will work on any SDK.  This
             may also be string (such as "Donut") if the application was built
             against a development branch, in which case it will only work against
             the development builds. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minSdkVersion=0x7f010449;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minWidth=0x7f010226;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minorWeightMax=0x7f0102c0;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minorWeightMin=0x7f0102be;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>oneLine</code></td><td>1</td><td> Always show only the first line. </td></tr>
<tr><td><code>collapsing</code></td><td>2</td><td> When selected show both lines, otherwise show only the first line.
                 This is the default mode. </td></tr>
<tr><td><code>twoLine</code></td><td>3</td><td> Always show both lines. </td></tr>
</table>
         */
        public static final int mode=0x7f01028c;
        /**  'More' icon. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreIcon=0x7f01021c;
        /**  path to mount point for the storage 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int mountPoint=0x7f0103ea;
        /**  number of megabytes of storage MTP should reserve for free storage
             (used for emulated storage that is shared with system's data partition) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int mtpReserve=0x7f0103ef;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int multiChoiceItemLayout=0x7f01013f;
        /**  Specify whether a component is allowed to have multiple instances
         of itself running in different processes.  Use with the activity
         and provider tags.
    
         <p>Normally the system will ensure that all instances of a particular
         component are only running in a single process.  You can use this
         attribute to disable that behavior, allowing the system to create
         instances wherever they are used (provided permissions allow it).
         This is most often used with content providers, so that instances
         of a provider can be created in each client process, allowing them
         to be used without performing IPC.  
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int multiprocess=0x7f010421;
        /**  A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int name=0x7f01040b;
        /**  The type of navigation to use. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
<tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
<tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
</table>
         */
        public static final int navigationMode=0x7f0103d0;
        /**  The negative button text for the dialog. Set to @null to hide the negative button. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int negativeButtonText=0x7f01037c;
        /**  Option to let applications specify that user data should
         never be encrypted if an Encrypted File System solution
         is enabled. Specifically, this is an "opt-out" feature, meaning
         that, by default, user data will be encrypted if the EFS feature
         is enabled. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int neverEncrypt=0x7f010409;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusDown=0x7f010185;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusForward=0x7f010186;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusLeft=0x7f010182;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusRight=0x7f010183;
        /**  Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusUp=0x7f010184;
        /**  Specify whether an activity should be kept in its history stack.
         If this attribute is set, then as soon as the user navigates away
         from the activity it will be finished and they will no longer be
         able to return to it. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int noHistory=0x7f010425;
        /**  Indicates whether an application supports the normal screen
             form-factors.  Traditionally this is an HVGA normal density
             screen, but WQVGA low density and WVGA high density are also
             considered to be normal.  This attribute is true by default,
             and applications currently should leave it that way. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int normalScreens=0x7f010450;
        /**  The minimal period in milliseconds between two accessibility events of the same type
             are sent to this serivce. This setting can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int notificationTimeout=0x7f0101c6;
        /**  Defines how many columns to show. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td> Display as many columns as possible to fill the available space. </td></tr>
</table>
         */
        public static final int numColumns=0x7f0101ed;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numDots=0x7f0103fb;
        /**  The number of stars (or rating items) to show. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numStars=0x7f01022e;
        /**  NumberPicker style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int numberPickerStyle=0x7f0100c1;
        /**  If set, specifies that this TextView has a numeric input method.
             The default is false.
             {@deprecated Use inputType instead.} 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>integer</code></td><td>0x01</td><td> Input is numeric. </td></tr>
<tr><td><code>signed</code></td><td>0x03</td><td> Input is numeric, with sign allowed. </td></tr>
<tr><td><code>decimal</code></td><td>0x05</td><td> Input is numeric, with decimals allowed. </td></tr>
</table>
         */
        @Deprecated
        public static final int numeric=0x7f010259;
        /**  The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numericShortcut=0x7f010361;
        /**  Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity). 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int onClick=0x7f010191;
        /**  If true, the animation will only run a single time and then
             stop.  If false (the default), it will continually run,
             restarting at the first frame after the last has finished. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int oneshot=0x7f0102db;
        /**  Indicates the opacity of the layer. This can be useful to allow the
              system to enable drawing optimizations. The default value is
              translucent. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>opaque</code></td><td>-1</td><td> Indicates that the layer is opaque and contains no transparent
                 nor translucent pixels. </td></tr>
<tr><td><code>transparent</code></td><td>-2</td><td> The layer is completely transparent (no pixel will be drawn.) </td></tr>
<tr><td><code>translucent</code></td><td>-3</td><td> The layer has translucent pixels. </td></tr>
</table>
         */
        public static final int opacity=0x7f0102f8;
        /**  The order for the Preference (lower values are to be ordered first). If this is not
             specified, the default orderin will be alphabetic. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int order=0x7f01036f;
        /**  The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int orderInCategory=0x7f01035c;
        /**  Name of the property being animated. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>together</code></td><td>0</td><td> child animations should be played together. </td></tr>
<tr><td><code>sequentially</code></td><td>1</td><td> child animations should be played sequentially, in the same order as the xml. </td></tr>
</table>
         */
        public static final int ordering=0x7f01032f;
        /**  Whether to order the Preference under this group as they appear in the XML file.
             If this is false, the ordering will follow the Preference order attribute and
             default to alphabetic for those without the order attribute. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int orderingFromXml=0x7f010369;
        /**  Standard orientation constant. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
         */
        public static final int orientation=0x7f01012b;
        /**  Identifier for the animation to use when a view is hidden. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int outAnimation=0x7f01027b;
        /**  Outer radius of target circle. Icons will be drawn on this circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int outerRadius=0x7f0103c8;
        /**  Drawable to use for wave ripple animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int outerRingDrawable=0x7f0103bc;
        /**  Drawable to draw below list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollFooter=0x7f01020b;
        /**  Drawable to draw above list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollHeader=0x7f01020a;
        /**  Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td> Always show over-scroll effects, even if the content fits entirely
                 within the available space. </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td> Only show over-scroll effects if the content is large
                 enough to meaningfully scroll. </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
         */
        public static final int overScrollMode=0x7f010192;
        /**  Set true when this subtype should be selected by default if no other subtypes are
             selected explicitly. Note that a subtype with this parameter being true will
             not be shown in the subtypes list. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int overridesImplicitlyEnabledSubtype=0x7f0101be;
        /**  Comma separated package names from which this serivce would like to receive events (leave out for all packages).
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int packageNames=0x7f0101c4;
        /**  Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int padding=0x7f010167;
        /**  Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingBottom=0x7f01016b;
        /**  Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingEnd=0x7f01016d;
        /**  Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingLeft=0x7f010168;
        /**  Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingRight=0x7f01016a;
        /**  Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingStart=0x7f01016c;
        /**  Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingTop=0x7f010169;
        /**  The space between adjacent pages of the PagedView. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pageSpacing=0x7f0103f7;
        /**  The background of a panel when it is inset from the left and right edges of the screen. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelBackground=0x7f010080;
        /**  Color that matches (as closely as possible) the panel background. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelColorBackground=0x7f010083;
        /**  Default color of foreground panel imagery. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelColorForeground=0x7f010082;
        /**  The background of a panel when it extends to the left and right edges of the screen. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int panelFullBackground=0x7f010081;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int panelMenuIsCompact=0x7f010085;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelMenuListTheme=0x7f010087;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int panelMenuListWidth=0x7f010086;
        /**  Default appearance of panel text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelTextAppearance=0x7f010084;
        /**  The name of the logical parent of the activity as it appears in the manifest. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int parentActivityName=0x7f010442;
        /**  Whether the characters of the field are displayed as
             password dots instead of themselves.
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int password=0x7f01024e;
        /**  Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int path=0x7f010455;
        /**  Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pathPattern=0x7f010457;
        /**  Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pathPrefix=0x7f010456;
        /**  Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int permission=0x7f01040c;
        /**  Flags indicating more context for a permission. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>costsMoney</code></td><td>0x0001</td><td> Set to indicate that this permission allows an operation that
             may cost the user money.  Such permissions may be highlighted
             when shown to the user with this additional information.  </td></tr>
</table>
         */
        public static final int permissionFlags=0x7f010412;
        /**  Specified the name of a group that this permission is associated
         with.  The group must have been defined with the
         {@link android.R.styleable#AndroidManifestPermissionGroup permission-group} tag. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int permissionGroup=0x7f010413;
        /**  Flags indicating more context for a permission group. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>personalInfo</code></td><td>0x0001</td><td> Set to indicate that this permission group contains permissions
             protecting access to some information that is considered
             personal to the user (such as contacts, e-mails, etc). </td></tr>
</table>
         */
        public static final int permissionGroupFlags=0x7f010411;
        /**  Flag to control special persistent mode of an application.  This should
         not normally be used by applications; it requires that the system keep
         your application running at all times. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int persistent=0x7f010418;
        /**  Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
         */
        public static final int persistentDrawingCache=0x7f0101a9;
        /**  If set, specifies that this TextView has a phone number input
             method. The default is false.
             {@deprecated Use inputType instead.} 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int phoneNumber=0x7f01025b;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pivotX=0x7f0102fd;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pivotY=0x7f0102fe;
        /**  Drawble used for drawing points 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointDrawable=0x7f0103bd;
        /**  Reference to a pointer icon drawable with STYLE_ARROW 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointerIconArrow=0x7f0103e3;
        /**  Reference to a pointer icon drawable with STYLE_SPOT_ANCHOR 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointerIconSpotAnchor=0x7f0103e6;
        /**  Reference to a pointer icon drawable with STYLE_SPOT_HOVER 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointerIconSpotHover=0x7f0103e4;
        /**  Reference to a pointer icon drawable with STYLE_SPOT_TOUCH 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointerIconSpotTouch=0x7f0103e5;
        /**  Reference to the Pointer style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointerStyle=0x7f010114;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupAnimationStyle=0x7f010279;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int popupBackground=0x7f010278;
        /**  The characters to display in the popup keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int popupCharacters=0x7f010399;
        /**  The XML keyboard layout of any popup keyboard. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupKeyboard=0x7f010398;
        /**  Layout resource for popup keyboards. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupLayout=0x7f01038f;
        /**  Default PopupMenu style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupMenuStyle=0x7f0100bf;
        /**  Reference to a layout to use for displaying a prompt in the dropdown for
             spinnerMode="dropdown". This layout must contain a TextView with the id
             @android:id/text1 to be populated with the prompt text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupPromptView=0x7f010283;
        /**  Default PopupWindow style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupWindowStyle=0x7f010097;
        /**  Specify a URI authority port that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.  If a host is supplied
             but not a port, any port is matched. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int port=0x7f010461;
        /**  The positive button text for the dialog. Set to @null to hide the positive button. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int positiveButtonText=0x7f01037b;
        /**  Default style for PreferenceCategory. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceCategoryStyle=0x7f0100e6;
        /**  Default style for Headers pane in PreferenceActivity. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceFragmentStyle=0x7f0100e5;
        /**  Preference frame layout styles. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceFrameLayoutStyle=0x7f010111;
        /**  Default style for informational Preference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceInformationStyle=0x7f0100e8;
        /**  The preference layout that has the child/tabbed effect. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceLayoutChild=0x7f0100ee;
        /**  Preference panel style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferencePanelStyle=0x7f0100ef;
        /**  Default style for PreferenceScreen. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceScreenStyle=0x7f0100e4;
        /**  Default style for Preference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int preferenceStyle=0x7f0100e7;
        /**  Theme to use for presentations spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int presentationTheme=0x7f0100ff;
        /**  Whether space should be reserved in layout when an icon is missing. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int preserveIconSpacing=0x7f010217;
        /**  A preview of what the AppWidget will look like after it's configured.
              If not supplied, the AppWidget's icon will be used. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int previewImage=0x7f0103a8;
        /**  true if the storage is the primary external storage 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int primary=0x7f0103ec;
        /**  @hide This broacast receiver will only receive broadcasts for the
             primary user.  Can only be used with receivers. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int primaryUserOnly=0x7f01045a;
        /**  Specify the relative importance or ability in handling a particular
         Intent.  For receivers, this controls the order in which they are
         executed to receive a broadcast (note that for
         asynchronous broadcasts, this order is ignored).  For activities,
         this provides information about how good an activity is handling an
         Intent; when multiple activities match an intent and have different
         priorities, only those with the higher priority value will be
         considered a match.
         
         <p>Only use if you really need to impose some specific
         order in which the broadcasts are received, or want to forcibly
         place an activity to always be preferred over others.  The value is a
         single integer, with higher numbers considered to be better. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int priority=0x7f01042e;
        /**  An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#privateImeOptions
             EditorInfo.privateImeOptions} field when the input
             method is connected. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int privateImeOptions=0x7f01026b;
        /**  Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int process=0x7f01041e;
        /**  Defines the default progress value, between 0 and max. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int progress=0x7f01021e;
        /**  Specifies the horizontal padding on either end for an embedded progress bar. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int progressBarPadding=0x7f0103da;
        /**  Default ProgressBar style. This is a medium circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyle=0x7f010098;
        /**  Horizontal ProgressBar style. This is a horizontal progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleHorizontal=0x7f010099;
        /**  Inverse ProgressBar style. This is a medium circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleInverse=0x7f01009d;
        /**  Large ProgressBar style. This is a large circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleLarge=0x7f01009c;
        /**  Large inverse ProgressBar style. This is a large circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleLargeInverse=0x7f01009f;
        /**  Small ProgressBar style. This is a small circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleSmall=0x7f01009a;
        /**  Small inverse ProgressBar style. This is a small circular progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleSmallInverse=0x7f01009e;
        /**  Small ProgressBar in title style. This is a small circular progress bar that will be placed in title bars. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyleSmallTitle=0x7f01009b;
        /**  Drawable used for the progress mode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressDrawable=0x7f010223;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressLayout=0x7f010142;
        /**  The prompt to display when the spinner's dialog is shown. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int prompt=0x7f010281;
        /**  Name of the property being animated. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int propertyName=0x7f01032e;
        /**  Characterizes the potential risk implied in a permission and
         indicates the procedure the system should follow when determining
         whether to grant the permission to an application requesting it. {@link
         android.Manifest.permission Standard permissions} have a predefined and
         permanent protectionLevel. If you are creating a custom permission in an
         application, you can define a protectionLevel attribute with one of the
         values listed below. If no protectionLevel is defined for a custom
         permission, the system assigns the default ("normal"). 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> A lower-risk permission that gives an application access to isolated
             application-level features, with minimal risk to other applications,
             the system, or the user. The system automatically grants this type
             of permission to a requesting application at installation, without
             asking for the user's explicit approval (though the user always
             has the option to review these permissions before installing). </td></tr>
<tr><td><code>dangerous</code></td><td>1</td><td> A higher-risk permission that would give a requesting application
             access to private user data or control over the device that can
             negatively impact the user.  Because this type of permission
             introduces potential risk, the system may not automatically
             grant it to the requesting application.  For example, any dangerous
             permissions requested by an application may be displayed to the
             user and require confirmation before proceeding, or some other
             approach may be taken to avoid the user automatically allowing
             the use of such facilities.  </td></tr>
<tr><td><code>signature</code></td><td>2</td><td> A permission that the system is to grant only if the requesting
             application is signed with the same certificate as the application
             that declared the permission. If the certificates match, the system
             automatically grants the permission without notifying the user or
             asking for the user's explicit approval. </td></tr>
<tr><td><code>signatureOrSystem</code></td><td>3</td><td> A permission that the system is to grant only to packages in the
             Android system image <em>or</em> that are signed with the same
             certificates. Please avoid using this option, as the
             signature protection level should be sufficient for most needs and
             works regardless of exactly where applications are installed.  This
             permission is used for certain special situations where multiple
             vendors have applications built in to a system image which need
             to share specific features explicitly because they are being built
             together. </td></tr>
<tr><td><code>system</code></td><td>0x10</td><td> Additional flag from base permission type: this permission can also
             be granted to any applications installed on the system image.
             Please avoid using this option, as the
             signature protection level should be sufficient for most needs and
             works regardless of exactly where applications are installed.  This
             permission flag is used for certain special situations where multiple
             vendors have applications built in to a system image which need
             to share specific features explicitly because they are being built
             together. </td></tr>
<tr><td><code>development</code></td><td>0x20</td><td> Additional flag from base permission type: this permission can also
             (optionally) be granted to development applications. </td></tr>
</table>
         */
        public static final int protectionLevel=0x7f010410;
        /**  The attribute that holds a Base64-encoded public key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int publicKey=0x7f010464;
        /**  If you wish to handle an action key during normal search query entry, you
            must define an action string here.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryActionMsg=0x7f010357;
        /**  If provided and <code>true</code>, this searchable activity will be invoked for all
             queries in a particular session. If set to <code>false</code> and the activity
             returned zero results for a query, it will not be invoked again in that session for
             supersets of that zero-results query. For example, if the activity returned zero
             results for "bo", it would not be queried again for "bob".
             The default value is <code>false</code>. <i>Optional attribute.</i>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryAfterZeroResults=0x7f010354;
        /**  An optional query hint string to be displayed in the empty query field. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryHint=0x7f0103dd;
        /**  Drawable used as an overlay on top of quickcontact photos. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeOverlay=0x7f0100b5;
        /**  Default quickcontact badge style with large quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleSmallWindowLarge=0x7f0100bb;
        /**  Default quickcontact badge style with medium quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleSmallWindowMedium=0x7f0100ba;
        /**  Default quickcontact badge style with small quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleSmallWindowSmall=0x7f0100b9;
        /**  Default quickcontact badge style with large quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleWindowLarge=0x7f0100b8;
        /**  Default quickcontact badge style with medium quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleWindowMedium=0x7f0100b7;
        /**  Default quickcontact badge style with small quickcontact window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int quickContactBadgeStyleWindowSmall=0x7f0100b6;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>modeSmall</code></td><td>1</td><td></td></tr>
<tr><td><code>modeMedium</code></td><td>2</td><td></td></tr>
<tr><td><code>modeLarge</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int quickContactWindowSize=0x7f01029e;
        /**  Default RadioButton style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int radioButtonStyle=0x7f0100a4;
        /**  Defines the radius of the four corners. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int radius=0x7f0102ef;
        /**  The rating to set by default. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rating=0x7f01022f;
        /**  Default RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyle=0x7f0100a1;
        /**  Indicator RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyleIndicator=0x7f0100a2;
        /**  Small indicator RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyleSmall=0x7f0100a3;
        /**  A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int readPermission=0x7f01040d;
        /**  true if the storage is removable 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int removable=0x7f0103ed;
        /**  Defines how many times the animation should repeat. The default value is 0. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>infinite</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int repeatCount=0x7f010311;
        /**  Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>restart</code></td><td>1</td><td> The animation starts again from the beginning. </td></tr>
<tr><td><code>reverse</code></td><td>2</td><td> The animation plays backward. </td></tr>
</table>
         */
        public static final int repeatMode=0x7f010312;
        /**  Application's requirement for five way navigation 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int reqFiveWayNav=0x7f01043a;
        /**  Application's requirement for a hard keyboard 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int reqHardKeyboard=0x7f010438;
        /**  The input method preferred by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nokeys</code></td><td>1</td><td></td></tr>
<tr><td><code>qwerty</code></td><td>2</td><td></td></tr>
<tr><td><code>twelvekey</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int reqKeyboardType=0x7f010437;
        /**  The navigation device preferred by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nonav</code></td><td>1</td><td></td></tr>
<tr><td><code>dpad</code></td><td>2</td><td></td></tr>
<tr><td><code>trackball</code></td><td>3</td><td></td></tr>
<tr><td><code>wheel</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int reqNavigation=0x7f010439;
        /**  The touch screen type used by an application. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>notouch</code></td><td>1</td><td></td></tr>
<tr><td><code>stylus</code></td><td>2</td><td></td></tr>
<tr><td><code>finger</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int reqTouchScreen=0x7f010436;
        /**   Specify whether this feature is required for the application.
              The default is true, meaning the application requires the
              feature, and does not want to be installed on devices that
              don't support it.  If you set this to false, then this will
              not impose a restriction on where the application can be
              installed. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int required=0x7f010448;
        /**  Defines which edges should be faded on scrolling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int requiresFadingEdge=0x7f010180;
        /**  Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the minimum screen size an application is
             compatible with.  This attribute provides the required minimum
             "smallest screen width" (as per the -swNNNdp resource configuration)
             that the application can run on.  For example, a typical phone
             screen is 320, a 7" tablet 600, and a 10" tablet 720.  If the
             smallest screen width of the device is below the value supplied here,
             then the application is considered incompatible with that device.
             If not supplied, then any old smallScreens, normalScreens, largeScreens,
             or xlargeScreens attributes will be used instead. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int requiresSmallestWidthDp=0x7f01044c;
        /**  Color of the res-out outline. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int resOutColor=0x7f01022c;
        /**  Optional parameter which indicates if and how this widget can be
             resized. Supports combined values using | operator. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td></td></tr>
<tr><td><code>horizontal</code></td><td>0x1</td><td></td></tr>
<tr><td><code>vertical</code></td><td>0x2</td><td></td></tr>
</table>
         */
        public static final int resizeMode=0x7f0103aa;
        /**  Indicates whether the application can resize itself to newer
             screen sizes.  This is mostly used to distinguish between old
             applications that may not be compatible with newly introduced
             screen sizes and newer applications that should be; it will be
             set for you automatically based on whether you are targeting
             a newer platform that supports more screens. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int resizeable=0x7f010453;
        /**  Resource identifier to assign to this piece of named meta-data.
             The resource identifier can later be retrieved from the meta data
             Bundle through {@link android.os.Bundle#getInt Bundle.getInt}. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int resource=0x7f01045d;
        /**  Indicate that the application is prepared to attempt a restore of any
         backed-up dataset, even if the backup is apparently from a newer version
         of the application than is currently installed on the device.  Setting
         this attribute to <code>true</code> will permit the Backup Manager to
         attempt restore even when a version mismatch suggests that the data are
         incompatible.  <em>Use with caution!</em>

         <p>The default value of this attribute is <code>false</code>. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int restoreAnyVersion=0x7f01043f;
        /**  @deprecated This attribute is not used by the Android operating system. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int restoreNeedsApplication=0x7f01043e;
        /**  Amount of right padding inside the gradient shape. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int right=0x7f0102f6;
        /**  Default style for RingtonePreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ringtonePreferenceStyle=0x7f0100ed;
        /**  Which ringtone type(s) to show in the picker. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ringtone</code></td><td>1</td><td> Ringtones. </td></tr>
<tr><td><code>notification</code></td><td>2</td><td> Notification sounds. </td></tr>
<tr><td><code>alarm</code></td><td>4</td><td> Alarm sounds. </td></tr>
<tr><td><code>all</code></td><td>7</td><td> All available ringtone sounds. </td></tr>
</table>
         */
        public static final int ringtoneType=0x7f01037f;
        /**  rotation of the view, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotation=0x7f010198;
        /**  rotation of the view around the x axis, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotationX=0x7f010199;
        /**  rotation of the view around the y axis, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotationY=0x7f01019a;
        /**  The maxmimum number of rows to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowCount=0x7f010201;
        /**  Fraction of the animation duration used to delay the beginning of
         the animation of each row. 
         <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowDelay=0x7f010324;
        /**  Row edge flags. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
         */
        public static final int rowEdgeFlags=0x7f010395;
        /**  Defines the height of each row. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f010218;
        /**  When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowOrderPreserved=0x7f010204;
        /**  If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int saveEnabled=0x7f010189;
        /**  Specifies where the drawable is positioned after scaling. The default value is
             left. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int scaleGravity=0x7f01030a;
        /**  Scale height, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleHeight=0x7f010309;
        /**  Controls how the image should be resized or moved to match the size
             of this ImageView. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>matrix</code></td><td>0</td><td></td></tr>
<tr><td><code>fitXY</code></td><td>1</td><td></td></tr>
<tr><td><code>fitStart</code></td><td>2</td><td></td></tr>
<tr><td><code>fitCenter</code></td><td>3</td><td></td></tr>
<tr><td><code>fitEnd</code></td><td>4</td><td></td></tr>
<tr><td><code>center</code></td><td>5</td><td></td></tr>
<tr><td><code>centerCrop</code></td><td>6</td><td></td></tr>
<tr><td><code>centerInside</code></td><td>7</td><td></td></tr>
</table>
         */
        public static final int scaleType=0x7f0101ef;
        /**  Scale width, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleWidth=0x7f010308;
        /**  scale of the view in the x direction. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleX=0x7f01019b;
        /**  scale of the view in the y direction. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleY=0x7f01019c;
        /**  Specify a URI scheme that is handled, as per
             {@link android.content.IntentFilter#addDataScheme
             IntentFilter.addDataScheme()}.
             <p><em>Note: scheme matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             schemes here should always use lower case letters.</em></p> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scheme=0x7f01045f;
        /**  Specifies a compatible screen density, as per the device
             configuration screen density bins. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ldpi</code></td><td>120</td><td> A low density screen, approximately 120dpi. </td></tr>
<tr><td><code>mdpi</code></td><td>160</td><td> A medium density screen, approximately 160dpi. </td></tr>
<tr><td><code>hdpi</code></td><td>240</td><td> A high density screen, approximately 240dpi. </td></tr>
<tr><td><code>xhdpi</code></td><td>320</td><td> An extra high density screen, approximately 320dpi. </td></tr>
</table>
         */
        public static final int screenDensity=0x7f010463;
        /**  Specify the orientation an activity should be run in.  If not
         specified, it will run in the current preferred orientation
         of the screen. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unspecified</code></td><td>-1</td><td> No preference specified: let the system decide the best
             orientation.  This will either be the orientation selected
             by the activity below, or the user's preferred orientation
             if this activity is the bottom of a task. If the user
             explicitly turned off sensor based orientation through settings
             sensor based device rotation will be ignored. If not by default
             sensor based orientation will be taken into account and the 
             orientation will changed based on how the user rotates the device </td></tr>
<tr><td><code>landscape</code></td><td>0</td><td> Would like to have the screen in a landscape orientation: that
             is, with the display wider than it is tall, ignoring sensor data. </td></tr>
<tr><td><code>portrait</code></td><td>1</td><td> Would like to have the screen in a portrait orientation: that
             is, with the display taller than it is wide, ignoring sensor data. </td></tr>
<tr><td><code>user</code></td><td>2</td><td> Use the user's current preferred orientation of the handset. </td></tr>
<tr><td><code>behind</code></td><td>3</td><td> Keep the screen in the same orientation as whatever is behind
             this activity. </td></tr>
<tr><td><code>sensor</code></td><td>4</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device. </td></tr>
<tr><td><code>nosensor</code></td><td>5</td><td> Always ignore orientation determined by orientation sensor:
             the display will not rotate when the user moves the device. </td></tr>
<tr><td><code>sensorLandscape</code></td><td>6</td><td> Would like to have the screen in landscape orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>sensorPortrait</code></td><td>7</td><td> Would like to have the screen in portrait orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>reverseLandscape</code></td><td>8</td><td> Would like to have the screen in landscape orientation, turned in
             the opposite direction from normal landscape. </td></tr>
<tr><td><code>reversePortrait</code></td><td>9</td><td> Would like to have the screen in portrait orientation, turned in
             the opposite direction from normal portrait. </td></tr>
<tr><td><code>fullSensor</code></td><td>10</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device.
             This allows any of the 4 possible rotations, regardless of what
             the device will normally do (for example some devices won't
             normally use 180 degree rotation). </td></tr>
</table>
         */
        public static final int screenOrientation=0x7f010430;
        /**  Specifies a compatible screen size, as per the device
             configuration screen size bins. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>small</code></td><td>200</td><td> A small screen configuration, at least 240x320db. </td></tr>
<tr><td><code>normal</code></td><td>300</td><td> A normal screen configuration, at least 320x480db. </td></tr>
<tr><td><code>large</code></td><td>400</td><td> A large screen configuration, at least 400x530db. </td></tr>
<tr><td><code>xlarge</code></td><td>500</td><td> An extra large screen configuration, at least 600x800db. </td></tr>
</table>
         */
        public static final int screenSize=0x7f010462;
        /**  Whether the text is allowed to be wider than the view (and
             therefore can be scrolled horizontally). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollHorizontally=0x7f01024d;
        /**  The padding for the scroll indicator area 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollIndicatorPaddingLeft=0x7f0103f8;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollIndicatorPaddingRight=0x7f0103f9;
        /**  Default ScrollView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollViewStyle=0x7f0100a5;
        /**  The initial horizontal scroll offset, in pixels.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollX=0x7f010164;
        /**  The initial vertical scroll offset, in pixels. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollY=0x7f010165;
        /**  Defines whether the horizontal scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawHorizontalTrack=0x7f01017d;
        /**  Defines whether the vertical scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawVerticalTrack=0x7f01017e;
        /**  Defines the delay in milliseconds that a scrollbar waits before fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarDefaultDelayBeforeFade=0x7f010177;
        /**  Defines the delay in milliseconds that a scrollbar takes to fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarFadeDuration=0x7f010176;
        /**  Sets the width of vertical scrollbars and height of horizontal scrollbars. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarSize=0x7f010178;
        /**  Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
         */
        public static final int scrollbarStyle=0x7f010173;
        /**  Defines the horizontal scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbHorizontal=0x7f010179;
        /**  Defines the vertical scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbVertical=0x7f01017a;
        /**  Defines the horizontal scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackHorizontal=0x7f01017b;
        /**  Defines the vertical scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackVertical=0x7f01017c;
        /**  Defines which scrollbars should be displayed on scrolling or not. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
         */
        public static final int scrollbars=0x7f010172;
        /**  When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollingCache=0x7f0101cc;
        /**  If supplied, this string will be displayed as the text of the "Search" button.
          <i>Optional attribute.</i>
          {@deprecated This will create a non-standard UI appearance, because the search bar UI is
                       changing to use only icons for its buttons.}
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int searchButtonText=0x7f010346;
        /**  Theme to use for Search Dialogs 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchDialogTheme=0x7f01010f;
        /**  SearchView dropdown background 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchDropdownBackground=0x7f010106;
        /**  Additional features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.  <i>Optional attribute.</i>
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showSearchLabelAsBadge</code></td><td>0x04</td><td> If set, this flag enables the display of the search target (label) within the
               search bar.  If neither bad mode is selected, no badge will be shown. </td></tr>
<tr><td><code>showSearchIconAsBadge</code></td><td>0x08</td><td><strong>This is deprecated.</strong><br/>The default
              application icon is now always used, so this option is
              obsolete.</td></tr>
<tr><td><code>queryRewriteFromData</code></td><td>0x10</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_INTENT_DATA to
               be considered as the text for suggestion query rewriting.  This should only
               be used when the values in SUGGEST_COLUMN_INTENT_DATA are suitable for user
               inspection and editing - typically, HTTP/HTTPS Uri's. </td></tr>
<tr><td><code>queryRewriteFromText</code></td><td>0x20</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_TEXT_1 to
               be considered as the text for suggestion query rewriting.  This should be used
               for suggestions in which no query text is provided and the SUGGEST_COLUMN_INTENT_DATA
               values are not suitable for user inspection and editing. </td></tr>
</table>
         */
        public static final int searchMode=0x7f010347;
        /**  The list item height for search results. @hide 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchResultListItemHeight=0x7f010056;
        /**  If provided, this string will be used to describe the searchable item in the
             searchable items settings within system search settings. <i>Optional
             attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSettingsDescription=0x7f010355;
        /**  If provided, this is the trigger indicating that the searchable activity
            provides suggestions as well.  The value must be a fully-qualified content provider
            authority (e.g. "com.example.android.apis.SuggestionProvider") and should match the
            "android:authorities" tag in your content provider's manifest entry.  <i>Optional
            attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestAuthority=0x7f01034d;
        /**  If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the action field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestIntentAction=0x7f010350;
        /**  If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the data field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestIntentData=0x7f010351;
        /**  If provided, this will be inserted in the suggestions query Uri, after the authority
            you have provide but before the standard suggestions path. <i>Optional attribute.</i>
            
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestPath=0x7f01034e;
        /**  If provided, suggestion queries will be passed into your query function
            as the <i>selection</i> parameter.  Typically this will be a WHERE clause for your
            database, and will contain a single question mark, which represents the actual query
            string that has been typed by the user.  If not provided, then the user query text
            will be appended to the query Uri (after an additional "/".)  <i>Optional
            attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestSelection=0x7f01034f;
        /**  If provided, this is the minimum number of characters needed to trigger
             search suggestions. The default value is 0. <i>Optional attribute.</i> 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int searchSuggestThreshold=0x7f010352;
        /**  SearchView close button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewCloseIcon=0x7f010107;
        /**  SearchView query refinement icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewEditQuery=0x7f01010b;
        /**  SearchView query refinement icon background 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewEditQueryBackground=0x7f01010c;
        /**  SearchView Go button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewGoIcon=0x7f010108;
        /**  SearchView Search icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewSearchIcon=0x7f010109;
        /**  SearchView text field background for the left section 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewTextField=0x7f01010d;
        /**  SearchView text field background for the right section 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewTextFieldRight=0x7f01010e;
        /**  SearchView Voice button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewVoiceIcon=0x7f01010a;
        /**  Search widget more corpus result item background. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int searchWidgetCorpusItemBackground=0x7f010032;
        /**  Defines the secondary progress value, between 0 and max. This progress is drawn between
             the primary progress and the background.  It can be ideal for media scenarios such as
             showing the buffering progress while the default progress shows the play progress. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int secondaryProgress=0x7f01021f;
        /**  Default SeekBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int seekBarStyle=0x7f0100a0;
        /**  Style for segmented buttons - a container that houses several buttons
             with the appearance of a singel button broken into segments. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int segmentedButtonStyle=0x7f010102;
        /**  If the text is selectable, select it all when the view takes
             focus. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int selectAllOnFocus=0x7f010251;
        /**  Whether the Preference is selectable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int selectable=0x7f010371;
        /**  Background drawable for standalone items that need focus/pressed states. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectableItemBackground=0x7f010103;
        /**  Drawable for the vertical bar shown at the beginning and at the end of the selected date. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectedDateVerticalBar=0x7f0102c9;
        /**  The background color for the selected week. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int selectedWeekBackgroundColor=0x7f0102c4;
        /**  @hide The divider for making the selection area. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectionDivider=0x7f0102cd;
        /**  @hide The height of the selection divider. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int selectionDividerHeight=0x7f0102ce;
        /**  @hide The distance between the two selection dividers. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int selectionDividersDistance=0x7f0102cf;
        /**  Component name of an activity that allows the user to modify
             the settings for this service. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int settingsActivity=0x7f0101b9;
        /**  Place a shadow of the specified color behind the text. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowColor=0x7f010254;
        /**  Horizontal offset of the shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowDx=0x7f010255;
        /**  Vertical offset of the shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowDy=0x7f010256;
        /**  Radius of the shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shadowRadius=0x7f010257;
        /**  Indicates what shape to fill with a gradient. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rectangle</code></td><td>0</td><td> Rectangle shape, with optional rounder corners. </td></tr>
<tr><td><code>oval</code></td><td>1</td><td> Oval shape. </td></tr>
<tr><td><code>line</code></td><td>2</td><td> Line shape. </td></tr>
<tr><td><code>ring</code></td><td>3</td><td> Ring shape. </td></tr>
</table>
         */
        public static final int shape=0x7f0102de;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shareInterpolator=0x7f010315;
        /**  Specify the name of a user ID that will be shared between multiple
         packages.  By default, each package gets its own unique user-id.
         By setting this value on two or more packages, each of these packages
         will be given a single shared user ID, so they can for example run
         in the same process.  Note that for them to actually get the same
         user ID, they must also be signed with the same signature. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int sharedUserId=0x7f010414;
        /**  Specify a label for the shared user UID of this package.  This is
         only used if you have also used android:sharedUserId.  This must
         be a reference to a string resource; it can not be an explicit
         string. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int sharedUserLabel=0x7f010415;
        /**  Whether the view of this Preference should be disabled when
             this Preference is disabled. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shouldDisableView=0x7f010374;
        /**  How this item should display in the Action Bar, if present. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always". </td></tr>
<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always". </td></tr>
<tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
<tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation. </td></tr>
<tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container. </td></tr>
</table>
         */
        public static final int showAsAction=0x7f010363;
        /**  Whether to show an item for a default sound. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showDefault=0x7f010380;
        /**  Setting for which dividers to show. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>beginning</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int showDividers=0x7f0101ff;
        /**  Specify that an Activity should be shown over the lock screen and,
         in a multiuser environment, across all users' windows 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showOnLockScreen=0x7f010429;
        /**  Whether to show an item for 'Silent'. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showSilent=0x7f010381;
        /**  Whether do show week numbers. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showWeekNumber=0x7f0102c2;
        /**  The number of weeks to be shown. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shownWeekCount=0x7f0102c3;
        /**  The zero-based index of the columns to shrink. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can shrink all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shrinkColumns=0x7f010234;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int singleChoiceItemLayout=0x7f010140;
        /**  Constrains the text to a single horizontally scrolling line
             instead of letting it wrap onto multiple lines, and advances
             focus instead of inserting a newline when you press the
             enter key.

             The default value is false (multi-line wrapped text mode) for non-editable text, but if
             you specify any value for inputType, the default is true (single-line input field mode).

             {@deprecated This attribute is deprecated. Use <code>maxLines</code> instead to change
             the layout of a static text, and use the <code>textMultiLine</code> flag in the
             inputType attribute instead for editable text views (if both singleLine and inputType
             are supplied, the inputType flags will override the value of singleLine). } 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int singleLine=0x7f01024f;
        /**  If set to true, a single instance of this component will run for
         all users.  That instance will run as user 0, the default/primary
         user.  When the app running is in processes for other users and interacts
         with this component (by binding to a service for example) those processes will
         always interact with the instance running for user 0.  Enabling
         single user mode forces "exported" of the component to be false, to
         help avoid introducing multi-user security bugs.  This feature is only
         available to applications built in to the system image; you must hold the
         permission INTERACT_ACROSS_USERS in order
         to use this feature.  This flag can only be used with services,
         receivers, and providers; it can not be used with activities. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int singleUser=0x7f01041d;
        /**  Smaller icon of the authenticator. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int smallIcon=0x7f0103b0;
        /**  Indicates whether the application supports smaller screen form-factors.
             A small screen is defined as one with a smaller aspect ratio than
             the traditional HVGA screen; that is, for a portrait screen, less
             tall than an HVGA screen.  In practice, this means a QVGA low
             density or VGA high density screen.  An application that does
             not support small screens <em>will not be available</em> for
             small screen devices, since there is little the platform can do
             to make such an application work on a smaller screen. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smallScreens=0x7f01044f;
        /**  When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smoothScrollbar=0x7f0101d1;
        /**  How close we need to be before snapping to a target. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int snapMargin=0x7f0103ca;
        /**  @hide Color for the solid color background if such for optimized rendering. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int solidColor=0x7f0102cc;
        /**  Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int soundEffectsEnabled=0x7f01018e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacing=0x7f0101e7;
        /**  Default style for spinner drop down items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerDropDownItemStyle=0x7f0100b1;
        /**  Default spinner item style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerItemStyle=0x7f0100b3;
        /**  Display mode for spinner options. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>dialog</code></td><td>0</td><td> Spinner options will be presented to the user as a dialog window. </td></tr>
<tr><td><code>dropdown</code></td><td>1</td><td> Spinner options will be presented to the user as an inline dropdown
                 anchored to the spinner widget itself. </td></tr>
</table>
         */
        public static final int spinnerMode=0x7f010282;
        /**  Default Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerStyle=0x7f0100a7;
        /**  Whether the spinners are shown. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spinnersShown=0x7f010287;
        /**  Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int splitMotionEvents=0x7f0101ad;
        /**  Sets a drawable as the content of this ImageView. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int src=0x7f0101ee;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x7f0101cb;
        /**  Default StackView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int stackViewStyle=0x7f0100c0;
        /**  Default Star style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int starStyle=0x7f0100ab;
        /**  Start color of the gradient. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int startColor=0x7f0102e3;
        /**  Delay in milliseconds before the animation runs, once start time is reached. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int startOffset=0x7f010310;
        /**  The first year (inclusive), for example "1940".
             {@deprecated Use minDate instead.}
         
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        @Deprecated
        public static final int startYear=0x7f010285;
        /**  Indicates that an Activity does not need to have its freeze state
         (as returned by {@link android.app.Activity#onSaveInstanceState}
         retained in order to be restarted.  Generally you use this for activities
         that do not store any state.  When this flag is set, if for some reason
         the activity is killed before it has a chance to save its state,
         then the system will not remove it from the activity stack like
         it normally would.  Instead, the next time the user navigates to
         it its {@link android.app.Activity#onCreate} method will be called
         with a null icicle, just like it was starting for the first time.
         
         <p>This is used by the Home activity to make sure it does not get
         removed if it crashes for some reason. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stateNotNeeded=0x7f010427;
        /**  State identifier indicating the popup will be above the anchor. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_above_anchor=0x7f010344;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             indicating that the Drawable is in a view that is hardware accelerated.
             This means that the device can at least render a full-screen scaled
             bitmap with one layer of text and bitmaps composited on top of it
             at 60fps.  When this is set, the colorBackgroundCacheHint will be
             ignored even if it specifies a solid color, since that optimization
             is not needed. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_accelerated=0x7f01033d;
        /**  State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a View has accessibility focus. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_accessibility_focused=0x7f010341;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view or its parent has been "activated" meaning the user has currently
             marked it as being of interest.  This is an alternative representation of
             state_checked for when the state should be propagated down the view hierarchy. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_activated=0x7f010337;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_active=0x7f010338;
        /**  State identifier indicating that the object <var>may</var> display a check mark.
             See {@link R.attr#state_checked} for the identifier that indicates whether it is
             actually checked. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_checkable=0x7f010333;
        /**  State identifier indicating that the object is currently checked.  See
             {@link R.attr#state_checkable} for an additional identifier that can indicate if
             any object may ever display a check, regardless of whether state_checked is
             currently set. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_checked=0x7f010334;
        /**  State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that the Drawable is in a view that is capable of accepting a drop of
             the content currently being manipulated in a drag-and-drop operation. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_drag_can_accept=0x7f01033f;
        /**  State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a drag operation (for which the Drawable's view is a valid recipient)
             is currently positioned over the Drawable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_drag_hovered=0x7f010340;
        /**  State identifier indicating the group is empty (has no children). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_empty=0x7f010343;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view is enabled. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_enabled=0x7f010332;
        /**  State identifier indicating the group is expanded. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_expanded=0x7f010342;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_first=0x7f01033a;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_focused=0x7f010330;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a pointer is hovering over the view. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_hovered=0x7f01033e;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_last=0x7f01033c;
        /**  State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_long_pressable=0x7f010390;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_middle=0x7f01033b;
        /**  State identifier indicating a TextView has a multi-line layout. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_multiline=0x7f010345;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when the user is pressing down in a view. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_pressed=0x7f010336;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view (or one of its parents) is currently selected. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_selected=0x7f010335;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_single=0x7f010339;
        /**  State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view's window has input focus. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_window_focused=0x7f010331;
        /**  A resource id of a static drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int staticWallpaperPreview=0x7f0103ac;
        /**  The step size of the rating. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stepSize=0x7f010230;
        /**  If set to true, this service with be automatically stopped
             when the user remove a task rooted in an activity owned by
             the application.  The default is false. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stopWithTask=0x7f010458;
        /**  user visible description of the storage 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int storageDescription=0x7f0103eb;
        /**  Different audio stream types. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>0</td><td></td></tr>
<tr><td><code>system</code></td><td>1</td><td></td></tr>
<tr><td><code>ring</code></td><td>2</td><td></td></tr>
<tr><td><code>music</code></td><td>3</td><td></td></tr>
<tr><td><code>alarm</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int streamType=0x7f010382;
        /**  The zero-based index of the columns to stretch. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can stretch all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stretchColumns=0x7f010233;
        /**  Defines how columns should stretch to fill the available empty space, if any. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Stretching is disabled. </td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td> The spacing between each column is stretched. </td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td> Each column is stretched equally. </td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td> The spacing between each column is uniformly stretched.. </td></tr>
</table>
         */
        public static final int stretchMode=0x7f0101eb;
        /**  Specifies subtitle text used for navigationMode="normal" 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtitle=0x7f0103d2;
        /**  Specifies a style to use for subtitle text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int subtitleTextStyle=0x7f0103d4;
        /**  The extra value of the subtype. This string can be any string and will be passed to
             the SpellChecker.  
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtypeExtraValue=0x7f0101c2;
        /**  The unique id for the subtype. The input method framework keeps track of enabled
             subtypes by ID. When the IME package gets upgraded, enabled IDs will stay enabled even
             if other attributes are different. If the ID is unspecified (by calling the other
             constructor or 0. Arrays.hashCode(new Object[] {locale, mode, extraValue,
             isAuxiliary, overridesImplicitlyEnabledSubtype}) will be used instead. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtypeId=0x7f0101c0;
        /**  The locale of the subtype. This string should be a locale (e.g. en_US, fr_FR...)
             This is also used by the framework to know the supported locales
             of the spell checker.  
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtypeLocale=0x7f0101c1;
        /**  If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, there are two ways to handle this.  If <i>all</i> of your suggestions
            can handle the action key, you can simply define the action message using this
            attribute.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestActionMsg=0x7f010358;
        /**  If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, but you do not wish to enable this action key for every suggestion,
            then you can use this attribute to control it on a suggestion-by-suggestion basis.
            First, you must define a column (and name it here) where your suggestions will include
            the action string.  Then, in your content provider, you must provide this column, and
            when desired, provide data in this column.
            The search manager will look at your suggestion cursor, using the string
            provided here in order to select a column, and will use that to select a string from
            the cursor.  That string will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to
            your searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra
            getStringExtra(SearchManager.ACTION_MSG)}.  <i>If the data does not exist for the
            selection suggestion, the action key will be ignored.</i><i>Optional attribute.</i> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestActionMsgColumn=0x7f010359;
        /**  The summary for the item. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summary=0x7f01036a;
        /**  Column in data table that summarizes this data. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summaryColumn=0x7f0103b8;
        /**  The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is unchecked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summaryOff=0x7f010376;
        /**  The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is checked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int summaryOn=0x7f010375;
        /**  Declare that your application will be able to deal with RTL (right to left) layouts.
             If set to  false (default value), your application will not care about RTL layouts. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int supportsRtl=0x7f010446;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int supportsUploading=0x7f0103b5;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f0103e1;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f0103e2;
        /**  Default style for switch preferences. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchPreferenceStyle=0x7f0100f0;
        /**  Default style for the Switch widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchStyle=0x7f010112;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchTextAppearance=0x7f0103e0;
        /**  The text used on the switch itself when in the "off" state.
             This should be a very SHORT string, as it appears in a small space. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchTextOff=0x7f0103f3;
        /**  The text used on the switch itself when in the "on" state.
             This should be a very SHORT string, as it appears in a small space. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchTextOn=0x7f0103f2;
        /**  Flag indicating whether this content provider would like to
         participate in data synchronization. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int syncable=0x7f01042b;
        /**  Layout used to organize each tab's content. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabLayout=0x7f01023b;
        /**  Determines whether the strip under the tab indicators is drawn or not. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tabStripEnabled=0x7f010238;
        /**  Drawable used to draw the left part of the strip underneath the tabs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabStripLeft=0x7f010239;
        /**  Drawable used to draw the right part of the strip underneath the tabs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabStripRight=0x7f01023a;
        /**  Default TabWidget style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int tabWidgetStyle=0x7f0100ac;
        /**  Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tag=0x7f010163;
        /**  The name of the activity this alias should launch.  The activity
             must be in the same manifest as the alias, and have been defined
             in that manifest before the alias here.  This must use a Java-style
             naming convention to ensure the name is unique, for example
             "com.mycompany.MyName". 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetActivity=0x7f01045b;
        /**  The class part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetClass=0x7f010467;
        /**  Reference to an array resource that be used as description for the targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDescriptions=0x7f0103c3;
        /**  Reference to an array resource that be shown as targets around a circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDrawables=0x7f0103c2;
        /**  The name of the application package that an Instrumentation object
         will run against. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetPackage=0x7f010433;
        /**  This is the SDK version number that the application is targeting.
             It is able to run on older versions (down to minSdkVersion), but
             was explicitly tested to work with the version specified here.
             Specifying this version allows the platform to disable compatibility
             code that are not required or enable newer features that are not
             available to older applications.  This may also be a string
             (such as "Donut") if this is built against a development
             branch, in which case minSdkVersion is also forced to be that
             string. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int targetSdkVersion=0x7f01044a;
        /**  Specify a task name that activities have an "affinity" to.
         Use with the application tag (to supply a default affinity for all
         activities in the application), or with the activity tag (to supply
         a specific affinity for that component).
    
         <p>The default value for this attribute is the same as the package
         name, indicating that all activities in the manifest should generally
         be considered a single "application" to the user.  You can use this
         attribute to modify that behavior: either giving them an affinity
         for another task, if the activities are intended to be part of that
         task from the user's perspective, or using an empty string for
         activities that have no affinity to a task. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int taskAffinity=0x7f01041f;
        /**   When closing the last activity of a task, this is the animation that is
              run on the activity of the next task (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskCloseEnterAnimation=0x7f010154;
        /**   When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskCloseExitAnimation=0x7f010155;
        /**   When opening an activity in a new task, this is the animation that is
              run on the activity of the new task (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskOpenEnterAnimation=0x7f010152;
        /**   When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskOpenExitAnimation=0x7f010153;
        /**   When sending the current task to the background, this is the
              animation that is run on the top activity of the task behind
              it (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToBackEnterAnimation=0x7f010158;
        /**   When sending the current task to the background, this is the
              animation that is run on the top activity of the current task
              (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToBackExitAnimation=0x7f010159;
        /**   When bringing an existing task to the foreground, this is the
              animation that is run on the top activity of the task being brought
              to the foreground (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToFrontEnterAnimation=0x7f010156;
        /**   When bringing an existing task to the foreground, this is the
              animation that is run on the current foreground activity
              (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int taskToFrontExitAnimation=0x7f010157;
        /**  This is the amount of tension. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tension=0x7f010329;
        /**  Option to indicate this application is only for testing purposes.
         For example, it may expose functionality or data outside of itself
         that would cause a security hole, but is useful for testing.  This
         kind of application can not be installed without the
         INSTALL_ALLOW_TEST flag, which means only through adb install.  
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int testOnly=0x7f01040a;
        /**  Text to display. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int text=0x7f010241;
        /**  Defines the alignment of the text. A heuristic is used to determine the resolved
            text alignment. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>gravity</code></td><td>1</td><td> Default for the root view. The gravity determines the alignment, ALIGN_NORMAL,
                ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph’s
                text direction </td></tr>
<tr><td><code>textStart</code></td><td>2</td><td> Align to the start of the paragraph, e.g. ALIGN_NORMAL. </td></tr>
<tr><td><code>textEnd</code></td><td>3</td><td> Align to the end of the paragraph, e.g. ALIGN_OPPOSITE. </td></tr>
<tr><td><code>center</code></td><td>4</td><td> Center the paragraph, e.g. ALIGN_CENTER. </td></tr>
<tr><td><code>viewStart</code></td><td>5</td><td> Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
                layoutDirection is LTR, and ALIGN_RIGHT otherwise. </td></tr>
<tr><td><code>viewEnd</code></td><td>6</td><td> Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
                layoutDirection is LTR, and ALIGN_LEFT otherwise </td></tr>
</table>
         */
        public static final int textAlignment=0x7f0101a1;
        /**  Present the text in ALL CAPS. This may use a small-caps form when available. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textAllCaps=0x7f01023c;
        /**  Default appearance of text: color, typeface, size, and style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearance=0x7f01001f;
        /**  The underline color and thickness for auto correction suggestion 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceAutoCorrectionSuggestion=0x7f010040;
        /**  Text color, typeface, size, and style for the text inside of a button. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceButton=0x7f01003b;
        /**  The underline color and thickness for easy correct suggestion 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceEasyCorrectSuggestion=0x7f01003e;
        /**  Default appearance of text against an inverted background:
             color, typeface, size, and style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceInverse=0x7f010020;
        /**  Text color, typeface, size, and style for "large" text. Defaults to primary text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLarge=0x7f010033;
        /**  Text color, typeface, size, and style for "large" inverse text. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLargeInverse=0x7f010036;
        /**  Text color, typeface, size, and style for the text inside of a popup menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLargePopupMenu=0x7f01003c;
        /**  The preferred TextAppearance for the primary text of list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItem=0x7f010059;
        /**  The preferred TextAppearance for the primary text of small list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItemSmall=0x7f01005a;
        /**  Text color, typeface, size, and style for "medium" text. Defaults to primary text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceMedium=0x7f010034;
        /**  Text color, typeface, size, and style for "medium" inverse text. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceMediumInverse=0x7f010037;
        /**  The underline color and thickness for misspelled suggestion 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceMisspelledSuggestion=0x7f01003f;
        /**  Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultSubtitle=0x7f01003a;
        /**  Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultTitle=0x7f010039;
        /**  Text color, typeface, size, and style for "small" text. Defaults to secondary text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmall=0x7f010035;
        /**  Text color, typeface, size, and style for "small" inverse text. Defaults to secondary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmallInverse=0x7f010038;
        /**  Text color, typeface, size, and style for small text inside of a popup menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmallPopupMenu=0x7f01003d;
        /**  Drawable to use for check marks. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textCheckMark=0x7f010048;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textCheckMarkInverse=0x7f010049;
        /**  Color of text (usually same as colorForeground). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColor=0x7f01011c;
        /**  Color of list item text in alert dialogs. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorAlertDialogListItem=0x7f010031;
        /**  Color of highlighted text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHighlight=0x7f01011d;
        /**  Color of highlighted text, when used in a light theme. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHighlightInverse=0x7f01002f;
        /**  Color of hint text (displayed when the field is empty). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHint=0x7f01011e;
        /**  Inverse hint text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorHintInverse=0x7f010027;
        /**  Color of link text (URLs). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorLink=0x7f01011f;
        /**  Color of link text (URLs), when used in a light theme. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorLinkInverse=0x7f010030;
        /**  The most prominent text color.  
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimary=0x7f010021;
        /**  Bright text color. Only differentiates based on the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryDisableOnly=0x7f010028;
        /**  Primary inverse text color, useful for inverted backgrounds. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryInverse=0x7f010024;
        /**  Bright inverse text color. Only differentiates based on the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryInverseDisableOnly=0x7f010029;
        /**  Bright inverse text color. This does not differentiate the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryInverseNoDisable=0x7f01002c;
        /**  Bright text color. This does not differentiate the disabled state. As an example,
             buttons use this since they display the disabled state via the background and not the
             foreground text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorPrimaryNoDisable=0x7f01002a;
        /**  Text color for urls in search suggestions, used by things like global search and the browser. @hide 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSearchUrl=0x7f01002e;
        /**  Secondary text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondary=0x7f010022;
        /**  Secondary inverse text color, useful for inverted backgrounds. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondaryInverse=0x7f010025;
        /**  Dim inverse text color. This does not differentiate the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondaryInverseNoDisable=0x7f01002d;
        /**  Dim text color. This does not differentiate the disabled state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSecondaryNoDisable=0x7f01002b;
        /**  Tertiary text color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorTertiary=0x7f010023;
        /**  Tertiary inverse text color, useful for inverted backgrounds. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorTertiaryInverse=0x7f010026;
        /**  Reference to a drawable that will be drawn under the insertion cursor. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textCursorDrawable=0x7f010120;
        /**  Defines the direction of the text. A heuristic is used to determine the resolved text
              direction of paragraphs. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>firstStrong</code></td><td>1</td><td> Default for the root view. The first strong directional character determines the
                 paragraph direction.  If there is no strong directional character, the paragraph
                 direction is the view’s resolved layout direction. </td></tr>
<tr><td><code>anyRtl</code></td><td>2</td><td> The paragraph direction is RTL if it contains any strong RTL character, otherwise
                 it is LTR if it contains any strong LTR characters.  If there are neither, the
                 paragraph direction is the view’s resolved layout direction. </td></tr>
<tr><td><code>ltr</code></td><td>3</td><td> The paragraph direction is left to right. </td></tr>
<tr><td><code>rtl</code></td><td>4</td><td> The paragraph direction is right to left. </td></tr>
<tr><td><code>locale</code></td><td>5</td><td> The paragraph direction is coming from the system Locale. </td></tr>
</table>
         */
        public static final int textDirection=0x7f0101a0;
        /**  Variation of textEditPasteWindowLayout displayed when the clipboard is empty. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textEditNoPasteWindowLayout=0x7f0100f5;
        /**  The layout of the view that is displayed on top of the cursor to paste inside a
             TextEdit field. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textEditPasteWindowLayout=0x7f0100f4;
        /**  Variation of textEditSidePasteWindowLayout displayed when the clipboard is empty. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textEditSideNoPasteWindowLayout=0x7f0100f7;
        /**  Used instead of textEditPasteWindowLayout when the window is moved on the side of the
             insertion cursor because it would be clipped if it were positioned on top. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textEditSidePasteWindowLayout=0x7f0100f6;
        /**  Layout of the TextView item that will populate the suggestion popup window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textEditSuggestionItemLayout=0x7f0100f8;
        /**  When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textFilterEnabled=0x7f0101cd;
        /**  Indicates that the content of a non-editable TextView can be selected.
     Default value is false. EditText content is always selectable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textIsSelectable=0x7f010121;
        /**  The text for the button when it is not checked. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOff=0x7f0101f9;
        /**  The text for the button when it is checked. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOn=0x7f0101f8;
        /**  Sets the horizontal scaling factor for the text. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textScaleX=0x7f010243;
        /**  Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandle=0x7f0100f3;
        /**  Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandleLeft=0x7f0100f1;
        /**  Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandleRight=0x7f0100f2;
        /**  Reference to a style that will be used for the window containing a text
             selection anchor. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSelectHandleWindowStyle=0x7f0100bc;
        /**  Size of text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp).
         Supported values include the following:<p/>
    <ul>
        <li><b>px</b> Pixels</li>
        <li><b>sp</b> Scaled pixels (scaled to relative pixel size on screen). See {@link android.util.DisplayMetrics} for more information.</li>
        <li><b>pt</b> Points</li>
        <li><b>dip</b> Device independent pixels. See {@link android.util.DisplayMetrics} for more information.</li>
    </ul>
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textSize=0x7f010118;
        /**  Default text typeface style. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int textStyle=0x7f01011b;
        /**  Reference to a style that will be used for the window containing a list of possible
             text suggestions in an EditText. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textSuggestionsWindowStyle=0x7f0100bd;
        /**   The underline color 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textUnderlineColor=0x7f010041;
        /**   The underline thickness 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int textUnderlineThickness=0x7f010042;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textView=0x7f010402;
        /**  Default TextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textViewStyle=0x7f0100ad;
        /**  The overall theme to use for an activity.  Use with either the
         application tag (to supply a default theme for all activities) or
         the activity tag (to supply a specific theme for that activity).
    
         <p>This automatically sets
         your activity's Context to use this theme, and may also be used
         for "starting" animations prior to the activity being launched (to
         better match what the activity actually looks like).  It is a reference
         to a style resource defining the theme.  If not set, the default
         system theme will be used. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int theme=0x7f010403;
        /**  Thickness of the ring. When defined, thicknessRatio is ignored. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thickness=0x7f0102e2;
        /**  Thickness of the ring expressed as a ratio of the ring's width. For instance,
             if thicknessRatio=3, then the thickness equals the ring's width divided by 3.
             This value is ignored if innerRadius is defined. Default value is 3. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thicknessRatio=0x7f0102e0;
        /**  Draws the thumb on a seekbar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumb=0x7f01022a;
        /**  An offset for the thumb that allows it to extend out of the range of the track. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbOffset=0x7f01022b;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbTextPadding=0x7f0103df;
        /**  Reference to a the wallpaper's thumbnail bitmap. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumbnail=0x7f0103ad;
        /**  Defines the tile mode. When the tile mode is enabled, the bitmap is repeated.
             Gravity is ignored when the tile mode is enabled. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>-1</td><td> Do not tile the bitmap. This is the default value. </td></tr>
<tr><td><code>clamp</code></td><td>0</td><td> Replicates the edge color. </td></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Repeats the bitmap in both direction. </td></tr>
<tr><td><code>mirror</code></td><td>2</td><td> Repeats the shader's image horizontally and vertically, alternating
                 mirror images so that adjacent images always seam. </td></tr>
</table>
         */
        public static final int tileMode=0x7f010307;
        /**  The TimePicker style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int timePickerStyle=0x7f0100c2;
        /**  Specifies the time zone to use. When this attribute is specified, the
             TextClock will ignore the time zone of the system. To use the user's
             time zone, do not specify this attribute. The default value is the
             user's time zone. Please refer to {@link java.util.TimeZone} for more
             information about time zone ids. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int timeZone=0x7f01023f;
        /**  Set a tinting color for the image. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tint=0x7f0101f3;
        /**  The title associated with the item. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int title=0x7f01035e;
        /**  The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleCondensed=0x7f01035f;
        /**  Specifies a style to use for title text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int titleTextStyle=0x7f0103d3;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toAlpha=0x7f01031f;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toDegrees=0x7f0102fc;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toXDelta=0x7f01031b;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toXScale=0x7f010317;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toYDelta=0x7f01031d;
        /** <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int toYScale=0x7f010319;
        /**  Background to use for toasts 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int toastFrameBackground=0x7f010105;
        /**  Amount of top padding inside the gradient shape. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int top=0x7f0102f5;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int topBright=0x7f010139;
        /** <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int topDark=0x7f010135;
        /**  Radius of the top left corner. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topLeftRadius=0x7f0102f0;
        /**  Extra offset for the handle at the top of the SlidingDrawer. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topOffset=0x7f010290;
        /**  Radius of the top right corner. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topRightRadius=0x7f0102f1;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int track=0x7f0103de;
        /**  Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td> The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen. </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td> The list will automatically scroll to the bottom, no matter what items
                 are currently visible. </td></tr>
</table>
         */
        public static final int transcriptMode=0x7f0101ce;
        /**  x location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotX property of the View. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transformPivotX=0x7f010196;
        /**  y location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotY property of the View. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transformPivotY=0x7f010197;
        /**  translation in x of the view. This value is added post-layout to the left
             property of the view, which is set by its layout. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int translationX=0x7f010194;
        /**  translation in y of the view. This value is added post-layout to the left
             property of the view, which is set by its layout. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int translationY=0x7f010195;
        /**  Type of gradient. The default type is linear. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>linear</code></td><td>0</td><td> Linear gradient. </td></tr>
<tr><td><code>radial</code></td><td>1</td><td> Radial, or circular, gradient. </td></tr>
<tr><td><code>sweep</code></td><td>2</td><td> Sweep, or angled or diamond, gradient. </td></tr>
</table>
         */
        public static final int type=0x7f0102e8;
        /**  Default text typeface. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int typeface=0x7f01011a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uiCompass=0x7f010009;
        /**  Extra options for an activity's UI. Applies to either the {@code &lt;activity&gt;} or
         {@code &lt;application&gt;} tag. If specified on the {@code &lt;application&gt;}
         tag these will be considered defaults for all activities in the
         application. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No extra UI options. This is the default. </td></tr>
<tr><td><code>splitActionBarWhenNarrow</code></td><td>1</td><td> Split the options menu into a separate bar at the bottom of
             the screen when severely constrained for horizontal space.
             (e.g. portrait mode on a phone.) Instead of a small number
             of action buttons appearing in the action bar at the top
             of the screen, the action bar will split into the top navigation
             section and the bottom menu section. Menu items will not be
             split across the two bars; they will always appear together. </td></tr>
</table>
         */
        public static final int uiOptions=0x7f010441;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uiRotateGestures=0x7f01000a;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uiScrollGestures=0x7f01000b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uiTiltGestures=0x7f01000c;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uiZoomControls=0x7f01000d;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uiZoomGestures=0x7f01000e;
        /**  Color used to draw the user's strokes until we are sure it's a gesture. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int uncertainGestureColor=0x7f010295;
        /**  The color for the dates of an unfocused month. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int unfocusedMonthDateColor=0x7f0102c6;
        /**  Sets the alpha on the items that are not selected. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int unselectedAlpha=0x7f0101e8;
        /**  Update period in milliseconds, or 0 if the AppWidget will update itself. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int updatePeriodMillis=0x7f0103a4;
        /**  When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useDefaultMargins=0x7f010203;
        /**  Use the drawable's intrinsic width and height as minimum size values.
             Useful if the target drawable is a 9-patch or otherwise should not be scaled
             down beyond a minimum size. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useIntrinsicSizeAsMinimum=0x7f01030b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useLevel=0x7f0102e6;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useViewLifecycle=0x7f01000f;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int userVisible=0x7f0103b4;
        /**  Concrete value to assign to this piece of named meta-data.
             The data can later be retrieved from the meta data Bundle
             through {@link android.os.Bundle#getString Bundle.getString},
             {@link android.os.Bundle#getInt Bundle.getInt},
             {@link android.os.Bundle#getBoolean Bundle.getBoolean},
             or {@link android.os.Bundle#getFloat Bundle.getFloat} depending
             on the type used here. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int value=0x7f01045c;
        /**  Value the animation starts from. 
         <p>May be an integer value, such as "<code>100</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int valueFrom=0x7f01032b;
        /**  Value the animation animates to. 
         <p>May be an integer value, such as "<code>100</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int valueTo=0x7f01032c;
        /**  The type of valueFrom and valueTo. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>floatType</code></td><td>0</td><td> valueFrom and valueTo are floats. This is the default value is valueType is
                 unspecified. Note that if either valueFrom or valueTo represent colors
                 (beginning with "#"), then this attribute is ignored and the color values are
                 interpreted as integers. </td></tr>
<tr><td><code>intType</code></td><td>1</td><td> valueFrom and valueTo are integers. </td></tr>
</table>
         */
        public static final int valueType=0x7f01032d;
        /**  If true, allows the drawable's padding to change based on the
             current state that is selected.  If false, the padding will
             stay the same (based on the maximum padding of all the states).
             Enabling this feature requires that the owner of the drawable
             deal with performing layout when the state changes, which is
             often not supported. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int variablePadding=0x7f0102d6;
        /**  Internal version code.  This is the number used to determine whether
         one version is more recent than another: it has no other meaning than
         that higher numbers are more recent.  You could use this number to
         encode a "x.y" in the lower and upper 16 bits, make it a build
         number, simply increase it by one each time a new version is
         released, or define it however else you want, as long as each
         successive version has a higher number.  This is not a version
         number generally shown to the user, that is usually supplied 
         with {@link android.R.attr#versionName}. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int versionCode=0x7f010416;
        /**  The text shown to the user to indicate the version they have.  This
         is used for no other purpose than display to the user; the actual
         significant version number is given by {@link android.R.attr#versionCode}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int versionName=0x7f010417;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x7f01038e;
        /**  Default vertical divider between menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int verticalDivider=0x7f010213;
        /**  Default vertical gap between rows of keys. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x7f010394;
        /**  Determines which side the vertical scroll bar should be placed on. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>defaultPosition</code></td><td>0</td><td> Place the scroll bar wherever the system default determines. </td></tr>
<tr><td><code>left</code></td><td>1</td><td> Place the scroll bar on the left. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Place the scroll bar on the right. </td></tr>
</table>
         */
        public static final int verticalScrollbarPosition=0x7f01019d;
        /**  Defines the default vertical spacing between rows. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalSpacing=0x7f0101ea;
        /**  Tactile feedback duration for actions. Set to '0' for no vibration. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int vibrationDuration=0x7f0103c9;
        /**  @hide The drawable for pressed virtual (increment/decrement) buttons. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int virtualButtonPressedDrawable=0x7f0102d4;
        /**  Controls the initial visibility of the view.  
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
         */
        public static final int visibility=0x7f010170;
        /**  Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visible=0x7f0102d5;
        /**  Flag indicating whether the application requests the VM to operate in
         the safe mode.  
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int vmSafeMode=0x7f01041a;
        /**  If provided, this specifies the spoken language to be expected, and that it will be
             different than the one set in the {@link java.util.Locale#getDefault()}. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voiceLanguage=0x7f01034b;
        /**  If provided, this specifies the language model that should be used by the
             voice recognition system.  See
             {@link android.speech.RecognizerIntent#EXTRA_LANGUAGE_MODEL } for more information.
             If not provided, the default value
             {@link android.speech.RecognizerIntent#LANGUAGE_MODEL_FREE_FORM } will be used. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voiceLanguageModel=0x7f010349;
        /**  If provided, enforces the maximum number of results to return, including the "best"
             result which will always be provided as the SEARCH intent's primary query.  Must be one
             or greater.  If not provided, the recognizer will choose how many results to return.
             
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voiceMaxResults=0x7f01034c;
        /**  If provided, this specifies a prompt that will be displayed during voice input. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int voicePromptText=0x7f01034a;
        /**  Voice search features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.
            If showVoiceSearchButton is set, then launchWebSearch or launchRecognizer must
            also be set.  <i>Optional attribute.</i>
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showVoiceSearchButton</code></td><td>0x01</td><td> If set, display a voice search button.  This only takes effect if voice search is
               available on the device. </td></tr>
<tr><td><code>launchWebSearch</code></td><td>0x02</td><td> If set, the voice search button will take the user directly to a built-in
               voice web search activity.  Most applications will not use this flag, as it
               will take the user away from the activity in which search was invoked. </td></tr>
<tr><td><code>launchRecognizer</code></td><td>0x04</td><td> If set, the voice search button will take the user directly to a built-in
               voice recording activity.  This activity will prompt the user to speak,
               transcribe the spoken text, and forward the resulting query
               text to the searchable activity, just as if the user had typed it into
               the search UI and clicked the search button. </td></tr>
</table>
         */
        public static final int voiceSearchMode=0x7f010348;
        /**   When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the new activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperCloseEnterAnimation=0x7f01015c;
        /**   When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the old wallpaper activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperCloseExitAnimation=0x7f01015d;
        /**   When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the previous activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraCloseEnterAnimation=0x7f010160;
        /**   When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraCloseExitAnimation=0x7f010161;
        /**   When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the new activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraOpenEnterAnimation=0x7f01015e;
        /**   When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperIntraOpenExitAnimation=0x7f01015f;
        /**   When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the new wallpaper activity (which is entering the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperOpenEnterAnimation=0x7f01015a;
        /**   When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the current activity (which is exiting the screen). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wallpaperOpenExitAnimation=0x7f01015b;
        /**  Drawable to use for wave ripple animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int waveDrawable=0x7f0103c7;
        /**  Default WebTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int webTextViewStyle=0x7f0100ae;
        /**  Default WebView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int webViewStyle=0x7f0100af;
        /**  The text appearance for the week day abbreviation of the calendar header. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int weekDayTextAppearance=0x7f0102ca;
        /**  The color for the week numbers. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int weekNumberColor=0x7f0102c7;
        /**  The color for the separator line between weeks. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int weekSeparatorLineColor=0x7f0102c8;
        /**  Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int weightSum=0x7f0101fd;
        /**  Optional parameter which indicates where this widget can be shown,
             ie. home screen, keyguard or both.
             resized. Supports combined values using | operator. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>home_screen</code></td><td>0x1</td><td></td></tr>
<tr><td><code>keyguard</code></td><td>0x2</td><td></td></tr>
</table>
         */
        public static final int widgetCategory=0x7f0103ab;
        /**  The layout for the controllable widget portion of a Preference. This is inflated
             into the layout for a Preference and should be used more frequently than
             the layout attribute. For example, a checkbox preference would specify
             a custom layout (consisting of just the CheckBox) here. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int widgetLayout=0x7f010370;
        /**  Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int width=0x7f01024b;
        /**  Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionBar=0x7f010073;
        /**  Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionBarOverlay=0x7f010074;
        /**  Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionModeOverlay=0x7f010075;
        /**  Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowAnimationStyle=0x7f010072;
        /**  Drawable to use as the overall window background.  As of
             {@link android.os.Build.VERSION_CODES#HONEYCOMB}, this may
             be a selector that uses state_accelerated to pick a non-solid
             color when running on devices that can draw such a bitmap
             with complex compositing on top at 60fps.

             <p>There are a few special considerations to use when setting this
             drawable:
             <ul>
             <li> This information will be used to infer the pixel format
                  for your window's surface.  If the drawable has any
                  non-opaque pixels, your window will be translucent
                  (32 bpp).
             <li> If you want to draw the entire background
                  yourself, you should set this drawable to some solid
                  color that closely matches that background (so the
                  system's preview of your window will match), and
                  then in code manually set your window's background to
                  null so it will not be drawn.
             </ul> 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowBackground=0x7f010067;
        /**  Control whether a container should automatically close itself if
             the user touches outside of it.  This only applies to activities
             and dialogs.

             <p>Note: this attribute will only be respected for applications
             that are targeting {@link android.os.Build.VERSION_CODES#HONEYCOMB}
             or later. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowCloseOnTouchOutside=0x7f01007b;
        /**  This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.  
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowContentOverlay=0x7f01006e;
        /**  Flag allowing you to disable the preview animation for a window.
             The default value is false; if set to true, the system can never
             use the window's theme to show a preview of it before your
             actual instance is shown to the user. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowDisablePreview=0x7f010078;
        /**  Flag indicating that this window should allow touches to be split
             across other windows that also support split touch.
             The default value is true for applications with a targetSdkVersion
             of Honeycomb or newer; false otherwise.
             When this flag is false, the first pointer that goes down determines
             the window to which all subsequent touches go until all pointers go up.
             When this flag is true, each pointer (not necessarily the first) that
             goes down determines the window to which all subsequent touches of that
             pointer will go until that pointers go up thereby enabling touches
             with multiple pointers to be split across multiple windows. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowEnableSplitTouch=0x7f01007a;
        /**  The animation used when a window is being added. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowEnterAnimation=0x7f01014a;
        /**  The animation used when a window is being removed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowExitAnimation=0x7f01014b;
        /**  A fixed height for the window along the major axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedHeightMajor=0x7f010133;
        /**  A fixed height for the window along the minor axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedHeightMinor=0x7f010131;
        /**  A fixed width for the window along the major axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedWidthMajor=0x7f010130;
        /**  A fixed width for the window along the minor axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedWidthMinor=0x7f010132;
        /**  Drawable to use as a frame around the window. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowFrame=0x7f010068;
        /**  Flag indicating whether this window should fill the entire screen. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFullscreen=0x7f01006a;
        /**  The animation used when a window is going from VISIBLE to INVISIBLE. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowHideAnimation=0x7f01014d;
        /**  Flag indicating whether this is a floating window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowIsFloating=0x7f01006b;
        /**  Flag indicating whether this is a translucent window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowIsTranslucent=0x7f01006c;
        /**  The minimum width the window is allowed to be, along the major
             axis of the screen.  That is, when in landscape.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowMinWidthMajor=0x7f01012e;
        /**  The minimum width the window is allowed to be, along the minor
             axis of the screen.  That is, when in portrait.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowMinWidthMinor=0x7f01012f;
        /**  Flag indicating that this window should not be displayed at all.
             The default value is false; if set to true, and this window is
             the main window of an Activity, then it will never actually
             be added to the window manager.  This means that your activity
             must immediately quit without waiting for user interaction,
             because there will be no such interaction coming. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowNoDisplay=0x7f010079;
        /**  Flag indicating whether there should be no title on this window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowNoTitle=0x7f010069;
        /**  The animation used when a window is going from INVISIBLE to VISIBLE. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowShowAnimation=0x7f01014c;
        /**  Flag indicating that this window's background should be the
           user's current wallpaper. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowShowWallpaper=0x7f01006d;
        /**  Defines the default soft input state that this window would
             like when it is displayed. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
<tr><td><code>adjustNothing</code></td><td>0x30</td><td> Don't resize <em>or</em> pan the window to make room for the
                 soft input area; the window is never adjusted for it. </td></tr>
</table>
         */
        public static final int windowSoftInputMode=0x7f010077;
        /**  Flag indicating that the action bar should be split to provide more
             room for elements. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowSplitActionBar=0x7f010076;
        /**  The style resource to use for a window's title area. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowTitleBackgroundStyle=0x7f010071;
        /**  The style resource to use for a window's title bar height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowTitleSize=0x7f01006f;
        /**  The style resource to use for a window's title text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int windowTitleStyle=0x7f010070;
        /**  A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int writePermission=0x7f01040e;
        /**  A coordinate in the X dimension. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int x=0x7f010125;
        /**  Indicates whether the application supports extra large screen form-factors. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int xlargeScreens=0x7f010452;
        /**  A coordinate in the Y dimension. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int y=0x7f010126;
        /**  Default style for YesNoPreference. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int yesNoPreferenceStyle=0x7f0100ea;
        /**  Allows for an adjustment of the Z ordering of the content being
             animated for the duration of the animation.  The default value is normal. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> The content being animated be kept in its current Z order. </td></tr>
<tr><td><code>top</code></td><td>1</td><td> The content being animated is forced on top of all other
                 content for the duration of the animation. </td></tr>
<tr><td><code>bottom</code></td><td>-1</td><td> The content being animated is forced under all other
                 content for the duration of the animation. </td></tr>
</table>
         */
        public static final int zAdjustment=0x7f010313;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int zOrderOnTop=0x7f010010;
    }
    public static final class color {
        public static final int black_overlay=0x7f04000a;
        public static final int common_action_bar_splitter=0x7f040009;
        /**  Sign-in Button Colors 
         */
        public static final int common_signin_btn_dark_text_default=0x7f040000;
        public static final int common_signin_btn_dark_text_disabled=0x7f040002;
        public static final int common_signin_btn_dark_text_focused=0x7f040003;
        public static final int common_signin_btn_dark_text_pressed=0x7f040001;
        public static final int common_signin_btn_default_background=0x7f040008;
        public static final int common_signin_btn_light_text_default=0x7f040004;
        public static final int common_signin_btn_light_text_disabled=0x7f040006;
        public static final int common_signin_btn_light_text_focused=0x7f040007;
        public static final int common_signin_btn_light_text_pressed=0x7f040005;
        public static final int common_signin_btn_text_dark=0x7f04000d;
        public static final int common_signin_btn_text_light=0x7f04000e;
        public static final int text_color_important=0x7f04000c;
        public static final int theme_color_cantedit=0x7f04000b;
    }
    public static final class drawable {
        public static final int common_signin_btn_icon_dark=0x7f020000;
        public static final int common_signin_btn_icon_disabled_dark=0x7f020001;
        public static final int common_signin_btn_icon_disabled_focus_dark=0x7f020002;
        public static final int common_signin_btn_icon_disabled_focus_light=0x7f020003;
        public static final int common_signin_btn_icon_disabled_light=0x7f020004;
        public static final int common_signin_btn_icon_focus_dark=0x7f020005;
        public static final int common_signin_btn_icon_focus_light=0x7f020006;
        public static final int common_signin_btn_icon_light=0x7f020007;
        public static final int common_signin_btn_icon_normal_dark=0x7f020008;
        public static final int common_signin_btn_icon_normal_light=0x7f020009;
        public static final int common_signin_btn_icon_pressed_dark=0x7f02000a;
        public static final int common_signin_btn_icon_pressed_light=0x7f02000b;
        public static final int common_signin_btn_text_dark=0x7f02000c;
        public static final int common_signin_btn_text_disabled_dark=0x7f02000d;
        public static final int common_signin_btn_text_disabled_focus_dark=0x7f02000e;
        public static final int common_signin_btn_text_disabled_focus_light=0x7f02000f;
        public static final int common_signin_btn_text_disabled_light=0x7f020010;
        public static final int common_signin_btn_text_focus_dark=0x7f020011;
        public static final int common_signin_btn_text_focus_light=0x7f020012;
        public static final int common_signin_btn_text_light=0x7f020013;
        public static final int common_signin_btn_text_normal_dark=0x7f020014;
        public static final int common_signin_btn_text_normal_light=0x7f020015;
        public static final int common_signin_btn_text_pressed_dark=0x7f020016;
        public static final int common_signin_btn_text_pressed_light=0x7f020017;
        public static final int edit_background_h=0x7f020018;
        public static final int edit_background_v=0x7f020019;
        public static final int gps_bad=0x7f02001a;
        public static final int gps_good=0x7f02001b;
        public static final int gps_no_responce=0x7f02001c;
        public static final int gps_not_arrow=0x7f02001d;
        public static final int gps_soso=0x7f02001e;
        public static final int ic_launcher=0x7f02001f;
        public static final int ic_plusone_medium_off_client=0x7f020020;
        public static final int ic_plusone_small_off_client=0x7f020021;
        public static final int ic_plusone_standard_off_client=0x7f020022;
        public static final int ic_plusone_tall_off_client=0x7f020023;
        public static final int icon_distance=0x7f020024;
        public static final int icon_speed2=0x7f020025;
        public static final int icon_time=0x7f020026;
        public static final int ind_detail_exist=0x7f020027;
        public static final int main_background=0x7f020028;
        public static final int main_camerabutton_disable=0x7f020029;
        public static final int main_camerabutton_focus=0x7f02002a;
        public static final int main_camerabutton_normal=0x7f02002b;
        public static final int main_camerabutton_press=0x7f02002c;
        public static final int main_cancelbutton_disable=0x7f02002d;
        public static final int main_cancelbutton_focus=0x7f02002e;
        public static final int main_cancelbutton_normal=0x7f02002f;
        public static final int main_cancelbutton_press=0x7f020030;
        public static final int main_editbutton_disable=0x7f020031;
        public static final int main_editbutton_focus=0x7f020032;
        public static final int main_editbutton_normal=0x7f020033;
        public static final int main_editbutton_press=0x7f020034;
        public static final int main_gpsbutton_disable=0x7f020035;
        public static final int main_gpsbutton_focus=0x7f020036;
        public static final int main_gpsbutton_normal=0x7f020037;
        public static final int main_gpsbutton_press=0x7f020038;
        public static final int main_historybutton_disable=0x7f020039;
        public static final int main_historybutton_focus=0x7f02003a;
        public static final int main_historybutton_normal=0x7f02003b;
        public static final int main_historybutton_press=0x7f02003c;
        public static final int main_nextlapbutton_disable=0x7f02003d;
        public static final int main_nextlapbutton_focus=0x7f02003e;
        public static final int main_nextlapbutton_normal=0x7f02003f;
        public static final int main_nextlapbutton_press=0x7f020040;
        public static final int main_routebutton_disable=0x7f020041;
        public static final int main_routebutton_focus=0x7f020042;
        public static final int main_routebutton_normal=0x7f020043;
        public static final int main_routebutton_press=0x7f020044;
        public static final int main_runstartbutton_disable=0x7f020045;
        public static final int main_runstartbutton_focus=0x7f020046;
        public static final int main_runstartbutton_normal=0x7f020047;
        public static final int main_runstartbutton_press=0x7f020048;
        public static final int main_savebutton_disable=0x7f020049;
        public static final int main_savebutton_focus=0x7f02004a;
        public static final int main_savebutton_mini_focus=0x7f02004b;
        public static final int main_savebutton_mini_normal=0x7f02004c;
        public static final int main_savebutton_mini_press=0x7f02004d;
        public static final int main_savebutton_normal=0x7f02004e;
        public static final int main_savebutton_press=0x7f02004f;
        public static final int main_stopbutton_disable=0x7f020050;
        public static final int main_stopbutton_focus=0x7f020051;
        public static final int main_stopbutton_normal=0x7f020052;
        public static final int main_stopbutton_press=0x7f020053;
        public static final int numberpicker_down_disabled=0x7f020054;
        public static final int numberpicker_down_disabled_focused=0x7f020055;
        public static final int numberpicker_down_disabled_focused_holo_dark=0x7f020056;
        public static final int numberpicker_down_disabled_focused_holo_light=0x7f020057;
        public static final int numberpicker_down_disabled_holo_dark=0x7f020058;
        public static final int numberpicker_down_disabled_holo_light=0x7f020059;
        public static final int numberpicker_down_focused_holo_dark=0x7f02005a;
        public static final int numberpicker_down_focused_holo_light=0x7f02005b;
        public static final int numberpicker_down_longpressed_holo_dark=0x7f02005c;
        public static final int numberpicker_down_longpressed_holo_light=0x7f02005d;
        public static final int numberpicker_down_normal=0x7f02005e;
        public static final int numberpicker_down_normal_holo_dark=0x7f02005f;
        public static final int numberpicker_down_normal_holo_light=0x7f020060;
        public static final int numberpicker_down_pressed=0x7f020061;
        public static final int numberpicker_down_pressed_holo_dark=0x7f020062;
        public static final int numberpicker_down_pressed_holo_light=0x7f020063;
        public static final int numberpicker_down_selected=0x7f020064;
        public static final int numberpicker_input_disabled=0x7f020065;
        public static final int numberpicker_input_normal=0x7f020066;
        public static final int numberpicker_input_pressed=0x7f020067;
        public static final int numberpicker_input_selected=0x7f020068;
        public static final int numberpicker_selection_divider=0x7f020069;
        public static final int numberpicker_up_disabled=0x7f02006a;
        public static final int numberpicker_up_disabled_focused=0x7f02006b;
        public static final int numberpicker_up_disabled_focused_holo_dark=0x7f02006c;
        public static final int numberpicker_up_disabled_focused_holo_light=0x7f02006d;
        public static final int numberpicker_up_disabled_holo_dark=0x7f02006e;
        public static final int numberpicker_up_disabled_holo_light=0x7f02006f;
        public static final int numberpicker_up_focused_holo_dark=0x7f020070;
        public static final int numberpicker_up_focused_holo_light=0x7f020071;
        public static final int numberpicker_up_longpressed_holo_dark=0x7f020072;
        public static final int numberpicker_up_longpressed_holo_light=0x7f020073;
        public static final int numberpicker_up_normal=0x7f020074;
        public static final int numberpicker_up_normal_holo_dark=0x7f020075;
        public static final int numberpicker_up_normal_holo_light=0x7f020076;
        public static final int numberpicker_up_pressed=0x7f020077;
        public static final int numberpicker_up_pressed_holo_dark=0x7f020078;
        public static final int numberpicker_up_pressed_holo_light=0x7f020079;
        public static final int numberpicker_up_selected=0x7f02007a;
        public static final int seekbar_empty=0x7f02007b;
        public static final int seekbar_full=0x7f02007c;
        public static final int selector_camera_button_image=0x7f02007d;
        public static final int selector_cancel_button_image=0x7f02007e;
        public static final int selector_edit_button_image=0x7f02007f;
        public static final int selector_gps_button_image=0x7f020080;
        public static final int selector_history_button_image=0x7f020081;
        public static final int selector_mainitem_panel_image=0x7f020082;
        public static final int selector_next_button_image=0x7f020083;
        public static final int selector_numberpicker_down_btn=0x7f020084;
        public static final int selector_numberpicker_input=0x7f020085;
        public static final int selector_numberpicker_up_btn=0x7f020086;
        public static final int selector_route_button_image=0x7f020087;
        public static final int selector_runstart_button_image=0x7f020088;
        public static final int selector_runstop_button_image=0x7f020089;
        public static final int selector_save_button_image=0x7f02008a;
        public static final int selector_save_mini_button_image=0x7f02008b;
        public static final int selector_seekbar_image=0x7f02008c;
    }
    public static final class id {
        public static final int KEYCODE_0=0x7f050064;
        public static final int KEYCODE_1=0x7f050065;
        public static final int KEYCODE_2=0x7f050066;
        public static final int KEYCODE_3=0x7f050067;
        public static final int KEYCODE_3D_MODE=0x7f05012b;
        public static final int KEYCODE_4=0x7f050068;
        public static final int KEYCODE_5=0x7f050069;
        public static final int KEYCODE_6=0x7f05006a;
        public static final int KEYCODE_7=0x7f05006b;
        public static final int KEYCODE_8=0x7f05006c;
        public static final int KEYCODE_9=0x7f05006d;
        public static final int KEYCODE_A=0x7f05007a;
        public static final int KEYCODE_ALT_LEFT=0x7f050096;
        public static final int KEYCODE_ALT_RIGHT=0x7f050097;
        public static final int KEYCODE_APOSTROPHE=0x7f0500a8;
        public static final int KEYCODE_APP_SWITCH=0x7f050118;
        public static final int KEYCODE_AT=0x7f0500aa;
        public static final int KEYCODE_AVR_INPUT=0x7f050113;
        public static final int KEYCODE_AVR_POWER=0x7f050112;
        public static final int KEYCODE_B=0x7f05007b;
        public static final int KEYCODE_BACK=0x7f050061;
        public static final int KEYCODE_BACKSLASH=0x7f0500a6;
        public static final int KEYCODE_BOOKMARK=0x7f05010b;
        public static final int KEYCODE_BREAK=0x7f0500d6;
        public static final int KEYCODE_BUTTON_1=0x7f050119;
        public static final int KEYCODE_BUTTON_10=0x7f050122;
        public static final int KEYCODE_BUTTON_11=0x7f050123;
        public static final int KEYCODE_BUTTON_12=0x7f050124;
        public static final int KEYCODE_BUTTON_13=0x7f050125;
        public static final int KEYCODE_BUTTON_14=0x7f050126;
        public static final int KEYCODE_BUTTON_15=0x7f050127;
        public static final int KEYCODE_BUTTON_16=0x7f050128;
        public static final int KEYCODE_BUTTON_2=0x7f05011a;
        public static final int KEYCODE_BUTTON_3=0x7f05011b;
        public static final int KEYCODE_BUTTON_4=0x7f05011c;
        public static final int KEYCODE_BUTTON_5=0x7f05011d;
        public static final int KEYCODE_BUTTON_6=0x7f05011e;
        public static final int KEYCODE_BUTTON_7=0x7f05011f;
        public static final int KEYCODE_BUTTON_8=0x7f050120;
        public static final int KEYCODE_BUTTON_9=0x7f050121;
        public static final int KEYCODE_BUTTON_A=0x7f0500bd;
        public static final int KEYCODE_BUTTON_B=0x7f0500be;
        public static final int KEYCODE_BUTTON_C=0x7f0500bf;
        public static final int KEYCODE_BUTTON_L1=0x7f0500c3;
        public static final int KEYCODE_BUTTON_L2=0x7f0500c5;
        public static final int KEYCODE_BUTTON_MODE=0x7f0500cb;
        public static final int KEYCODE_BUTTON_R1=0x7f0500c4;
        public static final int KEYCODE_BUTTON_R2=0x7f0500c6;
        public static final int KEYCODE_BUTTON_SELECT=0x7f0500ca;
        public static final int KEYCODE_BUTTON_START=0x7f0500c9;
        public static final int KEYCODE_BUTTON_THUMBL=0x7f0500c7;
        public static final int KEYCODE_BUTTON_THUMBR=0x7f0500c8;
        public static final int KEYCODE_BUTTON_X=0x7f0500c0;
        public static final int KEYCODE_BUTTON_Y=0x7f0500c1;
        public static final int KEYCODE_BUTTON_Z=0x7f0500c2;
        public static final int KEYCODE_C=0x7f05007c;
        public static final int KEYCODE_CALCULATOR=0x7f05012f;
        public static final int KEYCODE_CALENDAR=0x7f05012d;
        public static final int KEYCODE_CALL=0x7f050062;
        public static final int KEYCODE_CAMERA=0x7f050078;
        public static final int KEYCODE_CAPS_LOCK=0x7f0500d0;
        public static final int KEYCODE_CAPTIONS=0x7f05010c;
        public static final int KEYCODE_CHANNEL_DOWN=0x7f050104;
        public static final int KEYCODE_CHANNEL_UP=0x7f050103;
        public static final int KEYCODE_CLEAR=0x7f050079;
        public static final int KEYCODE_COMMA=0x7f050094;
        public static final int KEYCODE_CONTACTS=0x7f05012c;
        public static final int KEYCODE_CTRL_LEFT=0x7f0500ce;
        public static final int KEYCODE_CTRL_RIGHT=0x7f0500cf;
        public static final int KEYCODE_D=0x7f05007d;
        public static final int KEYCODE_DEL=0x7f0500a0;
        public static final int KEYCODE_DPAD_CENTER=0x7f050074;
        public static final int KEYCODE_DPAD_DOWN=0x7f050071;
        public static final int KEYCODE_DPAD_LEFT=0x7f050072;
        public static final int KEYCODE_DPAD_RIGHT=0x7f050073;
        public static final int KEYCODE_DPAD_UP=0x7f050070;
        public static final int KEYCODE_DVR=0x7f05010a;
        public static final int KEYCODE_E=0x7f05007e;
        public static final int KEYCODE_EISU=0x7f050131;
        public static final int KEYCODE_ENDCALL=0x7f050063;
        public static final int KEYCODE_ENTER=0x7f05009f;
        public static final int KEYCODE_ENVELOPE=0x7f05009e;
        public static final int KEYCODE_EQUALS=0x7f0500a3;
        public static final int KEYCODE_ESCAPE=0x7f0500cc;
        public static final int KEYCODE_EXPLORER=0x7f05009d;
        public static final int KEYCODE_F=0x7f05007f;
        public static final int KEYCODE_F1=0x7f0500e0;
        public static final int KEYCODE_F10=0x7f0500e9;
        public static final int KEYCODE_F11=0x7f0500ea;
        public static final int KEYCODE_F12=0x7f0500eb;
        public static final int KEYCODE_F2=0x7f0500e1;
        public static final int KEYCODE_F3=0x7f0500e2;
        public static final int KEYCODE_F4=0x7f0500e3;
        public static final int KEYCODE_F5=0x7f0500e4;
        public static final int KEYCODE_F6=0x7f0500e5;
        public static final int KEYCODE_F7=0x7f0500e6;
        public static final int KEYCODE_F8=0x7f0500e7;
        public static final int KEYCODE_F9=0x7f0500e8;
        public static final int KEYCODE_FOCUS=0x7f0500ad;
        public static final int KEYCODE_FORWARD=0x7f0500da;
        public static final int KEYCODE_FORWARD_DEL=0x7f0500cd;
        public static final int KEYCODE_FUNCTION=0x7f0500d4;
        public static final int KEYCODE_G=0x7f050080;
        public static final int KEYCODE_GRAVE=0x7f0500a1;
        public static final int KEYCODE_GUIDE=0x7f050109;
        public static final int KEYCODE_H=0x7f050081;
        public static final int KEYCODE_HEADSETHOOK=0x7f0500ac;
        public static final int KEYCODE_HENKAN=0x7f050133;
        public static final int KEYCODE_HOME=0x7f050060;
        public static final int KEYCODE_I=0x7f050082;
        public static final int KEYCODE_INFO=0x7f050102;
        public static final int KEYCODE_INSERT=0x7f0500d9;
        public static final int KEYCODE_J=0x7f050083;
        public static final int KEYCODE_K=0x7f050084;
        public static final int KEYCODE_KANA=0x7f050137;
        public static final int KEYCODE_KATAKANA_HIRAGANA=0x7f050134;
        public static final int KEYCODE_L=0x7f050085;
        public static final int KEYCODE_LANGUAGE_SWITCH=0x7f050129;
        public static final int KEYCODE_LEFT_BRACKET=0x7f0500a4;
        public static final int KEYCODE_M=0x7f050086;
        public static final int KEYCODE_MANNER_MODE=0x7f05012a;
        public static final int KEYCODE_MEDIA_CLOSE=0x7f0500dd;
        public static final int KEYCODE_MEDIA_EJECT=0x7f0500de;
        public static final int KEYCODE_MEDIA_FAST_FORWARD=0x7f0500b7;
        public static final int KEYCODE_MEDIA_NEXT=0x7f0500b4;
        public static final int KEYCODE_MEDIA_PAUSE=0x7f0500dc;
        public static final int KEYCODE_MEDIA_PLAY=0x7f0500db;
        public static final int KEYCODE_MEDIA_PLAY_PAUSE=0x7f0500b2;
        public static final int KEYCODE_MEDIA_PREVIOUS=0x7f0500b5;
        public static final int KEYCODE_MEDIA_RECORD=0x7f0500df;
        public static final int KEYCODE_MEDIA_REWIND=0x7f0500b6;
        public static final int KEYCODE_MEDIA_STOP=0x7f0500b3;
        public static final int KEYCODE_MENU=0x7f0500af;
        public static final int KEYCODE_META_LEFT=0x7f0500d2;
        public static final int KEYCODE_META_RIGHT=0x7f0500d3;
        public static final int KEYCODE_MINUS=0x7f0500a2;
        public static final int KEYCODE_MOVE_END=0x7f0500d8;
        public static final int KEYCODE_MOVE_HOME=0x7f0500d7;
        public static final int KEYCODE_MUHENKAN=0x7f050132;
        public static final int KEYCODE_MUSIC=0x7f05012e;
        public static final int KEYCODE_MUTE=0x7f0500b8;
        public static final int KEYCODE_N=0x7f050087;
        public static final int KEYCODE_NOTIFICATION=0x7f0500b0;
        public static final int KEYCODE_NUM=0x7f0500ab;
        public static final int KEYCODE_NUMPAD_0=0x7f0500ed;
        public static final int KEYCODE_NUMPAD_1=0x7f0500ee;
        public static final int KEYCODE_NUMPAD_2=0x7f0500ef;
        public static final int KEYCODE_NUMPAD_3=0x7f0500f0;
        public static final int KEYCODE_NUMPAD_4=0x7f0500f1;
        public static final int KEYCODE_NUMPAD_5=0x7f0500f2;
        public static final int KEYCODE_NUMPAD_6=0x7f0500f3;
        public static final int KEYCODE_NUMPAD_7=0x7f0500f4;
        public static final int KEYCODE_NUMPAD_8=0x7f0500f5;
        public static final int KEYCODE_NUMPAD_9=0x7f0500f6;
        public static final int KEYCODE_NUMPAD_ADD=0x7f0500fa;
        public static final int KEYCODE_NUMPAD_COMMA=0x7f0500fc;
        public static final int KEYCODE_NUMPAD_DIVIDE=0x7f0500f7;
        public static final int KEYCODE_NUMPAD_DOT=0x7f0500fb;
        public static final int KEYCODE_NUMPAD_ENTER=0x7f0500fd;
        public static final int KEYCODE_NUMPAD_EQUALS=0x7f0500fe;
        public static final int KEYCODE_NUMPAD_LEFT_PAREN=0x7f0500ff;
        public static final int KEYCODE_NUMPAD_MULTIPLY=0x7f0500f8;
        public static final int KEYCODE_NUMPAD_RIGHT_PAREN=0x7f050100;
        public static final int KEYCODE_NUMPAD_SUBTRACT=0x7f0500f9;
        public static final int KEYCODE_NUM_LOCK=0x7f0500ec;
        public static final int KEYCODE_O=0x7f050088;
        public static final int KEYCODE_P=0x7f050089;
        public static final int KEYCODE_PAGE_DOWN=0x7f0500ba;
        public static final int KEYCODE_PAGE_UP=0x7f0500b9;
        public static final int KEYCODE_PERIOD=0x7f050095;
        public static final int KEYCODE_PICTSYMBOLS=0x7f0500bb;
        public static final int KEYCODE_PLUS=0x7f0500ae;
        public static final int KEYCODE_POUND=0x7f05006f;
        public static final int KEYCODE_POWER=0x7f050077;
        public static final int KEYCODE_PROG_BLUE=0x7f050117;
        public static final int KEYCODE_PROG_GRED=0x7f050114;
        public static final int KEYCODE_PROG_GREEN=0x7f050115;
        public static final int KEYCODE_PROG_YELLOW=0x7f050116;
        public static final int KEYCODE_Q=0x7f05008a;
        public static final int KEYCODE_R=0x7f05008b;
        public static final int KEYCODE_RIGHT_BRACKET=0x7f0500a5;
        public static final int KEYCODE_RO=0x7f050136;
        public static final int KEYCODE_S=0x7f05008c;
        public static final int KEYCODE_SCROLL_LOCK=0x7f0500d1;
        public static final int KEYCODE_SEARCH=0x7f0500b1;
        public static final int KEYCODE_SEMICOLON=0x7f0500a7;
        public static final int KEYCODE_SETTINGS=0x7f05010d;
        public static final int KEYCODE_SHIFT_LEFT=0x7f050098;
        public static final int KEYCODE_SHIFT_RIGHT=0x7f050099;
        public static final int KEYCODE_SLASH=0x7f0500a9;
        public static final int KEYCODE_SOFT_LEFT=0x7f05005e;
        public static final int KEYCODE_SOFT_RIGHT=0x7f05005f;
        public static final int KEYCODE_SPACE=0x7f05009b;
        public static final int KEYCODE_STAR=0x7f05006e;
        public static final int KEYCODE_STB_INPUT=0x7f050111;
        public static final int KEYCODE_STB_POWER=0x7f050110;
        public static final int KEYCODE_SWITCH_CHARSET=0x7f0500bc;
        public static final int KEYCODE_SYM=0x7f05009c;
        public static final int KEYCODE_SYSRQ=0x7f0500d5;
        public static final int KEYCODE_T=0x7f05008d;
        public static final int KEYCODE_TAB=0x7f05009a;
        public static final int KEYCODE_TV=0x7f050107;
        public static final int KEYCODE_TV_INPUT=0x7f05010f;
        public static final int KEYCODE_TV_POWER=0x7f05010e;
        public static final int KEYCODE_U=0x7f05008e;
        public static final int KEYCODE_UNKNOWN=0x7f05005d;
        public static final int KEYCODE_V=0x7f05008f;
        public static final int KEYCODE_VOLUME_DOWN=0x7f050076;
        public static final int KEYCODE_VOLUME_MUTE=0x7f050101;
        public static final int KEYCODE_VOLUME_UP=0x7f050075;
        public static final int KEYCODE_W=0x7f050090;
        public static final int KEYCODE_WINDOW=0x7f050108;
        public static final int KEYCODE_X=0x7f050091;
        public static final int KEYCODE_Y=0x7f050092;
        public static final int KEYCODE_YEN=0x7f050135;
        public static final int KEYCODE_Z=0x7f050093;
        public static final int KEYCODE_ZENKAKU_HANKAKU=0x7f050130;
        public static final int KEYCODE_ZOOM_IN=0x7f050105;
        public static final int KEYCODE_ZOOM_OUT=0x7f050106;
        public static final int TEXT_VIEW_LINKED=0x7f050212;
        public static final int actionDone=0x7f050040;
        public static final int actionGo=0x7f05003c;
        public static final int actionNext=0x7f05003f;
        public static final int actionNone=0x7f05003b;
        public static final int actionPrevious=0x7f050041;
        public static final int actionSearch=0x7f05003d;
        public static final int actionSend=0x7f05003e;
        public static final int actionUnspecified=0x7f05003a;
        public static final int adjustNothing=0x7f05000e;
        public static final int adjustPan=0x7f05000d;
        public static final int adjustResize=0x7f05000c;
        public static final int adjustUnspecified=0x7f05000b;
        public static final int afterDescendants=0x7f050158;
        public static final int alarm=0x7f0501c4;
        public static final int alignBounds=0x7f05005b;
        public static final int alignMargins=0x7f05005c;
        public static final int all=0x7f050058;
        public static final int alternative=0x7f0501be;
        public static final int always=0x7f050142;
        public static final int alwaysScroll=0x7f050175;
        public static final int amPm=0x7f050224;
        public static final int animation=0x7f050155;
        public static final int anyRtl=0x7f05014d;
        public static final int atThumb=0x7f050010;
        public static final int auto=0x7f05013f;
        public static final int auto_fit=0x7f05017c;
        public static final int beforeDescendants=0x7f050157;
        public static final int beginning=0x7f050184;
        public static final int behind=0x7f0501e8;
        public static final int blocksDescendants=0x7f050159;
        public static final int bold=0x7f050015;
        public static final int bottom=0x7f05004a;
        public static final int bottom_to_top=0x7f0501ad;
        public static final int center=0x7f050051;
        public static final int centerCrop=0x7f050182;
        public static final int centerInside=0x7f050183;
        public static final int center_horizontal=0x7f05004f;
        public static final int center_vertical=0x7f05004d;
        public static final int challenge=0x7f0501d5;
        public static final int characters=0x7f05018e;
        public static final int clamp=0x7f0501a4;
        public static final int clip_horizontal=0x7f050054;
        public static final int clip_vertical=0x7f050053;
        public static final int collapseActionView=0x7f0501c1;
        public static final int collapsing=0x7f050193;
        public static final int column=0x7f0501ae;
        public static final int columnWidth=0x7f05017a;
        public static final int container=0x7f0501bb;
        public static final int costsMoney=0x7f0501e0;
        public static final int cycle=0x7f050186;
        public static final int dangerous=0x7f0501db;
        public static final int date=0x7f050038;
        public static final int date_picker=0x7f05021b;
        public static final int datetime=0x7f050037;
        public static final int decimal=0x7f05018b;
        public static final int decrement=0x7f050220;
        public static final int defaultPosition=0x7f050145;
        public static final int development=0x7f0501de;
        public static final int dialog=0x7f050190;
        public static final int disableHome=0x7f0501d1;
        public static final int disabled=0x7f050174;
        public static final int dpad=0x7f050205;
        public static final int dropdown=0x7f050191;
        public static final int dummy_button=0x7f05021a;
        public static final int edit_cancelbutton=0x7f050216;
        public static final int edit_savebutton=0x7f050215;
        public static final int edit_toolbar=0x7f050214;
        public static final int editable=0x7f050188;
        public static final int email=0x7f050056;
        public static final int end=0x7f050019;
        public static final int expandChallengeHandle=0x7f0501d9;
        public static final int feedbackAllMask=0x7f050170;
        public static final int feedbackAudible=0x7f05016d;
        public static final int feedbackGeneric=0x7f05016f;
        public static final int feedbackHaptic=0x7f05016c;
        public static final int feedbackSpoken=0x7f05016b;
        public static final int feedbackVisual=0x7f05016e;
        public static final int fill=0x7f050052;
        public static final int fill_horizontal=0x7f050050;
        public static final int fill_parent=0x7f05015a;
        public static final int fill_vertical=0x7f05004e;
        public static final int finger=0x7f050200;
        public static final int firstStrong=0x7f05014c;
        public static final int fitCenter=0x7f050180;
        public static final int fitEnd=0x7f050181;
        public static final int fitStart=0x7f05017f;
        public static final int fitXY=0x7f05017e;
        public static final int flagDefault=0x7f050171;
        public static final int flagForceAscii=0x7f050048;
        public static final int flagIncludeNotImportantViews=0x7f050172;
        public static final int flagNavigateNext=0x7f050044;
        public static final int flagNavigatePrevious=0x7f050043;
        public static final int flagNoAccessoryAction=0x7f050046;
        public static final int flagNoEnterAction=0x7f050047;
        public static final int flagNoExtractUi=0x7f050045;
        public static final int flagNoFullscreen=0x7f050042;
        public static final int flagRequestTouchExplorationMode=0x7f050173;
        public static final int floatType=0x7f0501b0;
        public static final int floating=0x7f05000f;
        public static final int fontScale=0x7f0501fc;
        public static final int fullSensor=0x7f0501ef;
        public static final int fullscreen_content_controls=0x7f050219;
        public static final int gone=0x7f05013a;
        public static final int gravity=0x7f05014e;
        public static final int hardware=0x7f050147;
        public static final int hdpi=0x7f050210;
        public static final int high=0x7f050141;
        public static final int homeAsUp=0x7f0501ce;
        public static final int home_screen=0x7f0501c7;
        public static final int horizontal=0x7f050059;
        public static final int hour=0x7f050222;
        public static final int hybrid=0x7f050004;
        public static final int id_menu_recovery=0x7f050225;
        public static final int ifContentScrolls=0x7f050143;
        public static final int ifRoom=0x7f0501bf;
        public static final int increment=0x7f05021e;
        public static final int infinite=0x7f0501a6;
        public static final int inherit=0x7f05014a;
        public static final int insideInset=0x7f05013c;
        public static final int insideOverlay=0x7f05013b;
        public static final int intType=0x7f0501b1;
        public static final int integer=0x7f050189;
        public static final int internalOnly=0x7f050208;
        public static final int invisible=0x7f050139;
        public static final int italic=0x7f050016;
        public static final int keyboard=0x7f0501f3;
        public static final int keyboardHidden=0x7f0501f4;
        public static final int keyguard=0x7f0501c8;
        public static final int landscape=0x7f0501e6;
        public static final int large=0x7f05020c;
        public static final int launchRecognizer=0x7f0501ba;
        public static final int launchWebSearch=0x7f0501b9;
        public static final int layoutDirection=0x7f0501fb;
        public static final int layout_top=0x7f05021d;
        public static final int ldpi=0x7f05020e;
        public static final int left=0x7f05004b;
        public static final int left_to_right=0x7f0501aa;
        public static final int line=0x7f05019c;
        public static final int linear=0x7f05019e;
        public static final int listMode=0x7f0501ca;
        public static final int liveAudio=0x7f0501d2;
        public static final int locale=0x7f05014b;
        public static final int low=0x7f050140;
        public static final int ltr=0x7f050148;
        public static final int main_content=0x7f050217;
        public static final int map=0x7f050057;
        public static final int marquee=0x7f05001a;
        public static final int marquee_forever=0x7f05018f;
        public static final int match_parent=0x7f05015b;
        public static final int matrix=0x7f05017d;
        public static final int mcc=0x7f0501f0;
        public static final int mdpi=0x7f05020f;
        public static final int middle=0x7f050018;
        public static final int minute=0x7f050223;
        public static final int mirror=0x7f0501a5;
        public static final int mnc=0x7f0501f1;
        public static final int modeLarge=0x7f050199;
        public static final int modeMedium=0x7f050198;
        public static final int modeSmall=0x7f050197;
        public static final int monospace=0x7f050014;
        public static final int multiple=0x7f050196;
        public static final int multipleChoice=0x7f050177;
        public static final int multipleChoiceModal=0x7f050178;
        public static final int music=0x7f0501c6;
        public static final int navigation=0x7f0501f5;
        public static final int never=0x7f050144;
        public static final int no=0x7f050154;
        public static final int nokeys=0x7f050201;
        public static final int nonav=0x7f050204;
        public static final int none=0x7f050000;
        public static final int normal=0x7f050001;
        public static final int nosensor=0x7f0501ea;
        public static final int notification=0x7f0501c3;
        public static final int notouch=0x7f0501fe;
        public static final int number=0x7f050032;
        public static final int numberDecimal=0x7f050034;
        public static final int numberPassword=0x7f050035;
        public static final int numberSigned=0x7f050033;
        public static final int numberpicker_input=0x7f05021f;
        public static final int oneLine=0x7f050192;
        public static final int opaque=0x7f0501a1;
        public static final int orientation=0x7f0501f6;
        public static final int outsideInset=0x7f05013e;
        public static final int outsideOverlay=0x7f05013d;
        public static final int oval=0x7f05019b;
        public static final int pageDeleteDropTarget=0x7f0501da;
        public static final int page_content=0x7f050213;
        public static final int page_content1=0x7f050221;
        public static final int personalInfo=0x7f0501df;
        public static final int phone=0x7f050036;
        public static final int portrait=0x7f0501e7;
        public static final int preferExternal=0x7f050209;
        public static final int queryRewriteFromData=0x7f0501b6;
        public static final int queryRewriteFromText=0x7f0501b7;
        public static final int qwerty=0x7f050202;
        public static final int radial=0x7f05019f;
        public static final int random=0x7f0501a9;
        public static final int rectangle=0x7f05019a;
        public static final int repeat=0x7f050185;
        public static final int restart=0x7f0501a7;
        public static final int reverse=0x7f0501a8;
        public static final int reverseLandscape=0x7f0501ed;
        public static final int reversePortrait=0x7f0501ee;
        public static final int right=0x7f05004c;
        public static final int right_to_left=0x7f0501ab;
        public static final int ring=0x7f05019d;
        public static final int ringtone=0x7f0501c2;
        public static final int row=0x7f0501af;
        public static final int rtl=0x7f050149;
        public static final int sans=0x7f050012;
        public static final int satellite=0x7f050002;
        public static final int screenLayout=0x7f0501f7;
        public static final int screenSize=0x7f0501f9;
        public static final int scrim=0x7f0501d7;
        public static final int scrolling=0x7f050156;
        public static final int secondary=0x7f0501bd;
        public static final int sensor=0x7f0501e9;
        public static final int sensorLandscape=0x7f0501eb;
        public static final int sensorPortrait=0x7f0501ec;
        public static final int sentences=0x7f05018c;
        public static final int sequentially=0x7f0501b3;
        public static final int serif=0x7f050013;
        public static final int showCustom=0x7f0501d0;
        public static final int showHome=0x7f0501cd;
        public static final int showSearchIconAsBadge=0x7f0501b5;
        public static final int showSearchLabelAsBadge=0x7f0501b4;
        public static final int showTitle=0x7f0501cf;
        public static final int showVoiceSearchButton=0x7f0501b8;
        public static final int signature=0x7f0501dc;
        public static final int signatureOrSystem=0x7f0501dd;
        public static final int signed=0x7f05018a;
        public static final int single=0x7f050195;
        public static final int singleChoice=0x7f050176;
        public static final int singleInstance=0x7f0501e4;
        public static final int singleTask=0x7f0501e3;
        public static final int singleTop=0x7f0501e2;
        public static final int small=0x7f05020b;
        public static final int smallestScreenSize=0x7f0501fa;
        public static final int software=0x7f050146;
        public static final int spacingWidth=0x7f050179;
        public static final int spacingWidthUniform=0x7f05017b;
        public static final int spannable=0x7f050187;
        public static final int splitActionBarWhenNarrow=0x7f05020a;
        public static final int standard=0x7f0501e1;
        public static final int start=0x7f050017;
        public static final int stateAlwaysHidden=0x7f050008;
        public static final int stateAlwaysVisible=0x7f05000a;
        public static final int stateHidden=0x7f050007;
        public static final int stateUnchanged=0x7f050006;
        public static final int stateUnspecified=0x7f050005;
        public static final int stateVisible=0x7f050009;
        public static final int stylus=0x7f0501ff;
        public static final int sweep=0x7f0501a0;
        public static final int system=0x7f0501bc;
        public static final int tabMode=0x7f0501cb;
        public static final int terrain=0x7f050003;
        public static final int text=0x7f05001b;
        public static final int textAutoComplete=0x7f050020;
        public static final int textAutoCorrect=0x7f05001f;
        public static final int textCapCharacters=0x7f05001c;
        public static final int textCapSentences=0x7f05001e;
        public static final int textCapWords=0x7f05001d;
        public static final int textEmailAddress=0x7f050025;
        public static final int textEmailSubject=0x7f050026;
        public static final int textEnd=0x7f050150;
        public static final int textFilter=0x7f05002e;
        public static final int textImeMultiLine=0x7f050022;
        public static final int textLongMessage=0x7f050028;
        public static final int textMultiLine=0x7f050021;
        public static final int textNoSuggestions=0x7f050023;
        public static final int textPassword=0x7f05002b;
        public static final int textPersonName=0x7f050029;
        public static final int textPhonetic=0x7f05002f;
        public static final int textPostalAddress=0x7f05002a;
        public static final int textShortMessage=0x7f050027;
        public static final int textStart=0x7f05014f;
        public static final int textUri=0x7f050024;
        public static final int textVisiblePassword=0x7f05002c;
        public static final int textWebEditText=0x7f05002d;
        public static final int textWebEmailAddress=0x7f050030;
        public static final int textWebPassword=0x7f050031;
        public static final int time=0x7f050039;
        public static final int time_picker=0x7f05021c;
        public static final int together=0x7f0501b2;
        public static final int top=0x7f050049;
        public static final int top_to_bottom=0x7f0501ac;
        public static final int touchscreen=0x7f0501f2;
        public static final int trackball=0x7f050206;
        public static final int translucent=0x7f0501a3;
        public static final int transparent=0x7f0501a2;
        public static final int twelvekey=0x7f050203;
        public static final int twoLine=0x7f050194;
        public static final int typeAllMask=0x7f05016a;
        public static final int typeNotificationStateChanged=0x7f050162;
        public static final int typeTouchExplorationGestureEnd=0x7f050166;
        public static final int typeTouchExplorationGestureStart=0x7f050165;
        public static final int typeViewClicked=0x7f05015c;
        public static final int typeViewFocused=0x7f05015f;
        public static final int typeViewHoverEnter=0x7f050163;
        public static final int typeViewHoverExit=0x7f050164;
        public static final int typeViewLongClicked=0x7f05015d;
        public static final int typeViewScrolled=0x7f050168;
        public static final int typeViewSelected=0x7f05015e;
        public static final int typeViewTextChanged=0x7f050160;
        public static final int typeViewTextSelectionChanged=0x7f050169;
        public static final int typeWindowContentChanged=0x7f050167;
        public static final int typeWindowStateChanged=0x7f050161;
        public static final int uiMode=0x7f0501f8;
        public static final int unbounded=0x7f0501c9;
        public static final int undefined=0x7f0501fd;
        public static final int unspecified=0x7f0501e5;
        public static final int useLogo=0x7f0501cc;
        public static final int user=0x7f0501d3;
        public static final int userSwitcher=0x7f0501d6;
        public static final int vertical=0x7f05005a;
        public static final int viewEnd=0x7f050152;
        public static final int viewStart=0x7f050151;
        public static final int viewpager1=0x7f050218;
        public static final int visible=0x7f050138;
        public static final int voice=0x7f0501c5;
        public static final int web=0x7f050055;
        public static final int wheel=0x7f050207;
        public static final int widget=0x7f0501d4;
        public static final int widgets=0x7f0501d8;
        public static final int withText=0x7f0501c0;
        public static final int words=0x7f05018d;
        public static final int wrap_content=0x7f050011;
        public static final int xhdpi=0x7f050211;
        public static final int xlarge=0x7f05020d;
        public static final int yes=0x7f050153;
    }
    public static final class integer {
        public static final int google_play_services_version=0x7f070000;
    }
    public static final class layout {
        public static final int activity_edit=0x7f030000;
        public static final int activity_main=0x7f030001;
        public static final int activity_viewpager=0x7f030002;
        public static final int activity_viewpager_only=0x7f030003;
        public static final int dt_picker=0x7f030004;
        public static final int history_sub_page=0x7f030005;
        public static final int number_picker=0x7f030006;
        public static final int page_history_sub_vscrollable=0x7f030007;
        public static final int page_hscrollable=0x7f030008;
        public static final int page_vscrollable=0x7f030009;
        public static final int result_page=0x7f03000a;
        public static final int t_picker=0x7f03000b;
        public static final int time_picker=0x7f03000c;
    }
    public static final class menu {
        public static final int main_menu=0x7f090000;
    }
    public static final class string {
        public static final int DLG_TITLE_EXPORT_PROGRESS=0x7f060034;
        public static final int Delete_failed=0x7f06004b;
        public static final int Deleted=0x7f06004a;
        public static final int GPS_OFF=0x7f06002b;
        public static final int GPS_ON=0x7f06002a;
        public static final int GPX_EXISTS=0x7f060046;
        public static final int GPX_LOSE=0x7f060047;
        public static final int INPUTDLG_TITLE_TIME=0x7f060072;
        public static final int LAP_COUNT_LABEL=0x7f060048;
        public static final int LAP_LABEL=0x7f060049;
        public static final int MSG_EXPORT_PROGRESS=0x7f060035;
        public static final int SaveError=0x7f060036;
        public static final int SaveErrorDatabaseOnly=0x7f060039;
        public static final int SaveErrorGPX=0x7f060037;
        public static final int SaveErrorGPXOnly=0x7f060038;
        public static final int SaveOK=0x7f06003a;
        public static final int Share=0x7f06004c;
        public static final int app_name=0x7f060025;
        /**   Title for notification shown when GooglePlayServices needs to be
        enabled for a application to work. [CHAR LIMIT=70] 
         */
        public static final int auth_client_needs_enabling_title=0x7f060015;
        /**   Title for notification shown when GooglePlayServices needs to be
        installed for a application to work. [CHAR LIMIT=70] 
         */
        public static final int auth_client_needs_installation_title=0x7f060016;
        /**   Title for notification shown when GooglePlayServices needs to be
        udpated for a application to work. [CHAR LIMIT=70] 
         */
        public static final int auth_client_needs_update_title=0x7f060017;
        /**   Title for notification shown when GooglePlayServices is unavailable [CHAR LIMIT=42] 
         */
        public static final int auth_client_play_services_err_notification_msg=0x7f060018;
        /**   Requested by string saying which app requested the notification. [CHAR LIMIT=42] 
         */
        public static final int auth_client_requested_by_msg=0x7f060019;
        /**   Title for notification shown when a bad version of GooglePlayServices
        has been installed and needs correction for an application to work.
        [CHAR LIMIT=70] 
         */
        public static final int auth_client_using_bad_version_title=0x7f060014;
        public static final int cant_get=0x7f060033;
        public static final int cant_recovery_because_error=0x7f060054;
        public static final int cant_start_workout_because_error=0x7f060053;
        /**  Button in confirmation dialog to enable Google Play services.  Clicking it
        will direct user to application settings of Google Play services where they
        can enable it [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_enable_button=0x7f060006;
        /**  Message in confirmation dialog informing user they need to enable
        Google Play services in application settings [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_enable_text=0x7f060005;
        /**  Title of confirmation dialog informing user they need to enable
        Google Play services in application settings [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_enable_title=0x7f060004;
        /**  Button in confirmation dialog for installing Google Play services [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_install_button=0x7f060003;
        /**  (For phones) Message in confirmation dialog informing user that
        they need to install Google Play services (from Play Store) [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_install_text_phone=0x7f060001;
        /**  (For tablets) Message in confirmation dialog informing user that
        they need to install Google Play services (from Play Store) [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_install_text_tablet=0x7f060002;
        /**  Title of confirmation dialog informing user that they need to install
        Google Play services (from Play Store) [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_install_title=0x7f060000;
        /**  Message in confirmation dialog informing the user that they provided an invalid account. [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_invalid_account_text=0x7f06000c;
        /**  Title of confirmation dialog informing the user that they provided an invalid account. [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_invalid_account_title=0x7f06000b;
        /**  Message in confirmation dialog informing the user that a network error occurred. [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_network_error_text=0x7f06000a;
        /**  Title of confirmation dialog informing the user that a network error occurred. [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_network_error_title=0x7f060009;
        /**  Message in confirmation dialog informing user there is an unknown issue in Google Play
        services [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_unknown_issue=0x7f06000d;
        /**  Message in confirmation dialog informing user that date on the device is not correct,
    causing certificate checks to fail. [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_unsupported_date_text=0x7f060010;
        /**  Message in confirmation dialog informing user that Google Play services is not supported on their device [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_unsupported_text=0x7f06000f;
        /**  Title of confirmation dialog informing user that Google Play services is not supported on their device [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_unsupported_title=0x7f06000e;
        /**  Button in confirmation dialog for updating Google Play services [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_update_button=0x7f060011;
        /**  Message in confirmation dialog informing user that they need to update
        Google Play services (from Play Store) [CHAR LIMIT=NONE] 
         */
        public static final int common_google_play_services_update_text=0x7f060008;
        /**  Title of confirmation dialog informing user that they need to update
        Google Play services (from Play Store) [CHAR LIMIT=40] 
         */
        public static final int common_google_play_services_update_title=0x7f060007;
        /**  Sign-in button text [CHAR LIMIT=15] 
         */
        public static final int common_signin_button_text=0x7f060012;
        /**  Long form sign-in button text [CHAR LIMIT=30] 
         */
        public static final int common_signin_button_text_long=0x7f060013;
        public static final int data_updated=0x7f060073;
        public static final int date_button_caption=0x7f060071;
        public static final int date_display_format=0x7f06003d;
        public static final int datetime_display_format=0x7f06003b;
        public static final int datetime_display_format2=0x7f06003c;
        public static final int default_activity_name=0x7f06004d;
        public static final int description_cancel=0x7f060057;
        public static final int description_save=0x7f060056;
        public static final int distance_label=0x7f06004e;
        public static final int dummy_button=0x7f060026;
        public static final int dummy_content=0x7f060027;
        /**  Do not translate. Duration format for duration >= 1 hour 
         */
        public static final int durationformatlong=0x7f060029;
        /**  Do not translate. Duration format for duration < 1 hour 
         */
        public static final int durationformatshort=0x7f060028;
        public static final int edit_error_cant_launch=0x7f060070;
        public static final int gmt_date_time_for_gpx_format=0x7f06003f;
        public static final int gpx_share=0x7f060052;
        public static final int hint_gpxfilepath=0x7f06006c;
        public static final int hint_gpxfilepath_fixed=0x7f06006d;
        public static final int hint_insertdatetime=0x7f060064;
        public static final int hint_lap_speed=0x7f060068;
        public static final int hint_lap_speed_fixed=0x7f06006b;
        public static final int hint_lap_time=0x7f060067;
        public static final int hint_lap_time_fixed=0x7f06006a;
        public static final int hint_lapdistance=0x7f060066;
        public static final int hint_lapdistance_fixed=0x7f060069;
        public static final int hint_lapname=0x7f060065;
        public static final int hint_startdatetime=0x7f060063;
        public static final int hour=0x7f060030;
        public static final int killometer=0x7f06002d;
        public static final int killoperhour=0x7f060032;
        public static final int label_gpxfilepath=0x7f060061;
        public static final int label_gpxfilepath_fixed=0x7f060062;
        public static final int label_insert_date_time=0x7f060059;
        public static final int label_lap_distance=0x7f06005b;
        public static final int label_lap_distance_fixed=0x7f06005e;
        public static final int label_lap_speed=0x7f06005d;
        public static final int label_lap_speed_fixed=0x7f060060;
        public static final int label_lap_time=0x7f06005c;
        public static final int label_lap_time_fixed=0x7f06005f;
        public static final int label_lapname=0x7f06005a;
        /**  for edit dialog 
         */
        public static final int label_start_date_time=0x7f060058;
        public static final int label_unit_distance=0x7f06006e;
        public static final int label_unit_speed=0x7f06006f;
        /**  Location client code resources (prefix with location_client) 
         */
        public static final int location_client_powered_by_google=0x7f06001a;
        public static final int menu_delete=0x7f060042;
        public static final int menu_detail=0x7f060041;
        public static final int menu_edit=0x7f060044;
        public static final int menu_recovery=0x7f060045;
        public static final int menu_share=0x7f060043;
        public static final int meter=0x7f06002c;
        public static final int meterpersecond=0x7f060031;
        public static final int minute=0x7f06002f;
        public static final int no_title=0x7f060055;
        /**  Description of the button to decrease the NumberPicker value. [CHAR LIMIT=NONE] 
         */
        public static final int number_picker_decrement_button=0x7f06001c;
        /**  NumberPicker - accessibility support 
 Description of the button to increase the NumberPicker value. [CHAR LIMIT=NONE] 
         */
        public static final int number_picker_increment_button=0x7f06001b;
        /**  Description of the scrolling action in NumberPicker. [CHAR LIMIT=NONE] 
         */
        public static final int number_picker_increment_scroll_action=0x7f06001e;
        /**  Description of the tap and hold action to get into scroll mode in NumberPicker. [CHAR LIMIT=NONE] 
         */
        public static final int number_picker_increment_scroll_mode=0x7f06001d;
        public static final int second=0x7f06002e;
        public static final int speed_label=0x7f060051;
        public static final int time_display_format=0x7f06003e;
        public static final int time_for_id_format=0x7f060040;
        public static final int time_label=0x7f06004f;
        /**  Description of the button to decrease the TimePicker's hour value. [CHAR LIMIT=NONE] 
         */
        public static final int time_picker_decrement_hour_button=0x7f060022;
        /**  Description of the button to decrease the TimePicker's minute value. [CHAR LIMIT=NONE] 
         */
        public static final int time_picker_decrement_minute_button=0x7f060020;
        /**  Description of the button to decrease the TimePicker's set AM value. [CHAR LIMIT=NONE] 
         */
        public static final int time_picker_decrement_set_am_button=0x7f060024;
        /**  Description of the button to increase the TimePicker's hour value. [CHAR LIMIT=NONE] 
         */
        public static final int time_picker_increment_hour_button=0x7f060021;
        /**  TimePicker - accessibility support 
 Description of the button to increase the TimePicker's minute value. [CHAR LIMIT=NONE] 
         */
        public static final int time_picker_increment_minute_button=0x7f06001f;
        /**  Description of the button to increase the TimePicker's set PM value. [CHAR LIMIT=NONE] 
         */
        public static final int time_picker_increment_set_pm_button=0x7f060023;
        public static final int to=0x7f060050;
    }
    public static final class style {
        /**  Base style for animations.  This style specifies no animations. 
         */
        public static final int Animation=0x7f080007;
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppBaseTheme=0x7f080000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
 Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f080001;
        public static final int ButtonBar=0x7f080004;
        public static final int ButtonBarButton=0x7f080005;
        public static final int DialogLike=0x7f080003;
        public static final int FullscreenTheme=0x7f080002;
        /**  Widget Styles 
         */
        public static final int Widget=0x7f080008;
        public static final int Widget_NumberPicker=0x7f080009;
        public static final int Widget_TimePicker=0x7f08000a;
        public static final int WindowTitleBackground=0x7f080006;
    }
    public static final class styleable {
        /** Attributes that can be used with a AbsListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsListView_cacheColorHint app.guchagucharr.guchagucharunrecorder:cacheColorHint}</code></td><td> Indicates that this list will always be drawn on top of solid, single-color
             opaque background.</td></tr>
           <tr><td><code>{@link #AbsListView_choiceMode app.guchagucharr.guchagucharunrecorder:choiceMode}</code></td><td> Defines the choice behavior for the view.</td></tr>
           <tr><td><code>{@link #AbsListView_drawSelectorOnTop app.guchagucharr.guchagucharunrecorder:drawSelectorOnTop}</code></td><td> When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollAlwaysVisible app.guchagucharr.guchagucharunrecorder:fastScrollAlwaysVisible}</code></td><td> When set to true, the list will always show the fast scroll interface.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollEnabled app.guchagucharr.guchagucharunrecorder:fastScrollEnabled}</code></td><td> Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #AbsListView_listSelector app.guchagucharr.guchagucharunrecorder:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #AbsListView_scrollingCache app.guchagucharr.guchagucharunrecorder:scrollingCache}</code></td><td> When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #AbsListView_smoothScrollbar app.guchagucharr.guchagucharunrecorder:smoothScrollbar}</code></td><td> When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen.</td></tr>
           <tr><td><code>{@link #AbsListView_stackFromBottom app.guchagucharr.guchagucharunrecorder:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           <tr><td><code>{@link #AbsListView_textFilterEnabled app.guchagucharr.guchagucharunrecorder:textFilterEnabled}</code></td><td> When set to true, the list will filter results as the user types.</td></tr>
           <tr><td><code>{@link #AbsListView_transcriptMode app.guchagucharr.guchagucharunrecorder:transcriptMode}</code></td><td> Sets the transcript mode for the list.</td></tr>
           </table>
           @see #AbsListView_cacheColorHint
           @see #AbsListView_choiceMode
           @see #AbsListView_drawSelectorOnTop
           @see #AbsListView_fastScrollAlwaysVisible
           @see #AbsListView_fastScrollEnabled
           @see #AbsListView_listSelector
           @see #AbsListView_scrollingCache
           @see #AbsListView_smoothScrollbar
           @see #AbsListView_stackFromBottom
           @see #AbsListView_textFilterEnabled
           @see #AbsListView_transcriptMode
         */
        public static final int[] AbsListView = {
            0x7f0101c9, 0x7f0101ca, 0x7f0101cb, 0x7f0101cc,
            0x7f0101cd, 0x7f0101ce, 0x7f0101cf, 0x7f0101d0,
            0x7f0101d1, 0x7f0101d2, 0x7f0101d3
        };
        /**
          <p>
          @attr description
           Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:cacheColorHint
        */
        public static final int AbsListView_cacheColorHint = 6;
        /**
          <p>
          @attr description
           Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:choiceMode
        */
        public static final int AbsListView_choiceMode = 9;
        /**
          <p>
          @attr description
           When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawSelectorOnTop
        */
        public static final int AbsListView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
           When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollAlwaysVisible
        */
        public static final int AbsListView_fastScrollAlwaysVisible = 10;
        /**
          <p>
          @attr description
           Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollEnabled
        */
        public static final int AbsListView_fastScrollEnabled = 7;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listSelector
        */
        public static final int AbsListView_listSelector = 0;
        /**
          <p>
          @attr description
           When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollingCache
        */
        public static final int AbsListView_scrollingCache = 3;
        /**
          <p>
          @attr description
           When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:smoothScrollbar
        */
        public static final int AbsListView_smoothScrollbar = 8;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stackFromBottom
        */
        public static final int AbsListView_stackFromBottom = 2;
        /**
          <p>
          @attr description
           When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textFilterEnabled
        */
        public static final int AbsListView_textFilterEnabled = 4;
        /**
          <p>
          @attr description
           Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td> The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen. </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td> The list will automatically scroll to the bottom, no matter what items
                 are currently visible. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:transcriptMode
        */
        public static final int AbsListView_transcriptMode = 5;
        /** Attributes that can be used with a AbsSpinner.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsSpinner_entries app.guchagucharr.guchagucharunrecorder:entries}</code></td><td> Reference to an array resource that will populate the Spinner.</td></tr>
           </table>
           @see #AbsSpinner_entries
         */
        public static final int[] AbsSpinner = {
            0x7f010129
        };
        /**
          <p>
          @attr description
           Reference to an array resource that will populate the Spinner.  For static content,
             this is simpler than populating the Spinner programmatically. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:entries
        */
        public static final int AbsSpinner_entries = 0;
        /** Attributes that can be used with a AbsoluteLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsoluteLayout_Layout_layout_x app.guchagucharr.guchagucharunrecorder:layout_x}</code></td><td></td></tr>
           <tr><td><code>{@link #AbsoluteLayout_Layout_layout_y app.guchagucharr.guchagucharunrecorder:layout_y}</code></td><td></td></tr>
           </table>
           @see #AbsoluteLayout_Layout_layout_x
           @see #AbsoluteLayout_Layout_layout_y
         */
        public static final int[] AbsoluteLayout_Layout = {
            0x7f01029f, 0x7f0102a0
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#layout_x}
          attribute's value can be found in the {@link #AbsoluteLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_x
        */
        public static final int AbsoluteLayout_Layout_layout_x = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#layout_y}
          attribute's value can be found in the {@link #AbsoluteLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_y
        */
        public static final int AbsoluteLayout_Layout_layout_y = 1;
        /** Attributes that can be used with a AccelerateInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AccelerateInterpolator_factor app.guchagucharr.guchagucharunrecorder:factor}</code></td><td> This is the amount of deceleration to add when easing in.</td></tr>
           </table>
           @see #AccelerateInterpolator_factor
         */
        public static final int[] AccelerateInterpolator = {
            0x7f010327
        };
        /**
          <p>
          @attr description
           This is the amount of deceleration to add when easing in. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:factor
        */
        public static final int AccelerateInterpolator_factor = 0;
        /**  Use <code>accessibility-service</code> as the root tag of the XML resource that
         describes an {@link android.accessibilityservice.AccessibilityService} service,
         which is referenced from its
         {@link android.accessibilityservice.AccessibilityService#SERVICE_META_DATA}
         meta-data entry. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AccessibilityService_accessibilityEventTypes app.guchagucharr.guchagucharunrecorder:accessibilityEventTypes}</code></td><td> The event types this serivce would like to receive as specified in
             {@link android.view.accessibility.AccessibilityEvent}.</td></tr>
           <tr><td><code>{@link #AccessibilityService_accessibilityFeedbackType app.guchagucharr.guchagucharunrecorder:accessibilityFeedbackType}</code></td><td> The feedback types this serivce provides as specified in
             {@link android.accessibilityservice.AccessibilityServiceInfo}.</td></tr>
           <tr><td><code>{@link #AccessibilityService_accessibilityFlags app.guchagucharr.guchagucharunrecorder:accessibilityFlags}</code></td><td> Additional flags as specified in
             {@link android.accessibilityservice.AccessibilityServiceInfo}.</td></tr>
           <tr><td><code>{@link #AccessibilityService_canRetrieveWindowContent app.guchagucharr.guchagucharunrecorder:canRetrieveWindowContent}</code></td><td> Flag whether the accessibility service wants to be able to retrieve the
             active window content.</td></tr>
           <tr><td><code>{@link #AccessibilityService_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Short description of the accessibility serivce purpose or behavior.</td></tr>
           <tr><td><code>{@link #AccessibilityService_notificationTimeout app.guchagucharr.guchagucharunrecorder:notificationTimeout}</code></td><td> The minimal period in milliseconds between two accessibility events of the same type
             are sent to this serivce.</td></tr>
           <tr><td><code>{@link #AccessibilityService_packageNames app.guchagucharr.guchagucharunrecorder:packageNames}</code></td><td> Comma separated package names from which this serivce would like to receive events (leave out for all packages).</td></tr>
           <tr><td><code>{@link #AccessibilityService_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #AccessibilityService_accessibilityEventTypes
           @see #AccessibilityService_accessibilityFeedbackType
           @see #AccessibilityService_accessibilityFlags
           @see #AccessibilityService_canRetrieveWindowContent
           @see #AccessibilityService_description
           @see #AccessibilityService_notificationTimeout
           @see #AccessibilityService_packageNames
           @see #AccessibilityService_settingsActivity
         */
        public static final int[] AccessibilityService = {
            0x7f0101b9, 0x7f0101c3, 0x7f0101c4, 0x7f0101c5,
            0x7f0101c6, 0x7f0101c7, 0x7f0101c8, 0x7f010432
        };
        /**
          <p>
          @attr description
           The event types this serivce would like to receive as specified in
             {@link android.view.accessibility.AccessibilityEvent}. This setting
             can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>typeViewClicked</code></td><td>0x00000001</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_CLICKED} events.</td></tr>
<tr><td><code>typeViewLongClicked</code></td><td>0x00000002</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_LONG_CLICKED} events. </td></tr>
<tr><td><code>typeViewSelected</code></td><td>0x00000004</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SELECTED} events. </td></tr>
<tr><td><code>typeViewFocused</code></td><td>0x00000008</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_FOCUSED} events. </td></tr>
<tr><td><code>typeViewTextChanged</code></td><td>0x00000010</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED} events. </td></tr>
<tr><td><code>typeWindowStateChanged</code></td><td>0x00000020</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED} events. </td></tr>
<tr><td><code>typeNotificationStateChanged</code></td><td>0x00000040</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED} events. </td></tr>
<tr><td><code>typeViewHoverEnter</code></td><td>0x00000080</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_ENTER} events. </td></tr>
<tr><td><code>typeViewHoverExit</code></td><td>0x00000100</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_EXIT} events. </td></tr>
<tr><td><code>typeTouchExplorationGestureStart</code></td><td>0x00000200</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_START} events. </td></tr>
<tr><td><code>typeTouchExplorationGestureEnd</code></td><td>0x00000400</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_END} events. </td></tr>
<tr><td><code>typeWindowContentChanged</code></td><td>0x00000800</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED} events. </td></tr>
<tr><td><code>typeViewScrolled</code></td><td>0x000001000</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SCROLLED} events. </td></tr>
<tr><td><code>typeViewTextSelectionChanged</code></td><td>0x000002000</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_SELECTION_CHANGED} events. </td></tr>
<tr><td><code>typeAllMask</code></td><td>0xffffffff</td><td> Receives {@link android.view.accessibility.AccessibilityEvent#TYPES_ALL_MASK} i.e. all events. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accessibilityEventTypes
        */
        public static final int AccessibilityService_accessibilityEventTypes = 1;
        /**
          <p>
          @attr description
           The feedback types this serivce provides as specified in
             {@link android.accessibilityservice.AccessibilityServiceInfo}. This setting
             can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>feedbackSpoken</code></td><td>0x00000001</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_SPOKEN} feedback. </td></tr>
<tr><td><code>feedbackHaptic</code></td><td>0x00000002</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_HAPTIC} feedback. </td></tr>
<tr><td><code>feedbackAudible</code></td><td>0x00000004</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_AUDIBLE} feedback. </td></tr>
<tr><td><code>feedbackVisual</code></td><td>0x00000008</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_VISUAL} feedback. </td></tr>
<tr><td><code>feedbackGeneric</code></td><td>0x00000010</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_GENERIC} feedback. </td></tr>
<tr><td><code>feedbackAllMask</code></td><td>0xffffffff</td><td> Provides {@link android.accessibilityservice.AccessibilityServiceInfo#FEEDBACK_ALL_MASK} feedback. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accessibilityFeedbackType
        */
        public static final int AccessibilityService_accessibilityFeedbackType = 3;
        /**
          <p>
          @attr description
           Additional flags as specified in
             {@link android.accessibilityservice.AccessibilityServiceInfo}.
             This setting can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>flagDefault</code></td><td>0x00000001</td><td> Has flag {@link android.accessibilityservice.AccessibilityServiceInfo#DEFAULT} </td></tr>
<tr><td><code>flagIncludeNotImportantViews</code></td><td>0x00000002</td><td> Has flag {@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS} </td></tr>
<tr><td><code>flagRequestTouchExplorationMode</code></td><td>0x00000004</td><td> Has flag {@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE} </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accessibilityFlags
        */
        public static final int AccessibilityService_accessibilityFlags = 5;
        /**
          <p>
          @attr description
           Flag whether the accessibility service wants to be able to retrieve the
             active window content. This setting cannot be changed at runtime. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:canRetrieveWindowContent
        */
        public static final int AccessibilityService_canRetrieveWindowContent = 6;
        /**
          <p>
          @attr description
           Short description of the accessibility serivce purpose or behavior.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AccessibilityService_description = 7;
        /**
          <p>
          @attr description
           The minimal period in milliseconds between two accessibility events of the same type
             are sent to this serivce. This setting can be changed at runtime by calling
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:notificationTimeout
        */
        public static final int AccessibilityService_notificationTimeout = 4;
        /**
          <p>
          @attr description
           Comma separated package names from which this serivce would like to receive events (leave out for all packages).
             {@link android.accessibilityservice.AccessibilityService#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
             android.accessibilityservice.AccessibilityService.setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:packageNames
        */
        public static final int AccessibilityService_packageNames = 2;
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. This setting cannot be changed at runtime. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int AccessibilityService_settingsActivity = 0;
        /**  Use <code>account-authenticator</code> as the root tag of the XML resource that
         describes an account authenticator.
     
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AccountAuthenticator_accountPreferences app.guchagucharr.guchagucharunrecorder:accountPreferences}</code></td><td> A preferences.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_accountType app.guchagucharr.guchagucharunrecorder:accountType}</code></td><td> The account type this authenticator handles.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_customTokens app.guchagucharr.guchagucharunrecorder:customTokens}</code></td><td> Account handles its own token storage and permissions.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> The icon of the authenticator.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> The user-visible name of the authenticator.</td></tr>
           <tr><td><code>{@link #AccountAuthenticator_smallIcon app.guchagucharr.guchagucharunrecorder:smallIcon}</code></td><td> Smaller icon of the authenticator.</td></tr>
           </table>
           @see #AccountAuthenticator_accountPreferences
           @see #AccountAuthenticator_accountType
           @see #AccountAuthenticator_customTokens
           @see #AccountAuthenticator_icon
           @see #AccountAuthenticator_label
           @see #AccountAuthenticator_smallIcon
         */
        public static final int[] AccountAuthenticator = {
            0x7f0103af, 0x7f0103b0, 0x7f0103b1, 0x7f0103b2,
            0x7f010404, 0x7f010405
        };
        /**
          <p>
          @attr description
           A preferences.xml file for authenticator-specific settings. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accountPreferences
        */
        public static final int AccountAuthenticator_accountPreferences = 2;
        /**
          <p>
          @attr description
           The account type this authenticator handles. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accountType
        */
        public static final int AccountAuthenticator_accountType = 0;
        /**
          <p>
          @attr description
           Account handles its own token storage and permissions.
             Default to false
          


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:customTokens
        */
        public static final int AccountAuthenticator_customTokens = 3;
        /**
          <p>
          @attr description
           The icon of the authenticator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AccountAuthenticator_icon = 5;
        /**
          <p>
          @attr description
           The user-visible name of the authenticator. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AccountAuthenticator_label = 4;
        /**
          <p>
          @attr description
           Smaller icon of the authenticator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:smallIcon
        */
        public static final int AccountAuthenticator_smallIcon = 1;
        /**  Attributes used to style the Action Bar. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionBar_background app.guchagucharr.guchagucharunrecorder:background}</code></td><td> Specifies a background drawable for the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_backgroundSplit app.guchagucharr.guchagucharunrecorder:backgroundSplit}</code></td><td> Specifies a background drawable for the bottom component of a split action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_backgroundStacked app.guchagucharr.guchagucharunrecorder:backgroundStacked}</code></td><td> Specifies a background drawable for a second stacked row of the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_customNavigationLayout app.guchagucharr.guchagucharunrecorder:customNavigationLayout}</code></td><td> Specifies a layout for custom navigation.</td></tr>
           <tr><td><code>{@link #ActionBar_displayOptions app.guchagucharr.guchagucharunrecorder:displayOptions}</code></td><td> Options affecting how the action bar is displayed.</td></tr>
           <tr><td><code>{@link #ActionBar_divider app.guchagucharr.guchagucharunrecorder:divider}</code></td><td> Specifies the drawable used for item dividers.</td></tr>
           <tr><td><code>{@link #ActionBar_height app.guchagucharr.guchagucharunrecorder:height}</code></td><td> Specifies a fixed height.</td></tr>
           <tr><td><code>{@link #ActionBar_homeLayout app.guchagucharr.guchagucharunrecorder:homeLayout}</code></td><td> Specifies a layout to use for the "home" section of the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> Specifies the drawable used for the application icon.</td></tr>
           <tr><td><code>{@link #ActionBar_indeterminateProgressStyle app.guchagucharr.guchagucharunrecorder:indeterminateProgressStyle}</code></td><td> Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
           <tr><td><code>{@link #ActionBar_itemPadding app.guchagucharr.guchagucharunrecorder:itemPadding}</code></td><td> Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar.</td></tr>
           <tr><td><code>{@link #ActionBar_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> Specifies the drawable used for the application logo.</td></tr>
           <tr><td><code>{@link #ActionBar_navigationMode app.guchagucharr.guchagucharunrecorder:navigationMode}</code></td><td> The type of navigation to use.</td></tr>
           <tr><td><code>{@link #ActionBar_progressBarPadding app.guchagucharr.guchagucharunrecorder:progressBarPadding}</code></td><td> Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
           <tr><td><code>{@link #ActionBar_progressBarStyle app.guchagucharr.guchagucharunrecorder:progressBarStyle}</code></td><td> Specifies a style resource to use for an embedded progress bar.</td></tr>
           <tr><td><code>{@link #ActionBar_subtitle app.guchagucharr.guchagucharunrecorder:subtitle}</code></td><td> Specifies subtitle text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #ActionBar_subtitleTextStyle app.guchagucharr.guchagucharunrecorder:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
           <tr><td><code>{@link #ActionBar_title app.guchagucharr.guchagucharunrecorder:title}</code></td><td> Specifies title text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #ActionBar_titleTextStyle app.guchagucharr.guchagucharunrecorder:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
           </table>
           @see #ActionBar_background
           @see #ActionBar_backgroundSplit
           @see #ActionBar_backgroundStacked
           @see #ActionBar_customNavigationLayout
           @see #ActionBar_displayOptions
           @see #ActionBar_divider
           @see #ActionBar_height
           @see #ActionBar_homeLayout
           @see #ActionBar_icon
           @see #ActionBar_indeterminateProgressStyle
           @see #ActionBar_itemPadding
           @see #ActionBar_logo
           @see #ActionBar_navigationMode
           @see #ActionBar_progressBarPadding
           @see #ActionBar_progressBarStyle
           @see #ActionBar_subtitle
           @see #ActionBar_subtitleTextStyle
           @see #ActionBar_title
           @see #ActionBar_titleTextStyle
         */
        public static final int[] ActionBar = {
            0x7f010098, 0x7f010166, 0x7f010206, 0x7f010247,
            0x7f01035e, 0x7f0103d0, 0x7f0103d1, 0x7f0103d2,
            0x7f0103d3, 0x7f0103d4, 0x7f0103d5, 0x7f0103d6,
            0x7f0103d7, 0x7f0103d8, 0x7f0103d9, 0x7f0103da,
            0x7f0103db, 0x7f010405, 0x7f010406
        };
        /**
          <p>
          @attr description
           Specifies a background drawable for the action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:background
        */
        public static final int ActionBar_background = 1;
        /**
          <p>
          @attr description
           Specifies a background drawable for the bottom component of a split action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundSplit
        */
        public static final int ActionBar_backgroundSplit = 11;
        /**
          <p>
          @attr description
           Specifies a background drawable for a second stacked row of the action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundStacked
        */
        public static final int ActionBar_backgroundStacked = 10;
        /**
          <p>
          @attr description
           Specifies a layout for custom navigation. Overrides navigationMode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:customNavigationLayout
        */
        public static final int ActionBar_customNavigationLayout = 12;
        /**
          <p>
          @attr description
           Options affecting how the action bar is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
<tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
<tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:displayOptions
        */
        public static final int ActionBar_displayOptions = 6;
        /**
          <p>
          @attr description
           Specifies the drawable used for item dividers. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:divider
        */
        public static final int ActionBar_divider = 2;
        /**
          <p>
          @attr description
           Specifies a fixed height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:height
        */
        public static final int ActionBar_height = 3;
        /**
          <p>
          @attr description
           Specifies a layout to use for the "home" section of the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:homeLayout
        */
        public static final int ActionBar_homeLayout = 13;
        /**
          <p>
          @attr description
           Specifies the drawable used for the application icon. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int ActionBar_icon = 17;
        /**
          <p>
          @attr description
           Specifies a style resource to use for an indeterminate progress spinner. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indeterminateProgressStyle
        */
        public static final int ActionBar_indeterminateProgressStyle = 14;
        /**
          <p>
          @attr description
           Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:itemPadding
        */
        public static final int ActionBar_itemPadding = 16;
        /**
          <p>
          @attr description
           Specifies the drawable used for the application logo. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int ActionBar_logo = 18;
        /**
          <p>
          @attr description
           The type of navigation to use. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
<tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
<tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:navigationMode
        */
        public static final int ActionBar_navigationMode = 5;
        /**
          <p>
          @attr description
           Specifies the horizontal padding on either end for an embedded progress bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarPadding
        */
        public static final int ActionBar_progressBarPadding = 15;
        /**
          <p>
          @attr description
           Specifies a style resource to use for an embedded progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyle
        */
        public static final int ActionBar_progressBarStyle = 0;
        /**
          <p>
          @attr description
           Specifies subtitle text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:subtitle
        */
        public static final int ActionBar_subtitle = 7;
        /**
          <p>
          @attr description
           Specifies a style to use for subtitle text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:subtitleTextStyle
        */
        public static final int ActionBar_subtitleTextStyle = 9;
        /**
          <p>
          @attr description
           Specifies title text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:title
        */
        public static final int ActionBar_title = 4;
        /**
          <p>
          @attr description
           Specifies a style to use for title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:titleTextStyle
        */
        public static final int ActionBar_titleTextStyle = 8;
        /** Attributes that can be used with a ActionBar_LayoutParams.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionBar_LayoutParams_layout_gravity app.guchagucharr.guchagucharunrecorder:layout_gravity}</code></td><td> Standard gravity constant that a child supplies to its parent.</td></tr>
           </table>
           @see #ActionBar_LayoutParams_layout_gravity
         */
        public static final int[] ActionBar_LayoutParams = {
            0x7f01012a
        };
        /**
          <p>
          @attr description
           Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_gravity
        */
        public static final int ActionBar_LayoutParams_layout_gravity = 0;
        /** Attributes that can be used with a ActionMenuItemView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionMenuItemView_minWidth app.guchagucharr.guchagucharunrecorder:minWidth}</code></td><td></td></tr>
           </table>
           @see #ActionMenuItemView_minWidth
         */
        public static final int[] ActionMenuItemView = {
            0x7f010226
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minWidth}
          attribute's value can be found in the {@link #ActionMenuItemView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minWidth
        */
        public static final int ActionMenuItemView_minWidth = 0;
        /** Attributes that can be used with a ActionMode.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionMode_background app.guchagucharr.guchagucharunrecorder:background}</code></td><td> Specifies a background for the action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_backgroundSplit app.guchagucharr.guchagucharunrecorder:backgroundSplit}</code></td><td> Specifies a background for the split action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_height app.guchagucharr.guchagucharunrecorder:height}</code></td><td> Specifies a fixed height for the action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_subtitleTextStyle app.guchagucharr.guchagucharunrecorder:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
           <tr><td><code>{@link #ActionMode_titleTextStyle app.guchagucharr.guchagucharunrecorder:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
           </table>
           @see #ActionMode_background
           @see #ActionMode_backgroundSplit
           @see #ActionMode_height
           @see #ActionMode_subtitleTextStyle
           @see #ActionMode_titleTextStyle
         */
        public static final int[] ActionMode = {
            0x7f010166, 0x7f010247, 0x7f0103d3, 0x7f0103d4,
            0x7f0103d6
        };
        /**
          <p>
          @attr description
           Specifies a background for the action mode bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:background
        */
        public static final int ActionMode_background = 0;
        /**
          <p>
          @attr description
           Specifies a background for the split action mode bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundSplit
        */
        public static final int ActionMode_backgroundSplit = 4;
        /**
          <p>
          @attr description
           Specifies a fixed height for the action mode bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:height
        */
        public static final int ActionMode_height = 1;
        /**
          <p>
          @attr description
           Specifies a style to use for subtitle text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:subtitleTextStyle
        */
        public static final int ActionMode_subtitleTextStyle = 3;
        /**
          <p>
          @attr description
           Specifies a style to use for title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:titleTextStyle
        */
        public static final int ActionMode_titleTextStyle = 2;
        /**  Attrbitutes for a ActvityChooserView. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable app.guchagucharr.guchagucharunrecorder:expandActivityOverflowButtonDrawable}</code></td><td> The drawable to show in the button for expanding the activities overflow popup.</td></tr>
           <tr><td><code>{@link #ActivityChooserView_initialActivityCount app.guchagucharr.guchagucharunrecorder:initialActivityCount}</code></td><td> The maximal number of items initially shown in the activity list.</td></tr>
           </table>
           @see #ActivityChooserView_expandActivityOverflowButtonDrawable
           @see #ActivityChooserView_initialActivityCount
         */
        public static final int[] ActivityChooserView = {
            0x7f010367, 0x7f010368
        };
        /**
          <p>
          @attr description
           The drawable to show in the button for expanding the activities overflow popup.
             <strong>Note:</strong> Clients would like to set this drawable
             as a clue about the action the chosen activity will perform. For
             example, if share activity is to be chosen the drawable should
             give a clue that sharing is to be performed.
         


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandActivityOverflowButtonDrawable
        */
        public static final int ActivityChooserView_expandActivityOverflowButtonDrawable = 1;
        /**
          <p>
          @attr description
           The maximal number of items initially shown in the activity list. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:initialActivityCount
        */
        public static final int ActivityChooserView_initialActivityCount = 0;
        /** Attributes that can be used with a AdapterViewAnimator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AdapterViewAnimator_animateFirstView app.guchagucharr.guchagucharunrecorder:animateFirstView}</code></td><td> Defines whether to animate the current View when the ViewAnimation
        is first displayed.</td></tr>
           <tr><td><code>{@link #AdapterViewAnimator_inAnimation app.guchagucharr.guchagucharunrecorder:inAnimation}</code></td><td> Identifier for the animation to use when a view is shown.</td></tr>
           <tr><td><code>{@link #AdapterViewAnimator_loopViews app.guchagucharr.guchagucharunrecorder:loopViews}</code></td><td>Defines whether the animator loops to the first view once it
        has reached the end of the list.</td></tr>
           <tr><td><code>{@link #AdapterViewAnimator_outAnimation app.guchagucharr.guchagucharunrecorder:outAnimation}</code></td><td> Identifier for the animation to use when a view is hidden.</td></tr>
           </table>
           @see #AdapterViewAnimator_animateFirstView
           @see #AdapterViewAnimator_inAnimation
           @see #AdapterViewAnimator_loopViews
           @see #AdapterViewAnimator_outAnimation
         */
        public static final int[] AdapterViewAnimator = {
            0x7f01027a, 0x7f01027b, 0x7f01027c, 0x7f01027f
        };
        /**
          <p>
          @attr description
           Defines whether to animate the current View when the ViewAnimation
        is first displayed. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animateFirstView
        */
        public static final int AdapterViewAnimator_animateFirstView = 2;
        /**
          <p>
          @attr description
           Identifier for the animation to use when a view is shown. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inAnimation
        */
        public static final int AdapterViewAnimator_inAnimation = 0;
        /**
          <p>
          @attr description
          Defines whether the animator loops to the first view once it
        has reached the end of the list. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:loopViews
        */
        public static final int AdapterViewAnimator_loopViews = 3;
        /**
          <p>
          @attr description
           Identifier for the animation to use when a view is hidden. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:outAnimation
        */
        public static final int AdapterViewAnimator_outAnimation = 1;
        /** Attributes that can be used with a AdapterViewFlipper.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AdapterViewFlipper_autoStart app.guchagucharr.guchagucharunrecorder:autoStart}</code></td><td> When true, automatically start animating </td></tr>
           <tr><td><code>{@link #AdapterViewFlipper_flipInterval app.guchagucharr.guchagucharunrecorder:flipInterval}</code></td><td></td></tr>
           </table>
           @see #AdapterViewFlipper_autoStart
           @see #AdapterViewFlipper_flipInterval
         */
        public static final int[] AdapterViewFlipper = {
            0x7f01027d, 0x7f01027e
        };
        /**
          <p>
          @attr description
           When true, automatically start animating 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoStart
        */
        public static final int AdapterViewFlipper_autoStart = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#flipInterval}
          attribute's value can be found in the {@link #AdapterViewFlipper} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:flipInterval
        */
        public static final int AdapterViewFlipper_flipInterval = 0;
        /** Attributes that can be used with a AdsAttrs.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AdsAttrs_adSize app.guchagucharr.guchagucharunrecorder:adSize}</code></td><td>
    The size of the ad.</td></tr>
           <tr><td><code>{@link #AdsAttrs_adSizes app.guchagucharr.guchagucharunrecorder:adSizes}</code></td><td>
    A comma-separated list of the supported ad sizes.</td></tr>
           <tr><td><code>{@link #AdsAttrs_adUnitId app.guchagucharr.guchagucharunrecorder:adUnitId}</code></td><td> The ad unit ID.</td></tr>
           </table>
           @see #AdsAttrs_adSize
           @see #AdsAttrs_adSizes
           @see #AdsAttrs_adUnitId
         */
        public static final int[] AdsAttrs = {
            0x7f010000, 0x7f010001, 0x7f010002
        };
        /**
          <p>
          @attr description
          
    The size of the ad. It must be one of BANNER, FULL_BANNER, LEADERBOARD,
    MEDIUM_RECTANGLE, SMART_BANNER, WIDE_SKYSCRAPER, or
    &lt;width&gt;x&lt;height&gt;.
    


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:adSize
        */
        public static final int AdsAttrs_adSize = 0;
        /**
          <p>
          @attr description
          
    A comma-separated list of the supported ad sizes. The sizes must be one of
    BANNER, FULL_BANNER, LEADERBOARD, MEDIUM_RECTANGLE, SMART_BANNER,
    WIDE_SKYSCRAPER, or &lt;width&gt;x&lt;height&gt;.
    


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:adSizes
        */
        public static final int AdsAttrs_adSizes = 1;
        /**
          <p>
          @attr description
           The ad unit ID. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:adUnitId
        */
        public static final int AdsAttrs_adUnitId = 2;
        /**  The set of attributes that describe a AlertDialog's theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlertDialog_bottomBright app.guchagucharr.guchagucharunrecorder:bottomBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_bottomDark app.guchagucharr.guchagucharunrecorder:bottomDark}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_bottomMedium app.guchagucharr.guchagucharunrecorder:bottomMedium}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_centerBright app.guchagucharr.guchagucharunrecorder:centerBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_centerDark app.guchagucharr.guchagucharunrecorder:centerDark}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_centerMedium app.guchagucharr.guchagucharunrecorder:centerMedium}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_fullBright app.guchagucharr.guchagucharunrecorder:fullBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_fullDark app.guchagucharr.guchagucharunrecorder:fullDark}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_horizontalProgressLayout app.guchagucharr.guchagucharunrecorder:horizontalProgressLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_layout app.guchagucharr.guchagucharunrecorder:layout}</code></td><td> Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so.</td></tr>
           <tr><td><code>{@link #AlertDialog_listItemLayout app.guchagucharr.guchagucharunrecorder:listItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_listLayout app.guchagucharr.guchagucharunrecorder:listLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout app.guchagucharr.guchagucharunrecorder:multiChoiceItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_progressLayout app.guchagucharr.guchagucharunrecorder:progressLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout app.guchagucharr.guchagucharunrecorder:singleChoiceItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_topBright app.guchagucharr.guchagucharunrecorder:topBright}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_topDark app.guchagucharr.guchagucharunrecorder:topDark}</code></td><td></td></tr>
           </table>
           @see #AlertDialog_bottomBright
           @see #AlertDialog_bottomDark
           @see #AlertDialog_bottomMedium
           @see #AlertDialog_centerBright
           @see #AlertDialog_centerDark
           @see #AlertDialog_centerMedium
           @see #AlertDialog_fullBright
           @see #AlertDialog_fullDark
           @see #AlertDialog_horizontalProgressLayout
           @see #AlertDialog_layout
           @see #AlertDialog_listItemLayout
           @see #AlertDialog_listLayout
           @see #AlertDialog_multiChoiceItemLayout
           @see #AlertDialog_progressLayout
           @see #AlertDialog_singleChoiceItemLayout
           @see #AlertDialog_topBright
           @see #AlertDialog_topDark
         */
        public static final int[] AlertDialog = {
            0x7f010134, 0x7f010135, 0x7f010136, 0x7f010137,
            0x7f010138, 0x7f010139, 0x7f01013a, 0x7f01013b,
            0x7f01013c, 0x7f01013d, 0x7f01013e, 0x7f01013f,
            0x7f010140, 0x7f010141, 0x7f010142, 0x7f010143,
            0x7f0101ae
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#bottomBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:bottomBright
        */
        public static final int AlertDialog_bottomBright = 7;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#bottomDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:bottomDark
        */
        public static final int AlertDialog_bottomDark = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#bottomMedium}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:bottomMedium
        */
        public static final int AlertDialog_bottomMedium = 8;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#centerBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:centerBright
        */
        public static final int AlertDialog_centerBright = 6;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#centerDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:centerDark
        */
        public static final int AlertDialog_centerDark = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#centerMedium}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:centerMedium
        */
        public static final int AlertDialog_centerMedium = 9;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fullBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fullBright
        */
        public static final int AlertDialog_fullBright = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fullDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fullDark
        */
        public static final int AlertDialog_fullDark = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#horizontalProgressLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:horizontalProgressLayout
        */
        public static final int AlertDialog_horizontalProgressLayout = 15;
        /**
          <p>
          @attr description
           Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout
        */
        public static final int AlertDialog_layout = 16;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#listItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:listItemLayout
        */
        public static final int AlertDialog_listItemLayout = 13;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#listLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:listLayout
        */
        public static final int AlertDialog_listLayout = 10;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#multiChoiceItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:multiChoiceItemLayout
        */
        public static final int AlertDialog_multiChoiceItemLayout = 11;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#progressLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:progressLayout
        */
        public static final int AlertDialog_progressLayout = 14;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#singleChoiceItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:singleChoiceItemLayout
        */
        public static final int AlertDialog_singleChoiceItemLayout = 12;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#topBright}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:topBright
        */
        public static final int AlertDialog_topBright = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#topDark}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:topDark
        */
        public static final int AlertDialog_topDark = 1;
        /** Attributes that can be used with a AlphaAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlphaAnimation_fromAlpha app.guchagucharr.guchagucharunrecorder:fromAlpha}</code></td><td></td></tr>
           <tr><td><code>{@link #AlphaAnimation_toAlpha app.guchagucharr.guchagucharunrecorder:toAlpha}</code></td><td></td></tr>
           </table>
           @see #AlphaAnimation_fromAlpha
           @see #AlphaAnimation_toAlpha
         */
        public static final int[] AlphaAnimation = {
            0x7f01031e, 0x7f01031f
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromAlpha}
          attribute's value can be found in the {@link #AlphaAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromAlpha
        */
        public static final int AlphaAnimation_fromAlpha = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toAlpha}
          attribute's value can be found in the {@link #AlphaAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toAlpha
        */
        public static final int AlphaAnimation_toAlpha = 1;
        /** Attributes that can be used with a AnalogClock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnalogClock_dial app.guchagucharr.guchagucharunrecorder:dial}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_hand_hour app.guchagucharr.guchagucharunrecorder:hand_hour}</code></td><td></td></tr>
           <tr><td><code>{@link #AnalogClock_hand_minute app.guchagucharr.guchagucharunrecorder:hand_minute}</code></td><td></td></tr>
           </table>
           @see #AnalogClock_dial
           @see #AnalogClock_hand_hour
           @see #AnalogClock_hand_minute
         */
        public static final int[] AnalogClock = {
            0x7f0101d4, 0x7f0101d5, 0x7f0101d6
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#dial}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:dial
        */
        public static final int AnalogClock_dial = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#hand_hour}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:hand_hour
        */
        public static final int AnalogClock_hand_hour = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#hand_minute}
          attribute's value can be found in the {@link #AnalogClock} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:hand_minute
        */
        public static final int AnalogClock_hand_minute = 2;
        /**  The <code>manifest</code> tag is the root of an
         <code>AndroidManifest.xml</code> file,
         describing the contents of an Android package (.apk) file.  One
         attribute must always be supplied: <code>package</code> gives a
         unique name for the package, using a Java-style naming convention
         to avoid name collisions.  For example, applications published
         by Google could have names of the form
         <code>com.google.app.<em>appname</em></code>
         
         <p>Inside of the manifest tag, may appear the following tags
         in any order: {@link #AndroidManifestPermission permission},
         {@link #AndroidManifestPermissionGroup permission-group},
         {@link #AndroidManifestPermissionTree permission-tree},
         {@link #AndroidManifestUsesSdk uses-sdk},
         {@link #AndroidManifestUsesPermission uses-permission},
         {@link #AndroidManifestUsesConfiguration uses-configuration},
         {@link #AndroidManifestApplication application},
         {@link #AndroidManifestInstrumentation instrumentation},
         {@link #AndroidManifestUsesFeature uses-feature}.  
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifest_installLocation app.guchagucharr.guchagucharunrecorder:installLocation}</code></td><td> The default install location defined by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifest_sharedUserId app.guchagucharr.guchagucharunrecorder:sharedUserId}</code></td><td> Specify the name of a user ID that will be shared between multiple
         packages.</td></tr>
           <tr><td><code>{@link #AndroidManifest_sharedUserLabel app.guchagucharr.guchagucharunrecorder:sharedUserLabel}</code></td><td> Specify a label for the shared user UID of this package.</td></tr>
           <tr><td><code>{@link #AndroidManifest_versionCode app.guchagucharr.guchagucharunrecorder:versionCode}</code></td><td> Internal version code.</td></tr>
           <tr><td><code>{@link #AndroidManifest_versionName app.guchagucharr.guchagucharunrecorder:versionName}</code></td><td> The text shown to the user to indicate the version they have.</td></tr>
           </table>
           @see #AndroidManifest_installLocation
           @see #AndroidManifest_sharedUserId
           @see #AndroidManifest_sharedUserLabel
           @see #AndroidManifest_versionCode
           @see #AndroidManifest_versionName
         */
        public static final int[] AndroidManifest = {
            0x7f010414, 0x7f010415, 0x7f010416, 0x7f010417,
            0x7f010440
        };
        /**
          <p>
          @attr description
           The default install location defined by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Let the system decide ideal install location </td></tr>
<tr><td><code>internalOnly</code></td><td>1</td><td> Explicitly request to be installed on internal phone storage
             only. </td></tr>
<tr><td><code>preferExternal</code></td><td>2</td><td> Prefer to be installed on SD card. There is no guarantee that
             the system will honor this request. The application might end
             up being installed on internal storage if external media
             is unavailable or too full. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:installLocation
        */
        public static final int AndroidManifest_installLocation = 4;
        /**
          <p>
          @attr description
           Specify the name of a user ID that will be shared between multiple
         packages.  By default, each package gets its own unique user-id.
         By setting this value on two or more packages, each of these packages
         will be given a single shared user ID, so they can for example run
         in the same process.  Note that for them to actually get the same
         user ID, they must also be signed with the same signature. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:sharedUserId
        */
        public static final int AndroidManifest_sharedUserId = 0;
        /**
          <p>
          @attr description
           Specify a label for the shared user UID of this package.  This is
         only used if you have also used android:sharedUserId.  This must
         be a reference to a string resource; it can not be an explicit
         string. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:sharedUserLabel
        */
        public static final int AndroidManifest_sharedUserLabel = 1;
        /**
          <p>
          @attr description
           Internal version code.  This is the number used to determine whether
         one version is more recent than another: it has no other meaning than
         that higher numbers are more recent.  You could use this number to
         encode a "x.y" in the lower and upper 16 bits, make it a build
         number, simply increase it by one each time a new version is
         released, or define it however else you want, as long as each
         successive version has a higher number.  This is not a version
         number generally shown to the user, that is usually supplied 
         with {@link android.R.attr#versionName}. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:versionCode
        */
        public static final int AndroidManifest_versionCode = 2;
        /**
          <p>
          @attr description
           The text shown to the user to indicate the version they have.  This
         is used for no other purpose than display to the user; the actual
         significant version number is given by {@link android.R.attr#versionCode}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:versionName
        */
        public static final int AndroidManifest_versionName = 3;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>action</code> tag, a child of the
         {@link #AndroidManifestIntentFilter intent-filter} tag.
         See {@link android.content.IntentFilter#addAction} for
         more information. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestAction_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> The name of an action that is handled, using the Java-style
             naming convention.</td></tr>
           </table>
           @see #AndroidManifestAction_name
         */
        public static final int[] AndroidManifestAction = {
            0x7f01040b
        };
        /**
          <p>
          @attr description
           The name of an action that is handled, using the Java-style
             naming convention.  For example, to support
             {@link android.content.Intent#ACTION_VIEW Intent.ACTION_VIEW}
             you would put <code>android.intent.action.VIEW</code> here.
             Custom actions should generally use a prefix matching the
             package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestAction_name = 0;
        /**  The <code>activity</code> tag declares an
         {@link android.app.Activity} class that is available
         as part of the package's application components, implementing
         a part of the application's user interface.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of an activity, to specify the Intents
         that it can handle.  If none are specified, the activity can
         only be started through direct specification of its class name.
         The activity tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestActivity_allowTaskReparenting app.guchagucharr.guchagucharunrecorder:allowTaskReparenting}</code></td><td> Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_alwaysRetainTaskState app.guchagucharr.guchagucharunrecorder:alwaysRetainTaskState}</code></td><td> Specify whether an acitivty's task state should always be maintained
         by the system, or if it is allowed to reset the task to its initial
         state in certain situations.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_clearTaskOnLaunch app.guchagucharr.guchagucharunrecorder:clearTaskOnLaunch}</code></td><td> Specify whether an activity's task should be cleared when it
         is re-launched from the home screen.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_configChanges app.guchagucharr.guchagucharunrecorder:configChanges}</code></td><td> Specify one or more configuration changes that the activity will
         handle itself.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specify whether the activity is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_excludeFromRecents app.guchagucharr.guchagucharunrecorder:excludeFromRecents}</code></td><td> Indicates that an Activity should be excluded from the list of
         recently launched activities.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_exported app.guchagucharr.guchagucharunrecorder:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_finishOnCloseSystemDialogs app.guchagucharr.guchagucharunrecorder:finishOnCloseSystemDialogs}</code></td><td> Specify whether an activity should be finished when a "close system
         windows" request has been made.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_finishOnTaskLaunch app.guchagucharr.guchagucharunrecorder:finishOnTaskLaunch}</code></td><td> Specify whether an activity should be finished when its task is
         brought to the foreground by relaunching from the home screen.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_hardwareAccelerated app.guchagucharr.guchagucharunrecorder:hardwareAccelerated}</code></td><td> <p>Flag indicating whether the application's rendering should be hardware
         accelerated if possible.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_immersive app.guchagucharr.guchagucharunrecorder:immersive}</code></td><td> Flag declaring this activity to be 'immersive'; immersive activities
         should not be interrupted with other activities or notifications.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_launchMode app.guchagucharr.guchagucharunrecorder:launchMode}</code></td><td> Specify how an activity should be launched.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_multiprocess app.guchagucharr.guchagucharunrecorder:multiprocess}</code></td><td> Specify whether a component is allowed to have multiple instances
         of itself running in different processes.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_noHistory app.guchagucharr.guchagucharunrecorder:noHistory}</code></td><td> Specify whether an activity should be kept in its history stack.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_parentActivityName app.guchagucharr.guchagucharunrecorder:parentActivityName}</code></td><td> The name of the logical parent of the activity as it appears in the manifest.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_primaryUserOnly app.guchagucharr.guchagucharunrecorder:primaryUserOnly}</code></td><td> @hide This broacast receiver will only receive broadcasts for the
             primary user.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_process app.guchagucharr.guchagucharunrecorder:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_screenOrientation app.guchagucharr.guchagucharunrecorder:screenOrientation}</code></td><td> Specify the orientation an activity should be run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_showOnLockScreen app.guchagucharr.guchagucharunrecorder:showOnLockScreen}</code></td><td> Specify that an Activity should be shown over the lock screen and,
         in a multiuser environment, across all users' windows </td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_singleUser app.guchagucharr.guchagucharunrecorder:singleUser}</code></td><td> If set to true, a single instance of this component will run for
         all users.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_stateNotNeeded app.guchagucharr.guchagucharunrecorder:stateNotNeeded}</code></td><td> Indicates that an Activity does not need to have its freeze state
         (as returned by {@link android.app.Activity#onSaveInstanceState}
         retained in order to be restarted.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_taskAffinity app.guchagucharr.guchagucharunrecorder:taskAffinity}</code></td><td> Specify a task name that activities have an "affinity" to.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_theme app.guchagucharr.guchagucharunrecorder:theme}</code></td><td> The overall theme to use for an activity.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_uiOptions app.guchagucharr.guchagucharunrecorder:uiOptions}</code></td><td> Extra options for an activity's UI.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivity_windowSoftInputMode app.guchagucharr.guchagucharunrecorder:windowSoftInputMode}</code></td><td> Specify the default soft-input mode for the main window of
             this activity.</td></tr>
           </table>
           @see #AndroidManifestActivity_allowTaskReparenting
           @see #AndroidManifestActivity_alwaysRetainTaskState
           @see #AndroidManifestActivity_clearTaskOnLaunch
           @see #AndroidManifestActivity_configChanges
           @see #AndroidManifestActivity_description
           @see #AndroidManifestActivity_enabled
           @see #AndroidManifestActivity_excludeFromRecents
           @see #AndroidManifestActivity_exported
           @see #AndroidManifestActivity_finishOnCloseSystemDialogs
           @see #AndroidManifestActivity_finishOnTaskLaunch
           @see #AndroidManifestActivity_hardwareAccelerated
           @see #AndroidManifestActivity_icon
           @see #AndroidManifestActivity_immersive
           @see #AndroidManifestActivity_label
           @see #AndroidManifestActivity_launchMode
           @see #AndroidManifestActivity_logo
           @see #AndroidManifestActivity_multiprocess
           @see #AndroidManifestActivity_name
           @see #AndroidManifestActivity_noHistory
           @see #AndroidManifestActivity_parentActivityName
           @see #AndroidManifestActivity_permission
           @see #AndroidManifestActivity_primaryUserOnly
           @see #AndroidManifestActivity_process
           @see #AndroidManifestActivity_screenOrientation
           @see #AndroidManifestActivity_showOnLockScreen
           @see #AndroidManifestActivity_singleUser
           @see #AndroidManifestActivity_stateNotNeeded
           @see #AndroidManifestActivity_taskAffinity
           @see #AndroidManifestActivity_theme
           @see #AndroidManifestActivity_uiOptions
           @see #AndroidManifestActivity_windowSoftInputMode
         */
        public static final int[] AndroidManifestActivity = {
            0x7f010077, 0x7f010250, 0x7f010403, 0x7f010404,
            0x7f010405, 0x7f010406, 0x7f01040b, 0x7f01040c,
            0x7f01041b, 0x7f01041c, 0x7f01041d, 0x7f01041e,
            0x7f01041f, 0x7f010420, 0x7f010421, 0x7f010422,
            0x7f010423, 0x7f010424, 0x7f010425, 0x7f010426,
            0x7f010427, 0x7f010428, 0x7f010429, 0x7f01042c,
            0x7f01042f, 0x7f010430, 0x7f010431, 0x7f010432,
            0x7f010441, 0x7f010442, 0x7f01045a
        };
        /**
          <p>
          @attr description
           Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.  Use with the
         application tag (to supply a default for all activities in the
         application), or with an activity tag (to supply a specific
         setting for that component).
    
         <p>Normally when an application is started, it is associated with
         the task of the activity that started it and stays there for its
         entire lifetime.  You can use the allowTaskReparenting feature to force an
         activity to be re-parented to a different task when the task it is
         in goes to the background.  Typically this is used to cause the
         activities of an application to move back to the main task associated
         with that application.  The activity is re-parented to the task
         with the same {@link android.R.attr#taskAffinity} as it has. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowTaskReparenting
        */
        public static final int AndroidManifestActivity_allowTaskReparenting = 13;
        /**
          <p>
          @attr description
           Specify whether an acitivty's task state should always be maintained
         by the system, or if it is allowed to reset the task to its initial
         state in certain situations.
         
         <p>Normally the system will reset a task (remove all activities from
         the stack and reset the root activity) in certain situations when
         the user re-selects that task from the home screen.  Typically this
         will be done if the user hasn't visited that task for a certain
         amount of time, such as 30 minutes.
         
         <p>By setting this attribute, the user will always return to your
         task in its last state, regardless of how they get there.  This is
         useful, for example, in an application like the web browser where there
         is a lot of state (such as multiple open tabs) that the application
         would not like to lose. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alwaysRetainTaskState
        */
        public static final int AndroidManifestActivity_alwaysRetainTaskState = 19;
        /**
          <p>
          @attr description
           Specify whether an activity's task should be cleared when it
         is re-launched from the home screen.  As a result, every time the
         user starts the task, they will be brought to its root activity,
         regardless of whether they used BACK or HOME to last leave it.
         This flag only applies to activities that
         are used to start the root of a new task.
         
         <p>An example of the use of this flag would be for the case where
         a user launches activity A from home, and from there goes to
         activity B.  They now press home, and then return to activity A.
         Normally they would see activity B, since that is what they were
         last doing in A's task.  However, if A has set this flag to true,
         then upon going to the background all of the tasks on top of it (B
         in this case) are removed, so when the user next returns to A they
         will restart at its original activity.
         
         <p>When this option is used in conjunction with
         {@link android.R.attr#allowTaskReparenting}, the allowTaskReparenting trumps the
         clear.  That is, all activities above the root activity of the
         task will be removed: those that have an affinity will be moved
         to the task they are associated with, otherwise they will simply
         be dropped as described here. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:clearTaskOnLaunch
        */
        public static final int AndroidManifestActivity_clearTaskOnLaunch = 17;
        /**
          <p>
          @attr description
           Specify one or more configuration changes that the activity will
         handle itself.  If not specified, the activity will be restarted
         if any of these configuration changes happen in the system.  Otherwise,
         the activity will remain running and its
         {@link android.app.Activity#onConfigurationChanged Activity.onConfigurationChanged}
         method called with the new configuration.
         
         <p>Note that all of these configuration changes can impact the
         resource values seen by the application, so you will generally need
         to re-retrieve all resources (including view layouts, drawables, etc)
         to correctly handle any configuration change.
         
         <p>These values must be kept in sync with those in
         {@link android.content.pm.ActivityInfo} and
         include/utils/ResourceTypes.h. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>mcc</code></td><td>0x0001</td><td> The IMSI MCC has changed, that is a SIM has been detected and
             updated the Mobile Country Code. </td></tr>
<tr><td><code>mnc</code></td><td>0x0002</td><td> The IMSI MNC has changed, that is a SIM has been detected and
             updated the Mobile Network Code. </td></tr>
<tr><td><code>locale</code></td><td>0x0004</td><td> The locale has changed, that is the user has selected a new
             language that text should be displayed in. </td></tr>
<tr><td><code>touchscreen</code></td><td>0x0008</td><td> The touchscreen has changed.  Should never normally happen. </td></tr>
<tr><td><code>keyboard</code></td><td>0x0010</td><td> The keyboard type has changed, for example the user has plugged
             in an external keyboard. </td></tr>
<tr><td><code>keyboardHidden</code></td><td>0x0020</td><td> The keyboard or navigation accessibility has changed, for example
             the user has slid the keyboard out to expose it.  Note that
             despite its name, this applied to any accessibility: keyboard
             or navigation. </td></tr>
<tr><td><code>navigation</code></td><td>0x0040</td><td> The navigation type has changed.  Should never normally happen. </td></tr>
<tr><td><code>orientation</code></td><td>0x0080</td><td> The screen orientation has changed, that is the user has
             rotated the device. </td></tr>
<tr><td><code>screenLayout</code></td><td>0x0100</td><td> The screen layout has changed.  This might be caused by a
             different display being activated. </td></tr>
<tr><td><code>uiMode</code></td><td>0x0200</td><td> The global user interface mode has changed.  For example,
             going in or out of car mode, night mode changing, etc. </td></tr>
<tr><td><code>screenSize</code></td><td>0x0400</td><td> The current available screen size has changed.  If applications don't
             target at least {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2}
             then the activity will always handle this itself (the change
             will not result in a restart).  This represents a change in the
             currently available size, so will change when the user switches
             between landscape and portrait. </td></tr>
<tr><td><code>smallestScreenSize</code></td><td>0x0800</td><td> The physical screen size has changed.  If applications don't
             target at least {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2}
             then the activity will always handle this itself (the change
             will not result in a restart).  This represents a change in size
             regardless of orientation, so will only change when the actual
             physical screen size has changed such as switching to an external
             display. </td></tr>
<tr><td><code>layoutDirection</code></td><td>0x2000</td><td> The layout direction has changed. For example going from LTR to RTL. </td></tr>
<tr><td><code>fontScale</code></td><td>0x40000000</td><td> The font scaling factor has changed, that is the user has
             selected a new global font size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:configChanges
        */
        public static final int AndroidManifestActivity_configChanges = 26;
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestActivity_description = 27;
        /**
          <p>
          @attr description
           Specify whether the activity is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int AndroidManifestActivity_enabled = 1;
        /**
          <p>
          @attr description
           Indicates that an Activity should be excluded from the list of
         recently launched activities. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:excludeFromRecents
        */
        public static final int AndroidManifestActivity_excludeFromRecents = 21;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:exported
        */
        public static final int AndroidManifestActivity_exported = 9;
        /**
          <p>
          @attr description
           Specify whether an activity should be finished when a "close system
         windows" request has been made.  This happens, for example, when
         the home key is pressed, when the device is locked, when a system
         dialog showing recent applications is displayed, etc. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:finishOnCloseSystemDialogs
        */
        public static final int AndroidManifestActivity_finishOnCloseSystemDialogs = 16;
        /**
          <p>
          @attr description
           Specify whether an activity should be finished when its task is
         brought to the foreground by relaunching from the home screen.
         
         <p>If both this option and {@link android.R.attr#allowTaskReparenting} are
         specified, the finish trumps the affinity: the affinity will be
         ignored and the activity simply finished. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:finishOnTaskLaunch
        */
        public static final int AndroidManifestActivity_finishOnTaskLaunch = 15;
        /**
          <p>
          @attr description
           <p>Flag indicating whether the application's rendering should be hardware
         accelerated if possible. This flag is turned on by default for applications
         that are targeting {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}
         or later.</p>
         <p>This flag can be set on the application and any activity declared
         in the manifest. When enabled for the application, each activity is
         automatically assumed to be hardware accelerated. This flag can be
         overridden in the activity tags, either turning it off (if on for the
         application) or on (if off for the application.)</p>
         <p>When this flag is turned on for an activity (either directly or via
         the application tag), every window created from the activity, including
         the activity's own window, will be hardware accelerated, if possible.</p>
         <p>Please refer to the documentation of
         {@link android.view.WindowManager.LayoutParams#FLAG_HARDWARE_ACCELERATED}
         for more information on how to control this flag programmatically.</p> 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hardwareAccelerated
        */
        public static final int AndroidManifestActivity_hardwareAccelerated = 8;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestActivity_icon = 4;
        /**
          <p>
          @attr description
           Flag declaring this activity to be 'immersive'; immersive activities
         should not be interrupted with other activities or notifications. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:immersive
        */
        public static final int AndroidManifestActivity_immersive = 23;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestActivity_label = 3;
        /**
          <p>
          @attr description
           Specify how an activity should be launched.  See the
         <a href="{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
         Stack</a> document for important information on how these options impact
         the behavior of your application.
         
         <p>If this attribute is not specified, <code>standard</code> launch
         mode will be used.  Note that the particular launch behavior can
         be changed in some ways at runtime through the
         {@link android.content.Intent} flags
         {@link android.content.Intent#FLAG_ACTIVITY_SINGLE_TOP},
         {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK}, and
         {@link android.content.Intent#FLAG_ACTIVITY_MULTIPLE_TASK}. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>standard</code></td><td>0</td><td> The default mode, which will usually create a new instance of
             the activity when it is started, though this behavior may change
             with the introduction of other options such as
             {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK
             Intent.FLAG_ACTIVITY_NEW_TASK}. </td></tr>
<tr><td><code>singleTop</code></td><td>1</td><td> If, when starting the activity, there is already an
            instance of the same activity class in the foreground that is
            interacting with the user, then
            re-use that instance.  This existing instance will receive a call to
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()} with
            the new Intent that is being started. </td></tr>
<tr><td><code>singleTask</code></td><td>2</td><td> If, when starting the activity, there is already a task running
            that starts with this activity, then instead of starting a new
            instance the current task is brought to the front.  The existing
            instance will receive a call to {@link android.app.Activity#onNewIntent
            Activity.onNewIntent()}
            with the new Intent that is being started, and with the
            {@link android.content.Intent#FLAG_ACTIVITY_BROUGHT_TO_FRONT
            Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT} flag set.  This is a superset
            of the singleTop mode, where if there is already an instance
            of the activity being started at the top of the stack, it will
            receive the Intent as described there (without the
            FLAG_ACTIVITY_BROUGHT_TO_FRONT flag set).  See the
            <a href="{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
            Stack</a> document for more details about tasks.</td></tr>
<tr><td><code>singleInstance</code></td><td>3</td><td> Only allow one instance of this activity to ever be 
            running.  This activity gets a unique task with only itself running 
            in it; if it is ever launched again with the same Intent, then that 
            task will be brought forward and its 
            {@link android.app.Activity#onNewIntent Activity.onNewIntent()}
            method called.  If this 
            activity tries to start a new activity, that new activity will be 
            launched in a separate task.  See the
            <a href="{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back
            Stack</a> document for more details about tasks.</td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:launchMode
        */
        public static final int AndroidManifestActivity_launchMode = 24;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestActivity_logo = 5;
        /**
          <p>
          @attr description
           Specify whether a component is allowed to have multiple instances
         of itself running in different processes.  Use with the activity
         and provider tags.
    
         <p>Normally the system will ensure that all instances of a particular
         component are only running in a single process.  You can use this
         attribute to disable that behavior, allowing the system to create
         instances wherever they are used (provided permissions allow it).
         This is most often used with content providers, so that instances
         of a provider can be created in each client process, allowing them
         to be used without performing IPC.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:multiprocess
        */
        public static final int AndroidManifestActivity_multiprocess = 14;
        /**
          <p>
          @attr description
           Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyActivity); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestActivity_name = 6;
        /**
          <p>
          @attr description
           Specify whether an activity should be kept in its history stack.
         If this attribute is set, then as soon as the user navigates away
         from the activity it will be finished and they will no longer be
         able to return to it. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:noHistory
        */
        public static final int AndroidManifestActivity_noHistory = 18;
        /**
          <p>
          @attr description
           The name of the logical parent of the activity as it appears in the manifest. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:parentActivityName
        */
        public static final int AndroidManifestActivity_parentActivityName = 29;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestActivity_permission = 7;
        /**
          <p>
          @attr description
           @hide This broacast receiver will only receive broadcasts for the
             primary user.  Can only be used with receivers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:primaryUserOnly
        */
        public static final int AndroidManifestActivity_primaryUserOnly = 30;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:process
        */
        public static final int AndroidManifestActivity_process = 11;
        /**
          <p>
          @attr description
           Specify the orientation an activity should be run in.  If not
         specified, it will run in the current preferred orientation
         of the screen. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unspecified</code></td><td>-1</td><td> No preference specified: let the system decide the best
             orientation.  This will either be the orientation selected
             by the activity below, or the user's preferred orientation
             if this activity is the bottom of a task. If the user
             explicitly turned off sensor based orientation through settings
             sensor based device rotation will be ignored. If not by default
             sensor based orientation will be taken into account and the 
             orientation will changed based on how the user rotates the device </td></tr>
<tr><td><code>landscape</code></td><td>0</td><td> Would like to have the screen in a landscape orientation: that
             is, with the display wider than it is tall, ignoring sensor data. </td></tr>
<tr><td><code>portrait</code></td><td>1</td><td> Would like to have the screen in a portrait orientation: that
             is, with the display taller than it is wide, ignoring sensor data. </td></tr>
<tr><td><code>user</code></td><td>2</td><td> Use the user's current preferred orientation of the handset. </td></tr>
<tr><td><code>behind</code></td><td>3</td><td> Keep the screen in the same orientation as whatever is behind
             this activity. </td></tr>
<tr><td><code>sensor</code></td><td>4</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device. </td></tr>
<tr><td><code>nosensor</code></td><td>5</td><td> Always ignore orientation determined by orientation sensor:
             the display will not rotate when the user moves the device. </td></tr>
<tr><td><code>sensorLandscape</code></td><td>6</td><td> Would like to have the screen in landscape orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>sensorPortrait</code></td><td>7</td><td> Would like to have the screen in portrait orientation, but can
             use the sensor to change which direction the screen is facing. </td></tr>
<tr><td><code>reverseLandscape</code></td><td>8</td><td> Would like to have the screen in landscape orientation, turned in
             the opposite direction from normal landscape. </td></tr>
<tr><td><code>reversePortrait</code></td><td>9</td><td> Would like to have the screen in portrait orientation, turned in
             the opposite direction from normal portrait. </td></tr>
<tr><td><code>fullSensor</code></td><td>10</td><td> Orientation is determined by a physical orientation sensor:
             the display will rotate based on how the user moves the device.
             This allows any of the 4 possible rotations, regardless of what
             the device will normally do (for example some devices won't
             normally use 180 degree rotation). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:screenOrientation
        */
        public static final int AndroidManifestActivity_screenOrientation = 25;
        /**
          <p>
          @attr description
           Specify that an Activity should be shown over the lock screen and,
         in a multiuser environment, across all users' windows 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:showOnLockScreen
        */
        public static final int AndroidManifestActivity_showOnLockScreen = 22;
        /**
          <p>
          @attr description
           If set to true, a single instance of this component will run for
         all users.  That instance will run as user 0, the default/primary
         user.  When the app running is in processes for other users and interacts
         with this component (by binding to a service for example) those processes will
         always interact with the instance running for user 0.  Enabling
         single user mode forces "exported" of the component to be false, to
         help avoid introducing multi-user security bugs.  This feature is only
         available to applications built in to the system image; you must hold the
         permission INTERACT_ACROSS_USERS in order
         to use this feature.  This flag can only be used with services,
         receivers, and providers; it can not be used with activities. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:singleUser
        */
        public static final int AndroidManifestActivity_singleUser = 10;
        /**
          <p>
          @attr description
           Indicates that an Activity does not need to have its freeze state
         (as returned by {@link android.app.Activity#onSaveInstanceState}
         retained in order to be restarted.  Generally you use this for activities
         that do not store any state.  When this flag is set, if for some reason
         the activity is killed before it has a chance to save its state,
         then the system will not remove it from the activity stack like
         it normally would.  Instead, the next time the user navigates to
         it its {@link android.app.Activity#onCreate} method will be called
         with a null icicle, just like it was starting for the first time.
         
         <p>This is used by the Home activity to make sure it does not get
         removed if it crashes for some reason. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stateNotNeeded
        */
        public static final int AndroidManifestActivity_stateNotNeeded = 20;
        /**
          <p>
          @attr description
           Specify a task name that activities have an "affinity" to.
         Use with the application tag (to supply a default affinity for all
         activities in the application), or with the activity tag (to supply
         a specific affinity for that component).
    
         <p>The default value for this attribute is the same as the package
         name, indicating that all activities in the manifest should generally
         be considered a single "application" to the user.  You can use this
         attribute to modify that behavior: either giving them an affinity
         for another task, if the activities are intended to be part of that
         task from the user's perspective, or using an empty string for
         activities that have no affinity to a task. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskAffinity
        */
        public static final int AndroidManifestActivity_taskAffinity = 12;
        /**
          <p>
          @attr description
           The overall theme to use for an activity.  Use with either the
         application tag (to supply a default theme for all activities) or
         the activity tag (to supply a specific theme for that activity).
    
         <p>This automatically sets
         your activity's Context to use this theme, and may also be used
         for "starting" animations prior to the activity being launched (to
         better match what the activity actually looks like).  It is a reference
         to a style resource defining the theme.  If not set, the default
         system theme will be used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:theme
        */
        public static final int AndroidManifestActivity_theme = 2;
        /**
          <p>
          @attr description
           Extra options for an activity's UI. Applies to either the {@code &lt;activity&gt;} or
         {@code &lt;application&gt;} tag. If specified on the {@code &lt;application&gt;}
         tag these will be considered defaults for all activities in the
         application. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No extra UI options. This is the default. </td></tr>
<tr><td><code>splitActionBarWhenNarrow</code></td><td>1</td><td> Split the options menu into a separate bar at the bottom of
             the screen when severely constrained for horizontal space.
             (e.g. portrait mode on a phone.) Instead of a small number
             of action buttons appearing in the action bar at the top
             of the screen, the action bar will split into the top navigation
             section and the bottom menu section. Menu items will not be
             split across the two bars; they will always appear together. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:uiOptions
        */
        public static final int AndroidManifestActivity_uiOptions = 28;
        /**
          <p>
          @attr description
           Specify the default soft-input mode for the main window of
             this activity.  A value besides "unspecified" here overrides
             any value in the theme. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
<tr><td><code>adjustNothing</code></td><td>0x30</td><td> Don't resize <em>or</em> pan the window to make room for the
                 soft input area; the window is never adjusted for it. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowSoftInputMode
        */
        public static final int AndroidManifestActivity_windowSoftInputMode = 0;
        /**  The <code>activity-alias</code> tag declares a new
         name for an existing {@link #AndroidManifestActivity activity}
         tag.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of an activity-alias, to specify the Intents
         that it can handle.  If none are specified, the activity can
         only be started through direct specification of its class name.
         The activity-alias tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specify whether the activity-alias is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_exported app.guchagucharr.guchagucharunrecorder:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_parentActivityName app.guchagucharr.guchagucharunrecorder:parentActivityName}</code></td><td> The name of the logical parent of the activity as it appears in the manifest.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestActivityAlias_targetActivity app.guchagucharr.guchagucharunrecorder:targetActivity}</code></td><td> The name of the activity this alias should launch.</td></tr>
           </table>
           @see #AndroidManifestActivityAlias_description
           @see #AndroidManifestActivityAlias_enabled
           @see #AndroidManifestActivityAlias_exported
           @see #AndroidManifestActivityAlias_icon
           @see #AndroidManifestActivityAlias_label
           @see #AndroidManifestActivityAlias_logo
           @see #AndroidManifestActivityAlias_name
           @see #AndroidManifestActivityAlias_parentActivityName
           @see #AndroidManifestActivityAlias_permission
           @see #AndroidManifestActivityAlias_targetActivity
         */
        public static final int[] AndroidManifestActivityAlias = {
            0x7f010250, 0x7f010404, 0x7f010405, 0x7f010406,
            0x7f01040b, 0x7f01040c, 0x7f01041c, 0x7f010432,
            0x7f010442, 0x7f01045b
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestActivityAlias_description = 7;
        /**
          <p>
          @attr description
           Specify whether the activity-alias is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int AndroidManifestActivityAlias_enabled = 0;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:exported
        */
        public static final int AndroidManifestActivityAlias_exported = 6;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestActivityAlias_icon = 2;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestActivityAlias_label = 1;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestActivityAlias_logo = 3;
        /**
          <p>
          @attr description
           Required name of the class implementing the activity, deriving from
            {@link android.app.Activity}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyActivity); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestActivityAlias_name = 4;
        /**
          <p>
          @attr description
           The name of the logical parent of the activity as it appears in the manifest. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:parentActivityName
        */
        public static final int AndroidManifestActivityAlias_parentActivityName = 8;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestActivityAlias_permission = 5;
        /**
          <p>
          @attr description
           The name of the activity this alias should launch.  The activity
             must be in the same manifest as the alias, and have been defined
             in that manifest before the alias here.  This must use a Java-style
             naming convention to ensure the name is unique, for example
             "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetActivity
        */
        public static final int AndroidManifestActivityAlias_targetActivity = 9;
        /**  The <code>application</code> tag describes application-level components
         contained in the package, as well as general application
         attributes.  Many of the attributes you can supply here (such
         as theme, label, icon, permission, process, taskAffinity,
         and allowTaskReparenting) serve
         as default values for the corresponding attributes of components
         declared inside of the application.
         
         <p>Inside of this element you specify what the application contains,
         using the elements {@link #AndroidManifestProvider provider},
         {@link #AndroidManifestService service},
         {@link #AndroidManifestReceiver receiver},
         {@link #AndroidManifestActivity activity},
         {@link #AndroidManifestActivityAlias activity-alias}, and
         {@link #AndroidManifestUsesLibrary uses-library}.  The application tag
         appears as a child of the root {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestApplication_allowBackup app.guchagucharr.guchagucharunrecorder:allowBackup}</code></td><td> Whether to allow the application to participate in the backup
         and restore infrastructure.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_allowClearUserData app.guchagucharr.guchagucharunrecorder:allowClearUserData}</code></td><td> Option to let applications specify that user data can/cannot be 
         cleared.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_allowTaskReparenting app.guchagucharr.guchagucharunrecorder:allowTaskReparenting}</code></td><td> Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_backupAgent app.guchagucharr.guchagucharunrecorder:backupAgent}</code></td><td> The name of the class subclassing <code>BackupAgent</code> to manage
         backup and restore of the application's data on external storage.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_cantSaveState app.guchagucharr.guchagucharunrecorder:cantSaveState}</code></td><td> Declare that this application can't participate in the normal
             state save/restore mechanism.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_debuggable app.guchagucharr.guchagucharunrecorder:debuggable}</code></td><td> Flag indicating whether the application can be debugged, even when
         running on a device that is running in user mode.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specify whether the components in this application are enabled or not (that is, can be
             instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_hardwareAccelerated app.guchagucharr.guchagucharunrecorder:hardwareAccelerated}</code></td><td> <p>Flag indicating whether the application's rendering should be hardware
         accelerated if possible.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_hasCode app.guchagucharr.guchagucharunrecorder:hasCode}</code></td><td> Indicate whether this application contains code.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_killAfterRestore app.guchagucharr.guchagucharunrecorder:killAfterRestore}</code></td><td> Whether the application in question should be terminated after its
         settings have been restored during a full-system restore operation.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_largeHeap app.guchagucharr.guchagucharunrecorder:largeHeap}</code></td><td> Request that your application's processes be created with
             a large Dalvik heap.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_manageSpaceActivity app.guchagucharr.guchagucharunrecorder:manageSpaceActivity}</code></td><td> Name of activity to be launched for managing the application's space on the device.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> An optional name of a class implementing the overall
             {@link android.app.Application} for this package.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_neverEncrypt app.guchagucharr.guchagucharunrecorder:neverEncrypt}</code></td><td> Option to let applications specify that user data should
         never be encrypted if an Encrypted File System solution
         is enabled.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_persistent app.guchagucharr.guchagucharunrecorder:persistent}</code></td><td> Flag to control special persistent mode of an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_process app.guchagucharr.guchagucharunrecorder:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_restoreAnyVersion app.guchagucharr.guchagucharunrecorder:restoreAnyVersion}</code></td><td> Indicate that the application is prepared to attempt a restore of any
         backed-up dataset, even if the backup is apparently from a newer version
         of the application than is currently installed on the device.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_restoreNeedsApplication app.guchagucharr.guchagucharunrecorder:restoreNeedsApplication}</code></td><td> @deprecated This attribute is not used by the Android operating system.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_supportsRtl app.guchagucharr.guchagucharunrecorder:supportsRtl}</code></td><td> Declare that your application will be able to deal with RTL (right to left) layouts.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_taskAffinity app.guchagucharr.guchagucharunrecorder:taskAffinity}</code></td><td> Specify a task name that activities have an "affinity" to.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_testOnly app.guchagucharr.guchagucharunrecorder:testOnly}</code></td><td> Option to indicate this application is only for testing purposes.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_theme app.guchagucharr.guchagucharunrecorder:theme}</code></td><td> The overall theme to use for an activity.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_uiOptions app.guchagucharr.guchagucharunrecorder:uiOptions}</code></td><td> Extra options for an activity's UI.</td></tr>
           <tr><td><code>{@link #AndroidManifestApplication_vmSafeMode app.guchagucharr.guchagucharunrecorder:vmSafeMode}</code></td><td> Flag indicating whether the application requests the VM to operate in
         the safe mode.</td></tr>
           </table>
           @see #AndroidManifestApplication_allowBackup
           @see #AndroidManifestApplication_allowClearUserData
           @see #AndroidManifestApplication_allowTaskReparenting
           @see #AndroidManifestApplication_backupAgent
           @see #AndroidManifestApplication_cantSaveState
           @see #AndroidManifestApplication_debuggable
           @see #AndroidManifestApplication_description
           @see #AndroidManifestApplication_enabled
           @see #AndroidManifestApplication_hardwareAccelerated
           @see #AndroidManifestApplication_hasCode
           @see #AndroidManifestApplication_icon
           @see #AndroidManifestApplication_killAfterRestore
           @see #AndroidManifestApplication_label
           @see #AndroidManifestApplication_largeHeap
           @see #AndroidManifestApplication_logo
           @see #AndroidManifestApplication_manageSpaceActivity
           @see #AndroidManifestApplication_name
           @see #AndroidManifestApplication_neverEncrypt
           @see #AndroidManifestApplication_permission
           @see #AndroidManifestApplication_persistent
           @see #AndroidManifestApplication_process
           @see #AndroidManifestApplication_restoreAnyVersion
           @see #AndroidManifestApplication_restoreNeedsApplication
           @see #AndroidManifestApplication_supportsRtl
           @see #AndroidManifestApplication_taskAffinity
           @see #AndroidManifestApplication_testOnly
           @see #AndroidManifestApplication_theme
           @see #AndroidManifestApplication_uiOptions
           @see #AndroidManifestApplication_vmSafeMode
         */
        public static final int[] AndroidManifestApplication = {
            0x7f010250, 0x7f010403, 0x7f010404, 0x7f010405,
            0x7f010406, 0x7f010407, 0x7f010408, 0x7f010409,
            0x7f01040a, 0x7f01040b, 0x7f01040c, 0x7f010418,
            0x7f010419, 0x7f01041a, 0x7f01041b, 0x7f01041e,
            0x7f01041f, 0x7f010420, 0x7f010432, 0x7f01043b,
            0x7f01043c, 0x7f01043d, 0x7f01043e, 0x7f01043f,
            0x7f010441, 0x7f010443, 0x7f010444, 0x7f010445,
            0x7f010446
        };
        /**
          <p>
          @attr description
           Whether to allow the application to participate in the backup
         and restore infrastructure.  If this attribute is set to <code>false</code>,
         no backup or restore of the application will ever be performed, even by a
         full-system backup that would otherwise cause all application data to be saved
         via adb.  The default value of this attribute is <code>true</code>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowBackup
        */
        public static final int AndroidManifestApplication_allowBackup = 20;
        /**
          <p>
          @attr description
           Option to let applications specify that user data can/cannot be 
         cleared. This flag is turned on by default.
         <em>This attribute is usable only by applications
         included in the system image. Third-party apps cannot use it.</em> 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowClearUserData
        */
        public static final int AndroidManifestApplication_allowClearUserData = 6;
        /**
          <p>
          @attr description
           Specify that an activity can be moved out of a task it is in to
         the task it has an affinity for when appropriate.  Use with the
         application tag (to supply a default for all activities in the
         application), or with an activity tag (to supply a specific
         setting for that component).
    
         <p>Normally when an application is started, it is associated with
         the task of the activity that started it and stays there for its
         entire lifetime.  You can use the allowTaskReparenting feature to force an
         activity to be re-parented to a different task when the task it is
         in goes to the background.  Typically this is used to cause the
         activities of an application to move back to the main task associated
         with that application.  The activity is re-parented to the task
         with the same {@link android.R.attr#taskAffinity} as it has. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowTaskReparenting
        */
        public static final int AndroidManifestApplication_allowTaskReparenting = 17;
        /**
          <p>
          @attr description
           The name of the class subclassing <code>BackupAgent</code> to manage
         backup and restore of the application's data on external storage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backupAgent
        */
        public static final int AndroidManifestApplication_backupAgent = 19;
        /**
          <p>
          @attr description
           Declare that this application can't participate in the normal
             state save/restore mechanism.  Since it is not able to save and
             restore its state on demand,
             it can not participate in the normal activity lifecycle.  It will
             not be killed while in the background; the user must explicitly
             quit it.  Only one such app can be running at a time; if the user
             tries to launch a second such app, they will be prompted
             to quit the first before doing so.  While the
             application is running, the user will be informed of this.
             @hide 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:cantSaveState
        */
        public static final int AndroidManifestApplication_cantSaveState = 27;
        /**
          <p>
          @attr description
           Flag indicating whether the application can be debugged, even when
         running on a device that is running in user mode. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:debuggable
        */
        public static final int AndroidManifestApplication_debuggable = 12;
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestApplication_description = 18;
        /**
          <p>
          @attr description
           Specify whether the components in this application are enabled or not (that is, can be
             instantiated by the system).
             If "false", it overrides any component specific values (a value of "true" will not
             override the component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int AndroidManifestApplication_enabled = 0;
        /**
          <p>
          @attr description
           <p>Flag indicating whether the application's rendering should be hardware
         accelerated if possible. This flag is turned on by default for applications
         that are targeting {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}
         or later.</p>
         <p>This flag can be set on the application and any activity declared
         in the manifest. When enabled for the application, each activity is
         automatically assumed to be hardware accelerated. This flag can be
         overridden in the activity tags, either turning it off (if on for the
         application) or on (if off for the application.)</p>
         <p>When this flag is turned on for an activity (either directly or via
         the application tag), every window created from the activity, including
         the activity's own window, will be hardware accelerated, if possible.</p>
         <p>Please refer to the documentation of
         {@link android.view.WindowManager.LayoutParams#FLAG_HARDWARE_ACCELERATED}
         for more information on how to control this flag programmatically.</p> 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hardwareAccelerated
        */
        public static final int AndroidManifestApplication_hardwareAccelerated = 14;
        /**
          <p>
          @attr description
           Indicate whether this application contains code.  If set to false,
             there is no code associated with it and thus the system will not
             try to load its code when launching components.  The default is true
             for normal behavior. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hasCode
        */
        public static final int AndroidManifestApplication_hasCode = 25;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestApplication_icon = 3;
        /**
          <p>
          @attr description
           Whether the application in question should be terminated after its
         settings have been restored during a full-system restore operation.
         Single-package restore operations will never cause the application to
         be shut down.  Full-system restore operations typically only occur once,
         when the phone is first set up.  Third-party applications will not usually
         need to use this attribute.

         <p>The default is <code>true</code>, which means that after the application
         has finished processing its data during a full-system restore, it will be
         terminated. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:killAfterRestore
        */
        public static final int AndroidManifestApplication_killAfterRestore = 21;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestApplication_label = 2;
        /**
          <p>
          @attr description
           Request that your application's processes be created with
             a large Dalvik heap.  This applies to <em>all</em> processes
             created for the application.  It only applies to the first
             application loaded into a process; if using a sharedUserId
             to allow multiple applications to use a process, they all must
             use this option consistently or will get unpredictable results. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:largeHeap
        */
        public static final int AndroidManifestApplication_largeHeap = 26;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestApplication_logo = 4;
        /**
          <p>
          @attr description
           Name of activity to be launched for managing the application's space on the device. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:manageSpaceActivity
        */
        public static final int AndroidManifestApplication_manageSpaceActivity = 5;
        /**
          <p>
          @attr description
           An optional name of a class implementing the overall
             {@link android.app.Application} for this package.  When the
             process for your package is started, this class is instantiated
             before any of the other application components.  Note that this
             is not required, and in fact most applications will probably
             not need it. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestApplication_name = 9;
        /**
          <p>
          @attr description
           Option to let applications specify that user data should
         never be encrypted if an Encrypted File System solution
         is enabled. Specifically, this is an "opt-out" feature, meaning
         that, by default, user data will be encrypted if the EFS feature
         is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:neverEncrypt
        */
        public static final int AndroidManifestApplication_neverEncrypt = 7;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestApplication_permission = 10;
        /**
          <p>
          @attr description
           Flag to control special persistent mode of an application.  This should
         not normally be used by applications; it requires that the system keep
         your application running at all times. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:persistent
        */
        public static final int AndroidManifestApplication_persistent = 11;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:process
        */
        public static final int AndroidManifestApplication_process = 15;
        /**
          <p>
          @attr description
           Indicate that the application is prepared to attempt a restore of any
         backed-up dataset, even if the backup is apparently from a newer version
         of the application than is currently installed on the device.  Setting
         this attribute to <code>true</code> will permit the Backup Manager to
         attempt restore even when a version mismatch suggests that the data are
         incompatible.  <em>Use with caution!</em>

         <p>The default value of this attribute is <code>false</code>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:restoreAnyVersion
        */
        public static final int AndroidManifestApplication_restoreAnyVersion = 23;
        /**
          <p>
          @attr description
           @deprecated This attribute is not used by the Android operating system. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:restoreNeedsApplication
        */
        @Deprecated
        public static final int AndroidManifestApplication_restoreNeedsApplication = 22;
        /**
          <p>
          @attr description
           Declare that your application will be able to deal with RTL (right to left) layouts.
             If set to  false (default value), your application will not care about RTL layouts. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:supportsRtl
        */
        public static final int AndroidManifestApplication_supportsRtl = 28;
        /**
          <p>
          @attr description
           Specify a task name that activities have an "affinity" to.
         Use with the application tag (to supply a default affinity for all
         activities in the application), or with the activity tag (to supply
         a specific affinity for that component).
    
         <p>The default value for this attribute is the same as the package
         name, indicating that all activities in the manifest should generally
         be considered a single "application" to the user.  You can use this
         attribute to modify that behavior: either giving them an affinity
         for another task, if the activities are intended to be part of that
         task from the user's perspective, or using an empty string for
         activities that have no affinity to a task. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskAffinity
        */
        public static final int AndroidManifestApplication_taskAffinity = 16;
        /**
          <p>
          @attr description
           Option to indicate this application is only for testing purposes.
         For example, it may expose functionality or data outside of itself
         that would cause a security hole, but is useful for testing.  This
         kind of application can not be installed without the
         INSTALL_ALLOW_TEST flag, which means only through adb install.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:testOnly
        */
        public static final int AndroidManifestApplication_testOnly = 8;
        /**
          <p>
          @attr description
           The overall theme to use for an activity.  Use with either the
         application tag (to supply a default theme for all activities) or
         the activity tag (to supply a specific theme for that activity).
    
         <p>This automatically sets
         your activity's Context to use this theme, and may also be used
         for "starting" animations prior to the activity being launched (to
         better match what the activity actually looks like).  It is a reference
         to a style resource defining the theme.  If not set, the default
         system theme will be used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:theme
        */
        public static final int AndroidManifestApplication_theme = 1;
        /**
          <p>
          @attr description
           Extra options for an activity's UI. Applies to either the {@code &lt;activity&gt;} or
         {@code &lt;application&gt;} tag. If specified on the {@code &lt;application&gt;}
         tag these will be considered defaults for all activities in the
         application. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No extra UI options. This is the default. </td></tr>
<tr><td><code>splitActionBarWhenNarrow</code></td><td>1</td><td> Split the options menu into a separate bar at the bottom of
             the screen when severely constrained for horizontal space.
             (e.g. portrait mode on a phone.) Instead of a small number
             of action buttons appearing in the action bar at the top
             of the screen, the action bar will split into the top navigation
             section and the bottom menu section. Menu items will not be
             split across the two bars; they will always appear together. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:uiOptions
        */
        public static final int AndroidManifestApplication_uiOptions = 24;
        /**
          <p>
          @attr description
           Flag indicating whether the application requests the VM to operate in
         the safe mode.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:vmSafeMode
        */
        public static final int AndroidManifestApplication_vmSafeMode = 13;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>category</code> tag, a child of the
         {@link #AndroidManifestIntentFilter intent-filter} tag. 
         See {@link android.content.IntentFilter#addCategory} for
         more information. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestCategory_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> The name of category that is handled, using the Java-style
             naming convention.</td></tr>
           </table>
           @see #AndroidManifestCategory_name
         */
        public static final int[] AndroidManifestCategory = {
            0x7f01040b
        };
        /**
          <p>
          @attr description
           The name of category that is handled, using the Java-style
             naming convention.  For example, to support
             {@link android.content.Intent#CATEGORY_LAUNCHER Intent.CATEGORY_LAUNCHER}
             you would put <code>android.intent.category.LAUNCHER</code> here.
             Custom actions should generally use a prefix matching the
             package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestCategory_name = 0;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>screen</code> tag, a child of <code>compatible-screens</code>,
         which is itseld a child of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestCompatibleScreensScreen_screenDensity app.guchagucharr.guchagucharunrecorder:screenDensity}</code></td><td> Specifies a compatible screen density, as per the device
             configuration screen density bins.</td></tr>
           <tr><td><code>{@link #AndroidManifestCompatibleScreensScreen_screenSize app.guchagucharr.guchagucharunrecorder:screenSize}</code></td><td> Specifies a compatible screen size, as per the device
             configuration screen size bins.</td></tr>
           </table>
           @see #AndroidManifestCompatibleScreensScreen_screenDensity
           @see #AndroidManifestCompatibleScreensScreen_screenSize
         */
        public static final int[] AndroidManifestCompatibleScreensScreen = {
            0x7f010462, 0x7f010463
        };
        /**
          <p>
          @attr description
           Specifies a compatible screen density, as per the device
             configuration screen density bins. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ldpi</code></td><td>120</td><td> A low density screen, approximately 120dpi. </td></tr>
<tr><td><code>mdpi</code></td><td>160</td><td> A medium density screen, approximately 160dpi. </td></tr>
<tr><td><code>hdpi</code></td><td>240</td><td> A high density screen, approximately 240dpi. </td></tr>
<tr><td><code>xhdpi</code></td><td>320</td><td> An extra high density screen, approximately 320dpi. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:screenDensity
        */
        public static final int AndroidManifestCompatibleScreensScreen_screenDensity = 1;
        /**
          <p>
          @attr description
           Specifies a compatible screen size, as per the device
             configuration screen size bins. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>small</code></td><td>200</td><td> A small screen configuration, at least 240x320db. </td></tr>
<tr><td><code>normal</code></td><td>300</td><td> A normal screen configuration, at least 320x480db. </td></tr>
<tr><td><code>large</code></td><td>400</td><td> A large screen configuration, at least 400x530db. </td></tr>
<tr><td><code>xlarge</code></td><td>500</td><td> An extra large screen configuration, at least 600x800db. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:screenSize
        */
        public static final int AndroidManifestCompatibleScreensScreen_screenSize = 0;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>data</code> tag, a child of the
         {@link #AndroidManifestIntentFilter intent-filter} tag, describing
         the types of data that match.  This tag can be specified multiple
         times to supply multiple data options, as described in the
         {@link android.content.IntentFilter} class.  Note that all such
         tags are adding options to the same IntentFilter so that, for example,
         <code>&lt;data android:scheme="myscheme" android:host="me.com" /&gt;</code>
         is equivalent to <code>&lt;data android:scheme="myscheme" /&gt;
         &lt;data android:host="me.com" /&gt;</code>. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestData_host app.guchagucharr.guchagucharunrecorder:host}</code></td><td> Specify a URI authority host that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_mimeType app.guchagucharr.guchagucharunrecorder:mimeType}</code></td><td> Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_path app.guchagucharr.guchagucharunrecorder:path}</code></td><td> Specify a URI path that must exactly match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_pathPattern app.guchagucharr.guchagucharunrecorder:pathPattern}</code></td><td> Specify a URI path that matches a simple pattern, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_pathPrefix app.guchagucharr.guchagucharunrecorder:pathPrefix}</code></td><td> Specify a URI path that must be a prefix to match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_port app.guchagucharr.guchagucharunrecorder:port}</code></td><td> Specify a URI authority port that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.</td></tr>
           <tr><td><code>{@link #AndroidManifestData_scheme app.guchagucharr.guchagucharunrecorder:scheme}</code></td><td> Specify a URI scheme that is handled, as per
             {@link android.content.IntentFilter#addDataScheme
             IntentFilter.addDataScheme()}.</td></tr>
           </table>
           @see #AndroidManifestData_host
           @see #AndroidManifestData_mimeType
           @see #AndroidManifestData_path
           @see #AndroidManifestData_pathPattern
           @see #AndroidManifestData_pathPrefix
           @see #AndroidManifestData_port
           @see #AndroidManifestData_scheme
         */
        public static final int[] AndroidManifestData = {
            0x7f010455, 0x7f010456, 0x7f010457, 0x7f01045e,
            0x7f01045f, 0x7f010460, 0x7f010461
        };
        /**
          <p>
          @attr description
           Specify a URI authority host that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.
             <p><em>Note: host name matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             host names here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:host
        */
        public static final int AndroidManifestData_host = 5;
        /**
          <p>
          @attr description
           Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.
             <p><em>Note: MIME type matching in the Android framework is
             case-sensitive, unlike formal RFC MIME types.  As a result,
             MIME types here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mimeType
        */
        public static final int AndroidManifestData_mimeType = 3;
        /**
          <p>
          @attr description
           Specify a URI path that must exactly match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:path
        */
        public static final int AndroidManifestData_path = 0;
        /**
          <p>
          @attr description
           Specify a URI path that matches a simple pattern, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pathPattern
        */
        public static final int AndroidManifestData_pathPattern = 2;
        /**
          <p>
          @attr description
           Specify a URI path that must be a prefix to match, as per
             {@link android.content.IntentFilter#addDataPath
             IntentFilter.addDataAuthority()} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pathPrefix
        */
        public static final int AndroidManifestData_pathPrefix = 1;
        /**
          <p>
          @attr description
           Specify a URI authority port that is handled, as per
             {@link android.content.IntentFilter#addDataAuthority
             IntentFilter.addDataAuthority()}.  If a host is supplied
             but not a port, any port is matched. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:port
        */
        public static final int AndroidManifestData_port = 6;
        /**
          <p>
          @attr description
           Specify a URI scheme that is handled, as per
             {@link android.content.IntentFilter#addDataScheme
             IntentFilter.addDataScheme()}.
             <p><em>Note: scheme matching in the Android framework is
             case-sensitive, unlike the formal RFC.  As a result,
             schemes here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scheme
        */
        public static final int AndroidManifestData_scheme = 4;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>grant-uri-permission</code> tag, a child of the
         {@link #AndroidManifestProvider provider} tag, describing a specific
         URI path that can be granted as a permission.  This tag can be
         specified multiple time to supply multiple paths. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestGrantUriPermission_path app.guchagucharr.guchagucharunrecorder:path}</code></td><td> Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}.</td></tr>
           <tr><td><code>{@link #AndroidManifestGrantUriPermission_pathPattern app.guchagucharr.guchagucharunrecorder:pathPattern}</code></td><td> Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}.</td></tr>
           <tr><td><code>{@link #AndroidManifestGrantUriPermission_pathPrefix app.guchagucharr.guchagucharunrecorder:pathPrefix}</code></td><td> Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}.</td></tr>
           </table>
           @see #AndroidManifestGrantUriPermission_path
           @see #AndroidManifestGrantUriPermission_pathPattern
           @see #AndroidManifestGrantUriPermission_pathPrefix
         */
        public static final int[] AndroidManifestGrantUriPermission = {
            0x7f010455, 0x7f010456, 0x7f010457
        };
        /**
          <p>
          @attr description
           Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:path
        */
        public static final int AndroidManifestGrantUriPermission_path = 0;
        /**
          <p>
          @attr description
           Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pathPattern
        */
        public static final int AndroidManifestGrantUriPermission_pathPattern = 2;
        /**
          <p>
          @attr description
           Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pathPrefix
        */
        public static final int AndroidManifestGrantUriPermission_pathPrefix = 1;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>instrumentation</code> tag, a child of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_functionalTest app.guchagucharr.guchagucharunrecorder:functionalTest}</code></td><td> Flag indicating that an Instrumentation class should be run as a
         functional test.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_handleProfiling app.guchagucharr.guchagucharunrecorder:handleProfiling}</code></td><td> Flag indicating that an Instrumentation class wants to take care
         of starting/stopping profiling itself, rather than relying on
         the default behavior of profiling the complete time it is running.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the class implementing the instrumentation, deriving from
            {@link android.app.Instrumentation}.</td></tr>
           <tr><td><code>{@link #AndroidManifestInstrumentation_targetPackage app.guchagucharr.guchagucharunrecorder:targetPackage}</code></td><td> The name of the application package that an Instrumentation object
         will run against.</td></tr>
           </table>
           @see #AndroidManifestInstrumentation_functionalTest
           @see #AndroidManifestInstrumentation_handleProfiling
           @see #AndroidManifestInstrumentation_icon
           @see #AndroidManifestInstrumentation_label
           @see #AndroidManifestInstrumentation_logo
           @see #AndroidManifestInstrumentation_name
           @see #AndroidManifestInstrumentation_targetPackage
         */
        public static final int[] AndroidManifestInstrumentation = {
            0x7f010404, 0x7f010405, 0x7f010406, 0x7f01040b,
            0x7f010433, 0x7f010434, 0x7f010435
        };
        /**
          <p>
          @attr description
           Flag indicating that an Instrumentation class should be run as a
         functional test. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:functionalTest
        */
        public static final int AndroidManifestInstrumentation_functionalTest = 6;
        /**
          <p>
          @attr description
           Flag indicating that an Instrumentation class wants to take care
         of starting/stopping profiling itself, rather than relying on
         the default behavior of profiling the complete time it is running.
         This allows it to target profiling data at a specific set of
         operations. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:handleProfiling
        */
        public static final int AndroidManifestInstrumentation_handleProfiling = 5;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestInstrumentation_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestInstrumentation_label = 0;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestInstrumentation_logo = 2;
        /**
          <p>
          @attr description
           Required name of the class implementing the instrumentation, deriving from
            {@link android.app.Instrumentation}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyActivity); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestInstrumentation_name = 3;
        /**
          <p>
          @attr description
           The name of the application package that an Instrumentation object
         will run against. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetPackage
        */
        public static final int AndroidManifestInstrumentation_targetPackage = 4;
        /**  The <code>intent-filter</code> tag is used to construct an
         {@link android.content.IntentFilter} object that will be used
         to determine which component can handle a particular
         {@link android.content.Intent} that has been given to the system.
         It can be used as a child of the
         {@link #AndroidManifestActivity activity},
         {@link #AndroidManifestReceiver receiver} and 
         {@link #AndroidManifestService service}
         tags.
         
         <p> Zero or more {@link #AndroidManifestAction action},
         {@link #AndroidManifestCategory category}, and/or
         {@link #AndroidManifestData data} tags should be
         included inside to describe the contents of the filter.
         
         <p> The optional label and icon attributes here are used with
         an activity to supply an alternative description of that activity
         when it is being started through an Intent matching this filter. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestIntentFilter_priority app.guchagucharr.guchagucharunrecorder:priority}</code></td><td> Specify the relative importance or ability in handling a particular
         Intent.</td></tr>
           </table>
           @see #AndroidManifestIntentFilter_icon
           @see #AndroidManifestIntentFilter_label
           @see #AndroidManifestIntentFilter_logo
           @see #AndroidManifestIntentFilter_priority
         */
        public static final int[] AndroidManifestIntentFilter = {
            0x7f010404, 0x7f010405, 0x7f010406, 0x7f01042e
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestIntentFilter_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestIntentFilter_label = 0;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestIntentFilter_logo = 2;
        /**
          <p>
          @attr description
           Specify the relative importance or ability in handling a particular
         Intent.  For receivers, this controls the order in which they are
         executed to receive a broadcast (note that for
         asynchronous broadcasts, this order is ignored).  For activities,
         this provides information about how good an activity is handling an
         Intent; when multiple activities match an intent and have different
         priorities, only those with the higher priority value will be
         considered a match.
         
         <p>Only use if you really need to impose some specific
         order in which the broadcasts are received, or want to forcibly
         place an activity to always be preferred over others.  The value is a
         single integer, with higher numbers considered to be better. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:priority
        */
        public static final int AndroidManifestIntentFilter_priority = 3;
        /**  The <code>meta-data</code> tag is used to attach additional
         arbitrary data to an application component.  The data can later
         be retrieved programmatically from the
         {@link android.content.pm.ComponentInfo#metaData
         ComponentInfo.metaData} field.  There is no meaning given to this
         data by the system.  You may supply the data through either the
         <code>value</code> or <code>resource</code> attribute; if both
         are given, then <code>resource</code> will be used.
         
         <p>It is highly recommended that you avoid supplying related data as
         multiple separate meta-data entries.  Instead, if you have complex
         data to associate with a component, then use the <code>resource</code>
         attribute to assign an XML resource that the client can parse to
         retrieve the complete data. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestMetaData_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> A unique name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestMetaData_resource app.guchagucharr.guchagucharunrecorder:resource}</code></td><td> Resource identifier to assign to this piece of named meta-data.</td></tr>
           <tr><td><code>{@link #AndroidManifestMetaData_value app.guchagucharr.guchagucharunrecorder:value}</code></td><td> Concrete value to assign to this piece of named meta-data.</td></tr>
           </table>
           @see #AndroidManifestMetaData_name
           @see #AndroidManifestMetaData_resource
           @see #AndroidManifestMetaData_value
         */
        public static final int[] AndroidManifestMetaData = {
            0x7f01040b, 0x7f01045c, 0x7f01045d
        };
        /**
          <p>
          @attr description
           A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestMetaData_name = 0;
        /**
          <p>
          @attr description
           Resource identifier to assign to this piece of named meta-data.
             The resource identifier can later be retrieved from the meta data
             Bundle through {@link android.os.Bundle#getInt Bundle.getInt}. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:resource
        */
        public static final int AndroidManifestMetaData_resource = 2;
        /**
          <p>
          @attr description
           Concrete value to assign to this piece of named meta-data.
             The data can later be retrieved from the meta data Bundle
             through {@link android.os.Bundle#getString Bundle.getString},
             {@link android.os.Bundle#getInt Bundle.getInt},
             {@link android.os.Bundle#getBoolean Bundle.getBoolean},
             or {@link android.os.Bundle#getFloat Bundle.getFloat} depending
             on the type used here. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:value
        */
        public static final int AndroidManifestMetaData_value = 1;
        /**  Private tag to declare the original package name that this package is
         based on.  Only used for packages installed in the system image.  If
         given, and different than the actual package name, and the given
         original package was previously installed on the device but the new
         one was not, then the data for the old one will be renamed to be
         for the new package.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestOriginalPackage_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> A unique name for the given item.</td></tr>
           </table>
           @see #AndroidManifestOriginalPackage_name
         */
        public static final int[] AndroidManifestOriginalPackage = {
            0x7f01040b
        };
        /**
          <p>
          @attr description
           A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestOriginalPackage_name = 0;
        /**  Attributes relating to a package verifier. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPackageVerifier_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Specifies the Java-style package name that defines this
             package verifier.</td></tr>
           <tr><td><code>{@link #AndroidManifestPackageVerifier_publicKey app.guchagucharr.guchagucharunrecorder:publicKey}</code></td><td> The Base64 encoded public key of the package verifier's
             signature.</td></tr>
           </table>
           @see #AndroidManifestPackageVerifier_name
           @see #AndroidManifestPackageVerifier_publicKey
         */
        public static final int[] AndroidManifestPackageVerifier = {
            0x7f01040b, 0x7f010464
        };
        /**
          <p>
          @attr description
           Specifies the Java-style package name that defines this
             package verifier. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestPackageVerifier_name = 0;
        /**
          <p>
          @attr description
           The Base64 encoded public key of the package verifier's
             signature. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:publicKey
        */
        public static final int AndroidManifestPackageVerifier_publicKey = 1;
        /**  Attributes that can be supplied in an AndroidManifest.xml
         <code>path-permission</code> tag, a child of the
         {@link #AndroidManifestProvider provider} tag, describing a permission
         that allows access to a specific path in the provider.  This tag can be
         specified multiple time to supply multiple paths. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_path app.guchagucharr.guchagucharunrecorder:path}</code></td><td> Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_pathPattern app.guchagucharr.guchagucharunrecorder:pathPattern}</code></td><td> Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_pathPrefix app.guchagucharr.guchagucharunrecorder:pathPrefix}</code></td><td> Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_readPermission app.guchagucharr.guchagucharunrecorder:readPermission}</code></td><td> A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.</td></tr>
           <tr><td><code>{@link #AndroidManifestPathPermission_writePermission app.guchagucharr.guchagucharunrecorder:writePermission}</code></td><td> A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.</td></tr>
           </table>
           @see #AndroidManifestPathPermission_path
           @see #AndroidManifestPathPermission_pathPattern
           @see #AndroidManifestPathPermission_pathPrefix
           @see #AndroidManifestPathPermission_permission
           @see #AndroidManifestPathPermission_readPermission
           @see #AndroidManifestPathPermission_writePermission
         */
        public static final int[] AndroidManifestPathPermission = {
            0x7f01040c, 0x7f01040d, 0x7f01040e, 0x7f010455,
            0x7f010456, 0x7f010457
        };
        /**
          <p>
          @attr description
           Specify a URI path that must exactly match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_LITERAL}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:path
        */
        public static final int AndroidManifestPathPermission_path = 3;
        /**
          <p>
          @attr description
           Specify a URI path that matches a simple pattern, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_SIMPLE_GLOB}. 
             Note that because '\' is used as an escape character when
             reading the string from XML (before it is parsed as a pattern),
             you will need to double-escape: for example a literal "*" would
             be written as "\\*" and a literal "\" would be written as
             "\\\\".  This is basically the same as what you would need to
             write if constructing the string in Java code. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pathPattern
        */
        public static final int AndroidManifestPathPermission_pathPattern = 5;
        /**
          <p>
          @attr description
           Specify a URI path that must be a prefix to match, as per
             {@link android.os.PatternMatcher} with
             {@link android.os.PatternMatcher#PATTERN_PREFIX}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pathPrefix
        */
        public static final int AndroidManifestPathPermission_pathPrefix = 4;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestPathPermission_permission = 0;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:readPermission
        */
        public static final int AndroidManifestPathPermission_readPermission = 1;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:writePermission
        */
        public static final int AndroidManifestPathPermission_writePermission = 2;
        /**  The <code>permission</code> tag declares a security permission that can be
         used to control access from other packages to specific components or
         features in your package (or other packages).  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPermission_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required public name of the permission, which other components and
        packages will use when referring to this permission.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_permissionFlags app.guchagucharr.guchagucharunrecorder:permissionFlags}</code></td><td> Flags indicating more context for a permission.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_permissionGroup app.guchagucharr.guchagucharunrecorder:permissionGroup}</code></td><td> Specified the name of a group that this permission is associated
         with.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermission_protectionLevel app.guchagucharr.guchagucharunrecorder:protectionLevel}</code></td><td> Characterizes the potential risk implied in a permission and
         indicates the procedure the system should follow when determining
         whether to grant the permission to an application requesting it.</td></tr>
           </table>
           @see #AndroidManifestPermission_description
           @see #AndroidManifestPermission_icon
           @see #AndroidManifestPermission_label
           @see #AndroidManifestPermission_logo
           @see #AndroidManifestPermission_name
           @see #AndroidManifestPermission_permissionFlags
           @see #AndroidManifestPermission_permissionGroup
           @see #AndroidManifestPermission_protectionLevel
         */
        public static final int[] AndroidManifestPermission = {
            0x7f010404, 0x7f010405, 0x7f010406, 0x7f01040b,
            0x7f010410, 0x7f010412, 0x7f010413, 0x7f010432
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestPermission_description = 7;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestPermission_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestPermission_label = 0;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestPermission_logo = 2;
        /**
          <p>
          @attr description
           Required public name of the permission, which other components and
        packages will use when referring to this permission.  This is a string using
        Java-style scoping to ensure it is unique.  The prefix will often
        be the same as our overall package name, for example
        "com.mycompany.android.myapp.SomePermission". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestPermission_name = 3;
        /**
          <p>
          @attr description
           Flags indicating more context for a permission. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>costsMoney</code></td><td>0x0001</td><td> Set to indicate that this permission allows an operation that
             may cost the user money.  Such permissions may be highlighted
             when shown to the user with this additional information.  </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permissionFlags
        */
        public static final int AndroidManifestPermission_permissionFlags = 5;
        /**
          <p>
          @attr description
           Specified the name of a group that this permission is associated
         with.  The group must have been defined with the
         {@link android.R.styleable#AndroidManifestPermissionGroup permission-group} tag. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permissionGroup
        */
        public static final int AndroidManifestPermission_permissionGroup = 6;
        /**
          <p>
          @attr description
           Characterizes the potential risk implied in a permission and
         indicates the procedure the system should follow when determining
         whether to grant the permission to an application requesting it. {@link
         android.Manifest.permission Standard permissions} have a predefined and
         permanent protectionLevel. If you are creating a custom permission in an
         application, you can define a protectionLevel attribute with one of the
         values listed below. If no protectionLevel is defined for a custom
         permission, the system assigns the default ("normal"). 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> A lower-risk permission that gives an application access to isolated
             application-level features, with minimal risk to other applications,
             the system, or the user. The system automatically grants this type
             of permission to a requesting application at installation, without
             asking for the user's explicit approval (though the user always
             has the option to review these permissions before installing). </td></tr>
<tr><td><code>dangerous</code></td><td>1</td><td> A higher-risk permission that would give a requesting application
             access to private user data or control over the device that can
             negatively impact the user.  Because this type of permission
             introduces potential risk, the system may not automatically
             grant it to the requesting application.  For example, any dangerous
             permissions requested by an application may be displayed to the
             user and require confirmation before proceeding, or some other
             approach may be taken to avoid the user automatically allowing
             the use of such facilities.  </td></tr>
<tr><td><code>signature</code></td><td>2</td><td> A permission that the system is to grant only if the requesting
             application is signed with the same certificate as the application
             that declared the permission. If the certificates match, the system
             automatically grants the permission without notifying the user or
             asking for the user's explicit approval. </td></tr>
<tr><td><code>signatureOrSystem</code></td><td>3</td><td> A permission that the system is to grant only to packages in the
             Android system image <em>or</em> that are signed with the same
             certificates. Please avoid using this option, as the
             signature protection level should be sufficient for most needs and
             works regardless of exactly where applications are installed.  This
             permission is used for certain special situations where multiple
             vendors have applications built in to a system image which need
             to share specific features explicitly because they are being built
             together. </td></tr>
<tr><td><code>system</code></td><td>0x10</td><td> Additional flag from base permission type: this permission can also
             be granted to any applications installed on the system image.
             Please avoid using this option, as the
             signature protection level should be sufficient for most needs and
             works regardless of exactly where applications are installed.  This
             permission flag is used for certain special situations where multiple
             vendors have applications built in to a system image which need
             to share specific features explicitly because they are being built
             together. </td></tr>
<tr><td><code>development</code></td><td>0x20</td><td> Additional flag from base permission type: this permission can also
             (optionally) be granted to development applications. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:protectionLevel
        */
        public static final int AndroidManifestPermission_protectionLevel = 4;
        /**  The <code>permission-group</code> tag declares a logical grouping of
         related permissions.
         
         <p>Note that this tag does not declare a permission itself, only
         a namespace in which further permissions can be placed.  See
         the {@link #AndroidManifestPermission &lt;permission&gt;} tag for
         more information.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required public name of the permission group, permissions will use
        to specify the group they are in.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_permissionGroupFlags app.guchagucharr.guchagucharunrecorder:permissionGroupFlags}</code></td><td> Flags indicating more context for a permission group.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionGroup_priority app.guchagucharr.guchagucharunrecorder:priority}</code></td><td> Specify the relative importance or ability in handling a particular
         Intent.</td></tr>
           </table>
           @see #AndroidManifestPermissionGroup_description
           @see #AndroidManifestPermissionGroup_icon
           @see #AndroidManifestPermissionGroup_label
           @see #AndroidManifestPermissionGroup_logo
           @see #AndroidManifestPermissionGroup_name
           @see #AndroidManifestPermissionGroup_permissionGroupFlags
           @see #AndroidManifestPermissionGroup_priority
         */
        public static final int[] AndroidManifestPermissionGroup = {
            0x7f010404, 0x7f010405, 0x7f010406, 0x7f01040b,
            0x7f010411, 0x7f01042e, 0x7f010432
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestPermissionGroup_description = 6;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestPermissionGroup_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestPermissionGroup_label = 0;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestPermissionGroup_logo = 2;
        /**
          <p>
          @attr description
           Required public name of the permission group, permissions will use
        to specify the group they are in.  This is a string using
        Java-style scoping to ensure it is unique.  The prefix will often
        be the same as our overall package name, for example
        "com.mycompany.android.myapp.SomePermission". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestPermissionGroup_name = 3;
        /**
          <p>
          @attr description
           Flags indicating more context for a permission group. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>personalInfo</code></td><td>0x0001</td><td> Set to indicate that this permission group contains permissions
             protecting access to some information that is considered
             personal to the user (such as contacts, e-mails, etc). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permissionGroupFlags
        */
        public static final int AndroidManifestPermissionGroup_permissionGroupFlags = 4;
        /**
          <p>
          @attr description
           Specify the relative importance or ability in handling a particular
         Intent.  For receivers, this controls the order in which they are
         executed to receive a broadcast (note that for
         asynchronous broadcasts, this order is ignored).  For activities,
         this provides information about how good an activity is handling an
         Intent; when multiple activities match an intent and have different
         priorities, only those with the higher priority value will be
         considered a match.
         
         <p>Only use if you really need to impose some specific
         order in which the broadcasts are received, or want to forcibly
         place an activity to always be preferred over others.  The value is a
         single integer, with higher numbers considered to be better. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:priority
        */
        public static final int AndroidManifestPermissionGroup_priority = 5;
        /**  The <code>permission-tree</code> tag declares the base of a tree of
         permission values: it declares that this package has ownership of
         the given permission name, as well as all names underneath it
         (separated by '.').  This allows you to use the
         {@link android.content.pm.PackageManager#addPermission
         PackageManager.addPermission()} method to dynamically add new
         permissions under this tree.
         
         <p>Note that this tag does not declare a permission itself, only
         a namespace in which further permissions can be placed.  See
         the {@link #AndroidManifestPermission &lt;permission&gt;} tag for
         more information.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestPermissionTree_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required public name of the permission tree, which is the base name
        of all permissions under it.</td></tr>
           </table>
           @see #AndroidManifestPermissionTree_icon
           @see #AndroidManifestPermissionTree_label
           @see #AndroidManifestPermissionTree_logo
           @see #AndroidManifestPermissionTree_name
         */
        public static final int[] AndroidManifestPermissionTree = {
            0x7f010404, 0x7f010405, 0x7f010406, 0x7f01040b
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestPermissionTree_icon = 1;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestPermissionTree_label = 0;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestPermissionTree_logo = 2;
        /**
          <p>
          @attr description
           Required public name of the permission tree, which is the base name
        of all permissions under it.  This is a string using
        Java-style scoping to ensure it is unique.  The prefix will often
        be the same as our overall package name, for example
        "com.mycompany.android.myapp.SomePermission".  A permission tree name
        must have more than two segments in its path; that is,
        "com.me.foo" is okay, but not "com.me" or "com". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestPermissionTree_name = 3;
        /**  Private tag to declare system protected broadcast actions.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestProtectedBroadcast_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> A unique name for the given item.</td></tr>
           </table>
           @see #AndroidManifestProtectedBroadcast_name
         */
        public static final int[] AndroidManifestProtectedBroadcast = {
            0x7f01040b
        };
        /**
          <p>
          @attr description
           A unique name for the given item.  This must use a Java-style naming
         convention to ensure the name is unique, for example
         "com.mycompany.MyName". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestProtectedBroadcast_name = 0;
        /**  The <code>provider</code> tag declares a
         {@link android.content.ContentProvider} class that is available
         as part of the package's application components, supplying structured
         access to data managed by the application.
         
         <p>This appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestProvider_authorities app.guchagucharr.guchagucharunrecorder:authorities}</code></td><td> Specify the authorities under which this content provider can be
         found.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specify whether this provider is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_exported app.guchagucharr.guchagucharunrecorder:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_grantUriPermissions app.guchagucharr.guchagucharunrecorder:grantUriPermissions}</code></td><td> If true, the {@link android.content.Context#grantUriPermission
         Context.grantUriPermission} or corresponding Intent flags can
         be used to allow others to access specific URIs in the content
         provider, even if they do not have an explicit read or write
         permission.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_initOrder app.guchagucharr.guchagucharunrecorder:initOrder}</code></td><td> Specify the order in which content providers hosted by a process
         are instantiated when that process is created.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_multiprocess app.guchagucharr.guchagucharunrecorder:multiprocess}</code></td><td> Specify whether a component is allowed to have multiple instances
         of itself running in different processes.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the class implementing the provider, deriving from
            {@link android.content.ContentProvider}.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_process app.guchagucharr.guchagucharunrecorder:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_readPermission app.guchagucharr.guchagucharunrecorder:readPermission}</code></td><td> A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_singleUser app.guchagucharr.guchagucharunrecorder:singleUser}</code></td><td> If set to true, a single instance of this component will run for
         all users.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_syncable app.guchagucharr.guchagucharunrecorder:syncable}</code></td><td> Flag indicating whether this content provider would like to
         participate in data synchronization.</td></tr>
           <tr><td><code>{@link #AndroidManifestProvider_writePermission app.guchagucharr.guchagucharunrecorder:writePermission}</code></td><td> A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.</td></tr>
           </table>
           @see #AndroidManifestProvider_authorities
           @see #AndroidManifestProvider_description
           @see #AndroidManifestProvider_enabled
           @see #AndroidManifestProvider_exported
           @see #AndroidManifestProvider_grantUriPermissions
           @see #AndroidManifestProvider_icon
           @see #AndroidManifestProvider_initOrder
           @see #AndroidManifestProvider_label
           @see #AndroidManifestProvider_logo
           @see #AndroidManifestProvider_multiprocess
           @see #AndroidManifestProvider_name
           @see #AndroidManifestProvider_permission
           @see #AndroidManifestProvider_process
           @see #AndroidManifestProvider_readPermission
           @see #AndroidManifestProvider_singleUser
           @see #AndroidManifestProvider_syncable
           @see #AndroidManifestProvider_writePermission
         */
        public static final int[] AndroidManifestProvider = {
            0x7f010250, 0x7f010404, 0x7f010405, 0x7f010406,
            0x7f01040b, 0x7f01040c, 0x7f01040d, 0x7f01040e,
            0x7f01040f, 0x7f01041c, 0x7f01041d, 0x7f01041e,
            0x7f010421, 0x7f01042a, 0x7f01042b, 0x7f01042d,
            0x7f010432
        };
        /**
          <p>
          @attr description
           Specify the authorities under which this content provider can be
         found.  Multiple authorities may be supplied by separating them
         with a semicolon.  Authority names should use a Java-style naming
         convention (such as <code>com.google.provider.MyProvider</code>)
         in order to avoid conflicts.  Typically this name is the same
         as the class implementation describing the provider's data structure. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:authorities
        */
        public static final int AndroidManifestProvider_authorities = 13;
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestProvider_description = 16;
        /**
          <p>
          @attr description
           Specify whether this provider is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int AndroidManifestProvider_enabled = 0;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:exported
        */
        public static final int AndroidManifestProvider_exported = 9;
        /**
          <p>
          @attr description
           If true, the {@link android.content.Context#grantUriPermission
         Context.grantUriPermission} or corresponding Intent flags can
         be used to allow others to access specific URIs in the content
         provider, even if they do not have an explicit read or write
         permission.  If you are supporting this feature, you must be
         sure to call {@link android.content.Context#revokeUriPermission
         Context.revokeUriPermission} when URIs are deleted from your
         provider.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:grantUriPermissions
        */
        public static final int AndroidManifestProvider_grantUriPermissions = 8;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestProvider_icon = 2;
        /**
          <p>
          @attr description
           Specify the order in which content providers hosted by a process
         are instantiated when that process is created.  Not needed unless
         you have providers with dependencies between each other, to make
         sure that they are created in the order needed by those dependencies.
         The value is a simple integer, with higher numbers being
         initialized first. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:initOrder
        */
        public static final int AndroidManifestProvider_initOrder = 15;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestProvider_label = 1;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestProvider_logo = 3;
        /**
          <p>
          @attr description
           Specify whether a component is allowed to have multiple instances
         of itself running in different processes.  Use with the activity
         and provider tags.
    
         <p>Normally the system will ensure that all instances of a particular
         component are only running in a single process.  You can use this
         attribute to disable that behavior, allowing the system to create
         instances wherever they are used (provided permissions allow it).
         This is most often used with content providers, so that instances
         of a provider can be created in each client process, allowing them
         to be used without performing IPC.  


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:multiprocess
        */
        public static final int AndroidManifestProvider_multiprocess = 12;
        /**
          <p>
          @attr description
           Required name of the class implementing the provider, deriving from
            {@link android.content.ContentProvider}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyProvider); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestProvider_name = 4;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestProvider_permission = 5;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:process
        */
        public static final int AndroidManifestProvider_process = 11;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for read-only
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:readPermission
        */
        public static final int AndroidManifestProvider_readPermission = 6;
        /**
          <p>
          @attr description
           If set to true, a single instance of this component will run for
         all users.  That instance will run as user 0, the default/primary
         user.  When the app running is in processes for other users and interacts
         with this component (by binding to a service for example) those processes will
         always interact with the instance running for user 0.  Enabling
         single user mode forces "exported" of the component to be false, to
         help avoid introducing multi-user security bugs.  This feature is only
         available to applications built in to the system image; you must hold the
         permission INTERACT_ACROSS_USERS in order
         to use this feature.  This flag can only be used with services,
         receivers, and providers; it can not be used with activities. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:singleUser
        */
        public static final int AndroidManifestProvider_singleUser = 10;
        /**
          <p>
          @attr description
           Flag indicating whether this content provider would like to
         participate in data synchronization. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:syncable
        */
        public static final int AndroidManifestProvider_syncable = 14;
        /**
          <p>
          @attr description
           A specific {@link android.R.attr#permission} name for write
         access to a {@link android.content.ContentProvider}.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:writePermission
        */
        public static final int AndroidManifestProvider_writePermission = 7;
        /**  The <code>receiver</code> tag declares an
         {@link android.content.BroadcastReceiver} class that is available
         as part of the package's application components, allowing the
         application to receive actions or data broadcast by other
         applications even if it is not currently running.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of a receiver, to specify the Intents
         it will receive.  If none are specified, the receiver will only
         be run when an Intent is broadcast that is directed at its specific
         class name.  The receiver tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specify whether the receiver is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_exported app.guchagucharr.guchagucharunrecorder:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the class implementing the receiver, deriving from
            {@link android.content.BroadcastReceiver}.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_process app.guchagucharr.guchagucharunrecorder:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestReceiver_singleUser app.guchagucharr.guchagucharunrecorder:singleUser}</code></td><td> If set to true, a single instance of this component will run for
         all users.</td></tr>
           </table>
           @see #AndroidManifestReceiver_description
           @see #AndroidManifestReceiver_enabled
           @see #AndroidManifestReceiver_exported
           @see #AndroidManifestReceiver_icon
           @see #AndroidManifestReceiver_label
           @see #AndroidManifestReceiver_logo
           @see #AndroidManifestReceiver_name
           @see #AndroidManifestReceiver_permission
           @see #AndroidManifestReceiver_process
           @see #AndroidManifestReceiver_singleUser
         */
        public static final int[] AndroidManifestReceiver = {
            0x7f010250, 0x7f010404, 0x7f010405, 0x7f010406,
            0x7f01040b, 0x7f01040c, 0x7f01041c, 0x7f01041d,
            0x7f01041e, 0x7f010432
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestReceiver_description = 9;
        /**
          <p>
          @attr description
           Specify whether the receiver is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int AndroidManifestReceiver_enabled = 0;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:exported
        */
        public static final int AndroidManifestReceiver_exported = 6;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestReceiver_icon = 2;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestReceiver_label = 1;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestReceiver_logo = 3;
        /**
          <p>
          @attr description
           Required name of the class implementing the receiver, deriving from
            {@link android.content.BroadcastReceiver}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyReceiver); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestReceiver_name = 4;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestReceiver_permission = 5;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:process
        */
        public static final int AndroidManifestReceiver_process = 8;
        /**
          <p>
          @attr description
           If set to true, a single instance of this component will run for
         all users.  That instance will run as user 0, the default/primary
         user.  When the app running is in processes for other users and interacts
         with this component (by binding to a service for example) those processes will
         always interact with the instance running for user 0.  Enabling
         single user mode forces "exported" of the component to be false, to
         help avoid introducing multi-user security bugs.  This feature is only
         available to applications built in to the system image; you must hold the
         permission INTERACT_ACROSS_USERS in order
         to use this feature.  This flag can only be used with services,
         receivers, and providers; it can not be used with activities. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:singleUser
        */
        public static final int AndroidManifestReceiver_singleUser = 7;
        /**  The <code>service</code> tag declares a
         {@link android.app.Service} class that is available
         as part of the package's application components, implementing
         long-running background operations or a rich communication API
         that can be called by other packages.
         
         <p>Zero or more {@link #AndroidManifestIntentFilter intent-filter}
         tags can be included inside of a service, to specify the Intents
         that can connect with it.  If none are specified, the service can
         only be accessed by direct specification of its class name.
         The service tag appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestService_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Descriptive text for the associated data.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specify whether the service is enabled or not (that is, can be instantiated by the system).</td></tr>
           <tr><td><code>{@link #AndroidManifestService_exported app.guchagucharr.guchagucharunrecorder:exported}</code></td><td> Flag indicating whether the given application component is available
         to other applications.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_isolatedProcess app.guchagucharr.guchagucharunrecorder:isolatedProcess}</code></td><td> If set to true, this service will run under a special process
             that is isolated from the rest of the system.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> A user-legible name for the given item.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_logo app.guchagucharr.guchagucharunrecorder:logo}</code></td><td> A Drawable resource providing an extended graphical logo for its
         associated item.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the class implementing the service, deriving from
            {@link android.app.Service}.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_permission app.guchagucharr.guchagucharunrecorder:permission}</code></td><td> Specify a permission that a client is required to have in order to
    	 use the associated object.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_process app.guchagucharr.guchagucharunrecorder:process}</code></td><td> Specify a specific process that the associated code is to run in.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_singleUser app.guchagucharr.guchagucharunrecorder:singleUser}</code></td><td> If set to true, a single instance of this component will run for
         all users.</td></tr>
           <tr><td><code>{@link #AndroidManifestService_stopWithTask app.guchagucharr.guchagucharunrecorder:stopWithTask}</code></td><td> If set to true, this service with be automatically stopped
             when the user remove a task rooted in an activity owned by
             the application.</td></tr>
           </table>
           @see #AndroidManifestService_description
           @see #AndroidManifestService_enabled
           @see #AndroidManifestService_exported
           @see #AndroidManifestService_icon
           @see #AndroidManifestService_isolatedProcess
           @see #AndroidManifestService_label
           @see #AndroidManifestService_logo
           @see #AndroidManifestService_name
           @see #AndroidManifestService_permission
           @see #AndroidManifestService_process
           @see #AndroidManifestService_singleUser
           @see #AndroidManifestService_stopWithTask
         */
        public static final int[] AndroidManifestService = {
            0x7f010250, 0x7f010404, 0x7f010405, 0x7f010406,
            0x7f01040b, 0x7f01040c, 0x7f01041c, 0x7f01041d,
            0x7f01041e, 0x7f010432, 0x7f010458, 0x7f010459
        };
        /**
          <p>
          @attr description
           Descriptive text for the associated data. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int AndroidManifestService_description = 9;
        /**
          <p>
          @attr description
           Specify whether the service is enabled or not (that is, can be instantiated by the system).
             It can also be specified for an application as a whole, in which case a value of "false"
             will override any component specific values (a value of "true" will not override the
             component specific values). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int AndroidManifestService_enabled = 0;
        /**
          <p>
          @attr description
           Flag indicating whether the given application component is available
         to other applications.  If false, it can only be accessed by
         applications with its same user id (which usually means only by
         code in its own package).  If true, it can be invoked by external
         entities, though which ones can do so may be controlled through
         permissions.  The default value is false for activity, receiver,
         and service components that do not specify any intent filters; it
         is true for activity, receiver, and service components that do
         have intent filters (implying they expect to be invoked by others
         who do not know their particular component name) and for all
         content providers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:exported
        */
        public static final int AndroidManifestService_exported = 6;
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int AndroidManifestService_icon = 2;
        /**
          <p>
          @attr description
           If set to true, this service will run under a special process
             that is isolated from the rest of the system.  The only communication
             with it is through the Service API (binding and starting). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isolatedProcess
        */
        public static final int AndroidManifestService_isolatedProcess = 11;
        /**
          <p>
          @attr description
           A user-legible name for the given item.  Use with the
         application tag (to supply a default label for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific label for that component).  It may also be
         used with the intent-filter tag to supply a label to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given label will be used wherever the user sees information
         about its associated component; for example, as the name of a
         main activity that is displayed in the launcher.  You should
         generally set this to a reference to a string resource, so that
         it can be localized, however it is also allowed to supply a plain
         string for quick and dirty programming. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int AndroidManifestService_label = 1;
        /**
          <p>
          @attr description
           A Drawable resource providing an extended graphical logo for its
         associated item. Use with the application tag (to supply a default
         logo for all application components), or with the activity, receiver,
         service, or instrumentation tag (to supply a specific logo for that
         component). It may also be used with the intent-filter tag to supply
         a logo to show to the user when an activity is being selected based
         on a particular Intent.

         <p>The given logo will be used to display to the user a graphical
         representation of its associated component; for example as the
         header in the Action Bar. The primary differences between an icon
         and a logo are that logos are often wider and more detailed, and are
         used without an accompanying text caption. This must be a reference
         to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:logo
        */
        public static final int AndroidManifestService_logo = 3;
        /**
          <p>
          @attr description
           Required name of the class implementing the service, deriving from
            {@link android.app.Service}.  This is a fully
            qualified class name (for example, com.mycompany.myapp.MyService); as a
            short-hand if the first character of the class
            is a period then it is appended to your package name. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestService_name = 4;
        /**
          <p>
          @attr description
           Specify a permission that a client is required to have in order to
    	 use the associated object.  If the client does not hold the named
    	 permission, its request will fail.  See the
         <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:permission
        */
        public static final int AndroidManifestService_permission = 5;
        /**
          <p>
          @attr description
           Specify a specific process that the associated code is to run in.
         Use with the application tag (to supply a default process for all
         application components), or with the activity, receiver, service,
         or provider tag (to supply a specific icon for that component).
    
         <p>Application components are normally run in a single process that
         is created for the entire application.  You can use this tag to modify
         where they run.  If the process name begins with a ':' character,
         a new process private to that application will be created when needed
         to run that component (allowing you to spread your application across
         multiple processes).  If the process name begins with a lower-case
         character, the component will be run in a global process of that name,
         provided that you have permission to do so, allowing multiple
         applications to share one process to reduce resource usage. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:process
        */
        public static final int AndroidManifestService_process = 8;
        /**
          <p>
          @attr description
           If set to true, a single instance of this component will run for
         all users.  That instance will run as user 0, the default/primary
         user.  When the app running is in processes for other users and interacts
         with this component (by binding to a service for example) those processes will
         always interact with the instance running for user 0.  Enabling
         single user mode forces "exported" of the component to be false, to
         help avoid introducing multi-user security bugs.  This feature is only
         available to applications built in to the system image; you must hold the
         permission INTERACT_ACROSS_USERS in order
         to use this feature.  This flag can only be used with services,
         receivers, and providers; it can not be used with activities. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:singleUser
        */
        public static final int AndroidManifestService_singleUser = 7;
        /**
          <p>
          @attr description
           If set to true, this service with be automatically stopped
             when the user remove a task rooted in an activity owned by
             the application.  The default is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stopWithTask
        */
        public static final int AndroidManifestService_stopWithTask = 10;
        /**  The <code>supports-screens</code> specifies the screen dimensions an
         application supports.  By default a modern application supports all
         screen sizes and must explicitly disable certain screen sizes here;
         older applications are assumed to only support the traditional normal
         (HVGA) screen size.  Note that screen size is a separate axis from
         density, and is determined as the available pixels to an application
         after density scaling has been applied.
         
         <p>This appears as a child tag of the
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_anyDensity app.guchagucharr.guchagucharunrecorder:anyDensity}</code></td><td> Indicates whether the application can accommodate any screen
             density.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_compatibleWidthLimitDp app.guchagucharr.guchagucharunrecorder:compatibleWidthLimitDp}</code></td><td> Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the largest screens an application is
             compatible with.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_largeScreens app.guchagucharr.guchagucharunrecorder:largeScreens}</code></td><td> Indicates whether the application supports larger screen form-factors.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_largestWidthLimitDp app.guchagucharr.guchagucharunrecorder:largestWidthLimitDp}</code></td><td> Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the screens an application is
             compatible with.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_normalScreens app.guchagucharr.guchagucharunrecorder:normalScreens}</code></td><td> Indicates whether an application supports the normal screen
             form-factors.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_requiresSmallestWidthDp app.guchagucharr.guchagucharunrecorder:requiresSmallestWidthDp}</code></td><td> Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the minimum screen size an application is
             compatible with.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_resizeable app.guchagucharr.guchagucharunrecorder:resizeable}</code></td><td> Indicates whether the application can resize itself to newer
             screen sizes.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_smallScreens app.guchagucharr.guchagucharunrecorder:smallScreens}</code></td><td> Indicates whether the application supports smaller screen form-factors.</td></tr>
           <tr><td><code>{@link #AndroidManifestSupportsScreens_xlargeScreens app.guchagucharr.guchagucharunrecorder:xlargeScreens}</code></td><td> Indicates whether the application supports extra large screen form-factors.</td></tr>
           </table>
           @see #AndroidManifestSupportsScreens_anyDensity
           @see #AndroidManifestSupportsScreens_compatibleWidthLimitDp
           @see #AndroidManifestSupportsScreens_largeScreens
           @see #AndroidManifestSupportsScreens_largestWidthLimitDp
           @see #AndroidManifestSupportsScreens_normalScreens
           @see #AndroidManifestSupportsScreens_requiresSmallestWidthDp
           @see #AndroidManifestSupportsScreens_resizeable
           @see #AndroidManifestSupportsScreens_smallScreens
           @see #AndroidManifestSupportsScreens_xlargeScreens
         */
        public static final int[] AndroidManifestSupportsScreens = {
            0x7f01044c, 0x7f01044d, 0x7f01044e, 0x7f01044f,
            0x7f010450, 0x7f010451, 0x7f010452, 0x7f010453,
            0x7f010454
        };
        /**
          <p>
          @attr description
           Indicates whether the application can accommodate any screen
             density.  Older applications are assumed to not be able to,
             new ones able to.  You can explicitly supply your abilities
             here. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:anyDensity
        */
        public static final int AndroidManifestSupportsScreens_anyDensity = 8;
        /**
          <p>
          @attr description
           Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the largest screens an application is
             compatible with.  This attribute provides the maximum
             "smallest screen width" (as per the -swNNNdp resource configuration)
             that the application is designed for.  If this value is smaller than
             the "smallest screen width" of the device it is running on, the user
             is offered to run it in a compatibility mode that emulates a
             smaller screen and zooms it to fit the screen. Currently the compatibility mode only
             emulates phone screens with a 320dp width, so compatibility mode is not applied if the
             value for compatibleWidthLimitDp is larger than 320. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:compatibleWidthLimitDp
        */
        public static final int AndroidManifestSupportsScreens_compatibleWidthLimitDp = 1;
        /**
          <p>
          @attr description
           Indicates whether the application supports larger screen form-factors.
             A large screen is defined as a screen that is significantly larger
             than a normal phone screen, and thus may require some special care
             on the application's part to make good use of it.  An example would
             be a VGA <em>normal density</em> screen, though even larger screens
             are certainly possible.  An application that does not support
             large screens will be placed as a postage stamp on such a
             screen, so that it retains the dimensions it was originally
             designed for. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:largeScreens
        */
        public static final int AndroidManifestSupportsScreens_largeScreens = 5;
        /**
          <p>
          @attr description
           Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the screens an application is
             compatible with.  This attribute provides the maximum
             "smallest screen width" (as per the -swNNNdp resource configuration)
             that the application can work well on.  If this value is smaller than
             the "smallest screen width" of the device it is running on, the
             application will be forced in to screen compatibility mode with
             no way for the user to turn it off. Currently the compatibility mode only
             emulates phone screens with a 320dp width, so compatibility mode is not applied if the
             value for largestWidthLimitDp is larger than 320. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:largestWidthLimitDp
        */
        public static final int AndroidManifestSupportsScreens_largestWidthLimitDp = 2;
        /**
          <p>
          @attr description
           Indicates whether an application supports the normal screen
             form-factors.  Traditionally this is an HVGA normal density
             screen, but WQVGA low density and WVGA high density are also
             considered to be normal.  This attribute is true by default,
             and applications currently should leave it that way. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:normalScreens
        */
        public static final int AndroidManifestSupportsScreens_normalScreens = 4;
        /**
          <p>
          @attr description
           Starting with {@link android.os.Build.VERSION_CODES#HONEYCOMB_MR2},
             this is the new way to specify the minimum screen size an application is
             compatible with.  This attribute provides the required minimum
             "smallest screen width" (as per the -swNNNdp resource configuration)
             that the application can run on.  For example, a typical phone
             screen is 320, a 7" tablet 600, and a 10" tablet 720.  If the
             smallest screen width of the device is below the value supplied here,
             then the application is considered incompatible with that device.
             If not supplied, then any old smallScreens, normalScreens, largeScreens,
             or xlargeScreens attributes will be used instead. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:requiresSmallestWidthDp
        */
        public static final int AndroidManifestSupportsScreens_requiresSmallestWidthDp = 0;
        /**
          <p>
          @attr description
           Indicates whether the application can resize itself to newer
             screen sizes.  This is mostly used to distinguish between old
             applications that may not be compatible with newly introduced
             screen sizes and newer applications that should be; it will be
             set for you automatically based on whether you are targeting
             a newer platform that supports more screens. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:resizeable
        */
        public static final int AndroidManifestSupportsScreens_resizeable = 7;
        /**
          <p>
          @attr description
           Indicates whether the application supports smaller screen form-factors.
             A small screen is defined as one with a smaller aspect ratio than
             the traditional HVGA screen; that is, for a portrait screen, less
             tall than an HVGA screen.  In practice, this means a QVGA low
             density or VGA high density screen.  An application that does
             not support small screens <em>will not be available</em> for
             small screen devices, since there is little the platform can do
             to make such an application work on a smaller screen. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:smallScreens
        */
        public static final int AndroidManifestSupportsScreens_smallScreens = 3;
        /**
          <p>
          @attr description
           Indicates whether the application supports extra large screen form-factors. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:xlargeScreens
        */
        public static final int AndroidManifestSupportsScreens_xlargeScreens = 6;
        /**  The <code>uses-configuration</code> tag specifies
         a specific hardware configuration value used by the application.
         For example an application might specify that it requires
         a physical keyboard or a particular navigation method like
         trackball. Multiple such attribute values can be specified by the
         application.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqFiveWayNav app.guchagucharr.guchagucharunrecorder:reqFiveWayNav}</code></td><td> Application's requirement for five way navigation </td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqHardKeyboard app.guchagucharr.guchagucharunrecorder:reqHardKeyboard}</code></td><td> Application's requirement for a hard keyboard </td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqKeyboardType app.guchagucharr.guchagucharunrecorder:reqKeyboardType}</code></td><td> The input method preferred by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqNavigation app.guchagucharr.guchagucharunrecorder:reqNavigation}</code></td><td> The navigation device preferred by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesConfiguration_reqTouchScreen app.guchagucharr.guchagucharunrecorder:reqTouchScreen}</code></td><td> The type of touch screen used by an application.</td></tr>
           </table>
           @see #AndroidManifestUsesConfiguration_reqFiveWayNav
           @see #AndroidManifestUsesConfiguration_reqHardKeyboard
           @see #AndroidManifestUsesConfiguration_reqKeyboardType
           @see #AndroidManifestUsesConfiguration_reqNavigation
           @see #AndroidManifestUsesConfiguration_reqTouchScreen
         */
        public static final int[] AndroidManifestUsesConfiguration = {
            0x7f010436, 0x7f010437, 0x7f010438, 0x7f010439,
            0x7f01043a
        };
        /**
          <p>
          @attr description
           Application's requirement for five way navigation 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:reqFiveWayNav
        */
        public static final int AndroidManifestUsesConfiguration_reqFiveWayNav = 4;
        /**
          <p>
          @attr description
           Application's requirement for a hard keyboard 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:reqHardKeyboard
        */
        public static final int AndroidManifestUsesConfiguration_reqHardKeyboard = 2;
        /**
          <p>
          @attr description
           The input method preferred by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nokeys</code></td><td>1</td><td></td></tr>
<tr><td><code>qwerty</code></td><td>2</td><td></td></tr>
<tr><td><code>twelvekey</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:reqKeyboardType
        */
        public static final int AndroidManifestUsesConfiguration_reqKeyboardType = 1;
        /**
          <p>
          @attr description
           The navigation device preferred by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>nonav</code></td><td>1</td><td></td></tr>
<tr><td><code>dpad</code></td><td>2</td><td></td></tr>
<tr><td><code>trackball</code></td><td>3</td><td></td></tr>
<tr><td><code>wheel</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:reqNavigation
        */
        public static final int AndroidManifestUsesConfiguration_reqNavigation = 3;
        /**
          <p>
          @attr description
           The type of touch screen used by an application. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>undefined</code></td><td>0</td><td></td></tr>
<tr><td><code>notouch</code></td><td>1</td><td></td></tr>
<tr><td><code>stylus</code></td><td>2</td><td></td></tr>
<tr><td><code>finger</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:reqTouchScreen
        */
        public static final int AndroidManifestUsesConfiguration_reqTouchScreen = 0;
        /**  The <code>uses-feature</code> tag specifies
         a specific feature used by the application.
         For example an application might specify that it requires
         specific version of OpenGL. Multiple such attribute
         values can be specified by the application.

         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesFeature_glEsVersion app.guchagucharr.guchagucharunrecorder:glEsVersion}</code></td><td> The GLES driver version number needed by an application.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesFeature_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td>  The name of the feature that is being used.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesFeature_required app.guchagucharr.guchagucharunrecorder:required}</code></td><td>  Specify whether this feature is required for the application.</td></tr>
           </table>
           @see #AndroidManifestUsesFeature_glEsVersion
           @see #AndroidManifestUsesFeature_name
           @see #AndroidManifestUsesFeature_required
         */
        public static final int[] AndroidManifestUsesFeature = {
            0x7f01040b, 0x7f010447, 0x7f010448
        };
        /**
          <p>
          @attr description
           The GLES driver version number needed by an application.
             The higher 16 bits represent the major number and the lower 16 bits
             represent the minor number. For example for GL 1.2 referring to
             0x00000102, the actual value should be set as 0x00010002. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:glEsVersion
        */
        public static final int AndroidManifestUsesFeature_glEsVersion = 1;
        /**
          <p>
          @attr description
            The name of the feature that is being used. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestUsesFeature_name = 0;
        /**
          <p>
          @attr description
            Specify whether this feature is required for the application.
              The default is true, meaning the application requires the
              feature, and does not want to be installed on devices that
              don't support it.  If you set this to false, then this will
              not impose a restriction on where the application can be
              installed. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:required
        */
        public static final int AndroidManifestUsesFeature_required = 2;
        /**  The <code>uses-libraries</code> specifies a shared library that this
         package requires to be linked against.  Specifying this flag tells the
         system to include this library's code in your class loader.
         
         <p>This appears as a child tag of the
         {@link #AndroidManifestApplication application} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesLibrary_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the library you use.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesLibrary_required app.guchagucharr.guchagucharunrecorder:required}</code></td><td>  Specify whether this library is required for the application.</td></tr>
           </table>
           @see #AndroidManifestUsesLibrary_name
           @see #AndroidManifestUsesLibrary_required
         */
        public static final int[] AndroidManifestUsesLibrary = {
            0x7f01040b, 0x7f010448
        };
        /**
          <p>
          @attr description
           Required name of the library you use. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestUsesLibrary_name = 0;
        /**
          <p>
          @attr description
            Specify whether this library is required for the application.
              The default is true, meaning the application requires the
              library, and does not want to be installed on devices that
              don't support it.  If you set this to false, then this will
              allow the application to be installed even if the library
              doesn't exist, and you will need to check for its presence
              dynamically at runtime. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:required
        */
        public static final int AndroidManifestUsesLibrary_required = 1;
        /**  The <code>uses-permission</code> tag requests a
         {@link #AndroidManifestPermission &lt;permission&gt;} that the containing
         package must be granted in order for it to operate correctly.
         See the <a href="{@docRoot}guide/topics/security/security.html">Security and Permissions</a>
         document for more information on permissions.  Also available is a
         {@link android.Manifest.permission list of permissions} included
         with the base platform.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
  Specify whether this permission is required for the application.
              The default is true, meaning the application requires the
              permission, and it must always be granted when it is installed.
              If you set this to false, then in some cases the application may
              be installed with it being granted the permission, and it will
              need to request the permission later if it needs it.
        <attr name="required" format="boolean" />
        
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesPermission_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the permission you use, as published with the
        corresponding name attribute of a
        {@link android.R.styleable#AndroidManifestPermission &lt;permission&gt;}
        tag; often this is one of the {@link android.Manifest.permission standard
        system permissions}.</td></tr>
           </table>
           @see #AndroidManifestUsesPermission_name
         */
        public static final int[] AndroidManifestUsesPermission = {
            0x7f01040b
        };
        /**
          <p>
          @attr description
           Required name of the permission you use, as published with the
        corresponding name attribute of a
        {@link android.R.styleable#AndroidManifestPermission &lt;permission&gt;}
        tag; often this is one of the {@link android.Manifest.permission standard
        system permissions}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int AndroidManifestUsesPermission_name = 0;
        /**  The <code>uses-sdk</code> tag describes the SDK features that the
         containing package must be running on to operate correctly.
         
         <p>This appears as a child tag of the root
         {@link #AndroidManifest manifest} tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AndroidManifestUsesSdk_maxSdkVersion app.guchagucharr.guchagucharunrecorder:maxSdkVersion}</code></td><td> This is the maximum SDK version number that an application works
             on.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesSdk_minSdkVersion app.guchagucharr.guchagucharunrecorder:minSdkVersion}</code></td><td> This is the minimum SDK version number that the application
             requires.</td></tr>
           <tr><td><code>{@link #AndroidManifestUsesSdk_targetSdkVersion app.guchagucharr.guchagucharunrecorder:targetSdkVersion}</code></td><td> This is the SDK version number that the application is targeting.</td></tr>
           </table>
           @see #AndroidManifestUsesSdk_maxSdkVersion
           @see #AndroidManifestUsesSdk_minSdkVersion
           @see #AndroidManifestUsesSdk_targetSdkVersion
         */
        public static final int[] AndroidManifestUsesSdk = {
            0x7f010449, 0x7f01044a, 0x7f01044b
        };
        /**
          <p>
          @attr description
           This is the maximum SDK version number that an application works
             on.  You can use this to ensure your application is filtered out
             of later versions of the platform when you know you have
             incompatibility with them. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxSdkVersion
        */
        public static final int AndroidManifestUsesSdk_maxSdkVersion = 2;
        /**
          <p>
          @attr description
           This is the minimum SDK version number that the application
             requires.  This number is an abstract integer, from the list
             in {@link android.os.Build.VERSION_CODES}  If
             not supplied, the application will work on any SDK.  This
             may also be string (such as "Donut") if the application was built
             against a development branch, in which case it will only work against
             the development builds. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minSdkVersion
        */
        public static final int AndroidManifestUsesSdk_minSdkVersion = 0;
        /**
          <p>
          @attr description
           This is the SDK version number that the application is targeting.
             It is able to run on older versions (down to minSdkVersion), but
             was explicitly tested to work with the version specified here.
             Specifying this version allows the platform to disable compatibility
             code that are not required or enable newer features that are not
             available to older applications.  This may also be a string
             (such as "Donut") if this is built against a development
             branch, in which case minSdkVersion is also forced to be that
             string. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetSdkVersion
        */
        public static final int AndroidManifestUsesSdk_targetSdkVersion = 1;
        /** Attributes that can be used with a AnimatedRotateDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_frameDuration app.guchagucharr.guchagucharunrecorder:frameDuration}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_framesCount app.guchagucharr.guchagucharunrecorder:framesCount}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_pivotX app.guchagucharr.guchagucharunrecorder:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_pivotY app.guchagucharr.guchagucharunrecorder:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimatedRotateDrawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #AnimatedRotateDrawable_drawable
           @see #AnimatedRotateDrawable_frameDuration
           @see #AnimatedRotateDrawable_framesCount
           @see #AnimatedRotateDrawable_pivotX
           @see #AnimatedRotateDrawable_pivotY
           @see #AnimatedRotateDrawable_visible
         */
        public static final int[] AnimatedRotateDrawable = {
            0x7f0102d5, 0x7f0102dd, 0x7f0102fd, 0x7f0102fe,
            0x7f0102ff, 0x7f010300
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int AnimatedRotateDrawable_drawable = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#frameDuration}
          attribute's value can be found in the {@link #AnimatedRotateDrawable} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:frameDuration
        */
        public static final int AnimatedRotateDrawable_frameDuration = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#framesCount}
          attribute's value can be found in the {@link #AnimatedRotateDrawable} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:framesCount
        */
        public static final int AnimatedRotateDrawable_framesCount = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotX}
          attribute's value can be found in the {@link #AnimatedRotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotX
        */
        public static final int AnimatedRotateDrawable_pivotX = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotY}
          attribute's value can be found in the {@link #AnimatedRotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotY
        */
        public static final int AnimatedRotateDrawable_pivotY = 3;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int AnimatedRotateDrawable_visible = 0;
        /** Attributes that can be used with a Animation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Animation_background app.guchagucharr.guchagucharunrecorder:background}</code></td><td> Special background behind animation.</td></tr>
           <tr><td><code>{@link #Animation_detachWallpaper app.guchagucharr.guchagucharunrecorder:detachWallpaper}</code></td><td> Special option for window animations: if this window is on top
             of a wallpaper, don't animate the wallpaper with it.</td></tr>
           <tr><td><code>{@link #Animation_duration app.guchagucharr.guchagucharunrecorder:duration}</code></td><td> Amount of time (in milliseconds) for the animation to run.</td></tr>
           <tr><td><code>{@link #Animation_fillAfter app.guchagucharr.guchagucharunrecorder:fillAfter}</code></td><td> When set to true, the animation transformation is applied after the animation is
             over.</td></tr>
           <tr><td><code>{@link #Animation_fillBefore app.guchagucharr.guchagucharunrecorder:fillBefore}</code></td><td> When set to true or when fillEnabled is not set to true, the animation transformation
             is applied before the animation has started.</td></tr>
           <tr><td><code>{@link #Animation_fillEnabled app.guchagucharr.guchagucharunrecorder:fillEnabled}</code></td><td> When set to true, the value of fillBefore is taken into account.</td></tr>
           <tr><td><code>{@link #Animation_interpolator app.guchagucharr.guchagucharunrecorder:interpolator}</code></td><td> Defines the interpolator used to smooth the animation movement in time.</td></tr>
           <tr><td><code>{@link #Animation_repeatCount app.guchagucharr.guchagucharunrecorder:repeatCount}</code></td><td> Defines how many times the animation should repeat.</td></tr>
           <tr><td><code>{@link #Animation_repeatMode app.guchagucharr.guchagucharunrecorder:repeatMode}</code></td><td> Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite.</td></tr>
           <tr><td><code>{@link #Animation_startOffset app.guchagucharr.guchagucharunrecorder:startOffset}</code></td><td> Delay in milliseconds before the animation runs, once start time is reached.</td></tr>
           <tr><td><code>{@link #Animation_zAdjustment app.guchagucharr.guchagucharunrecorder:zAdjustment}</code></td><td> Allows for an adjustment of the Z ordering of the content being
             animated for the duration of the animation.</td></tr>
           </table>
           @see #Animation_background
           @see #Animation_detachWallpaper
           @see #Animation_duration
           @see #Animation_fillAfter
           @see #Animation_fillBefore
           @see #Animation_fillEnabled
           @see #Animation_interpolator
           @see #Animation_repeatCount
           @see #Animation_repeatMode
           @see #Animation_startOffset
           @see #Animation_zAdjustment
         */
        public static final int[] Animation = {
            0x7f010166, 0x7f010228, 0x7f0102dc, 0x7f01030d,
            0x7f01030e, 0x7f01030f, 0x7f010310, 0x7f010311,
            0x7f010312, 0x7f010313, 0x7f010314
        };
        /**
          <p>
          @attr description
           Special background behind animation.  Only for use with window
             animations.  Can only be a color, and only black.  If 0, the
             default, there is no background. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:background
        */
        public static final int Animation_background = 0;
        /**
          <p>
          @attr description
           Special option for window animations: if this window is on top
             of a wallpaper, don't animate the wallpaper with it. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:detachWallpaper
        */
        public static final int Animation_detachWallpaper = 10;
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) for the animation to run. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:duration
        */
        public static final int Animation_duration = 2;
        /**
          <p>
          @attr description
           When set to true, the animation transformation is applied after the animation is
             over. The default value is false. If fillEnabled is not set to true and the
             animation is not set on a View, fillAfter is assumed to be true.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillAfter
        */
        public static final int Animation_fillAfter = 5;
        /**
          <p>
          @attr description
           When set to true or when fillEnabled is not set to true, the animation transformation
             is applied before the animation has started. The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillBefore
        */
        public static final int Animation_fillBefore = 4;
        /**
          <p>
          @attr description
           When set to true, the value of fillBefore is taken into account. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillEnabled
        */
        public static final int Animation_fillEnabled = 3;
        /**
          <p>
          @attr description
           Defines the interpolator used to smooth the animation movement in time. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:interpolator
        */
        public static final int Animation_interpolator = 1;
        /**
          <p>
          @attr description
           Defines how many times the animation should repeat. The default value is 0. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>infinite</code></td><td>-1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:repeatCount
        */
        public static final int Animation_repeatCount = 7;
        /**
          <p>
          @attr description
           Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>restart</code></td><td>1</td><td> The animation starts again from the beginning. </td></tr>
<tr><td><code>reverse</code></td><td>2</td><td> The animation plays backward. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:repeatMode
        */
        public static final int Animation_repeatMode = 8;
        /**
          <p>
          @attr description
           Delay in milliseconds before the animation runs, once start time is reached. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:startOffset
        */
        public static final int Animation_startOffset = 6;
        /**
          <p>
          @attr description
           Allows for an adjustment of the Z ordering of the content being
             animated for the duration of the animation.  The default value is normal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> The content being animated be kept in its current Z order. </td></tr>
<tr><td><code>top</code></td><td>1</td><td> The content being animated is forced on top of all other
                 content for the duration of the animation. </td></tr>
<tr><td><code>bottom</code></td><td>-1</td><td> The content being animated is forced under all other
                 content for the duration of the animation. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:zAdjustment
        */
        public static final int Animation_zAdjustment = 9;
        /**  Drawable used to render several animated frames. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimationDrawable_oneshot app.guchagucharr.guchagucharunrecorder:oneshot}</code></td><td> If true, the animation will only run a single time and then
             stop.</td></tr>
           <tr><td><code>{@link #AnimationDrawable_variablePadding app.guchagucharr.guchagucharunrecorder:variablePadding}</code></td><td> If true, allows the drawable's padding to change based on the
             current state that is selected.</td></tr>
           <tr><td><code>{@link #AnimationDrawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #AnimationDrawable_oneshot
           @see #AnimationDrawable_variablePadding
           @see #AnimationDrawable_visible
         */
        public static final int[] AnimationDrawable = {
            0x7f0102d5, 0x7f0102d6, 0x7f0102db
        };
        /**
          <p>
          @attr description
           If true, the animation will only run a single time and then
             stop.  If false (the default), it will continually run,
             restarting at the first frame after the last has finished. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:oneshot
        */
        public static final int AnimationDrawable_oneshot = 2;
        /**
          <p>
          @attr description
           If true, allows the drawable's padding to change based on the
             current state that is selected.  If false, the padding will
             stay the same (based on the maximum padding of all the states).
             Enabling this feature requires that the owner of the drawable
             deal with performing layout when the state changes, which is
             often not supported. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:variablePadding
        */
        public static final int AnimationDrawable_variablePadding = 1;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int AnimationDrawable_visible = 0;
        /**  Represents a single frame inside an AnimationDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimationDrawableItem_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #AnimationDrawableItem_duration app.guchagucharr.guchagucharunrecorder:duration}</code></td><td> Amount of time (in milliseconds) to display this frame.</td></tr>
           </table>
           @see #AnimationDrawableItem_drawable
           @see #AnimationDrawableItem_duration
         */
        public static final int[] AnimationDrawableItem = {
            0x7f0102dc, 0x7f0102dd
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int AnimationDrawableItem_drawable = 1;
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) to display this frame. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:duration
        */
        public static final int AnimationDrawableItem_duration = 0;
        /** Attributes that can be used with a AnimationSet.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimationSet_duration app.guchagucharr.guchagucharunrecorder:duration}</code></td><td> Amount of time (in milliseconds) to display this frame.</td></tr>
           <tr><td><code>{@link #AnimationSet_fillAfter app.guchagucharr.guchagucharunrecorder:fillAfter}</code></td><td> When set to true, the animation transformation is applied after the animation is
             over.</td></tr>
           <tr><td><code>{@link #AnimationSet_fillBefore app.guchagucharr.guchagucharunrecorder:fillBefore}</code></td><td> When set to true or when fillEnabled is not set to true, the animation transformation
             is applied before the animation has started.</td></tr>
           <tr><td><code>{@link #AnimationSet_repeatMode app.guchagucharr.guchagucharunrecorder:repeatMode}</code></td><td> Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite.</td></tr>
           <tr><td><code>{@link #AnimationSet_shareInterpolator app.guchagucharr.guchagucharunrecorder:shareInterpolator}</code></td><td></td></tr>
           <tr><td><code>{@link #AnimationSet_startOffset app.guchagucharr.guchagucharunrecorder:startOffset}</code></td><td> Delay in milliseconds before the animation runs, once start time is reached.</td></tr>
           </table>
           @see #AnimationSet_duration
           @see #AnimationSet_fillAfter
           @see #AnimationSet_fillBefore
           @see #AnimationSet_repeatMode
           @see #AnimationSet_shareInterpolator
           @see #AnimationSet_startOffset
         */
        public static final int[] AnimationSet = {
            0x7f0102dc, 0x7f01030e, 0x7f01030f, 0x7f010310,
            0x7f010312, 0x7f010315
        };
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) to display this frame. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:duration
        */
        public static final int AnimationSet_duration = 0;
        /**
          <p>
          @attr description
           When set to true, the animation transformation is applied after the animation is
             over. The default value is false. If fillEnabled is not set to true and the
             animation is not set on a View, fillAfter is assumed to be true.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillAfter
        */
        public static final int AnimationSet_fillAfter = 2;
        /**
          <p>
          @attr description
           When set to true or when fillEnabled is not set to true, the animation transformation
             is applied before the animation has started. The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillBefore
        */
        public static final int AnimationSet_fillBefore = 1;
        /**
          <p>
          @attr description
           Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>restart</code></td><td>1</td><td> The animation starts again from the beginning. </td></tr>
<tr><td><code>reverse</code></td><td>2</td><td> The animation plays backward. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:repeatMode
        */
        public static final int AnimationSet_repeatMode = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#shareInterpolator}
          attribute's value can be found in the {@link #AnimationSet} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:shareInterpolator
        */
        public static final int AnimationSet_shareInterpolator = 5;
        /**
          <p>
          @attr description
           Delay in milliseconds before the animation runs, once start time is reached. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:startOffset
        */
        public static final int AnimationSet_startOffset = 3;
        /** Attributes that can be used with a Animator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Animator_duration app.guchagucharr.guchagucharunrecorder:duration}</code></td><td> Amount of time (in milliseconds) for the animation to run.</td></tr>
           <tr><td><code>{@link #Animator_interpolator app.guchagucharr.guchagucharunrecorder:interpolator}</code></td><td> Defines the interpolator used to smooth the animation movement in time.</td></tr>
           <tr><td><code>{@link #Animator_repeatCount app.guchagucharr.guchagucharunrecorder:repeatCount}</code></td><td> Defines how many times the animation should repeat.</td></tr>
           <tr><td><code>{@link #Animator_repeatMode app.guchagucharr.guchagucharunrecorder:repeatMode}</code></td><td> Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite.</td></tr>
           <tr><td><code>{@link #Animator_startOffset app.guchagucharr.guchagucharunrecorder:startOffset}</code></td><td> Delay in milliseconds before the animation runs, once start time is reached.</td></tr>
           <tr><td><code>{@link #Animator_valueFrom app.guchagucharr.guchagucharunrecorder:valueFrom}</code></td><td> Value the animation starts from.</td></tr>
           <tr><td><code>{@link #Animator_valueTo app.guchagucharr.guchagucharunrecorder:valueTo}</code></td><td> Value the animation animates to.</td></tr>
           <tr><td><code>{@link #Animator_valueType app.guchagucharr.guchagucharunrecorder:valueType}</code></td><td> The type of valueFrom and valueTo.</td></tr>
           </table>
           @see #Animator_duration
           @see #Animator_interpolator
           @see #Animator_repeatCount
           @see #Animator_repeatMode
           @see #Animator_startOffset
           @see #Animator_valueFrom
           @see #Animator_valueTo
           @see #Animator_valueType
         */
        public static final int[] Animator = {
            0x7f010228, 0x7f0102dc, 0x7f010310, 0x7f010311,
            0x7f010312, 0x7f01032b, 0x7f01032c, 0x7f01032d
        };
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) for the animation to run. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:duration
        */
        public static final int Animator_duration = 1;
        /**
          <p>
          @attr description
           Defines the interpolator used to smooth the animation movement in time. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:interpolator
        */
        public static final int Animator_interpolator = 0;
        /**
          <p>
          @attr description
           Defines how many times the animation should repeat. The default value is 0. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>infinite</code></td><td>-1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:repeatCount
        */
        public static final int Animator_repeatCount = 3;
        /**
          <p>
          @attr description
           Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>restart</code></td><td>1</td><td> The animation starts again from the beginning. </td></tr>
<tr><td><code>reverse</code></td><td>2</td><td> The animation plays backward. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:repeatMode
        */
        public static final int Animator_repeatMode = 4;
        /**
          <p>
          @attr description
           Delay in milliseconds before the animation runs, once start time is reached. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:startOffset
        */
        public static final int Animator_startOffset = 2;
        /**
          <p>
          @attr description
           Value the animation starts from. 


          <p>May be an integer value, such as "<code>100</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:valueFrom
        */
        public static final int Animator_valueFrom = 5;
        /**
          <p>
          @attr description
           Value the animation animates to. 


          <p>May be an integer value, such as "<code>100</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:valueTo
        */
        public static final int Animator_valueTo = 6;
        /**
          <p>
          @attr description
           The type of valueFrom and valueTo. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>floatType</code></td><td>0</td><td> valueFrom and valueTo are floats. This is the default value is valueType is
                 unspecified. Note that if either valueFrom or valueTo represent colors
                 (beginning with "#"), then this attribute is ignored and the color values are
                 interpreted as integers. </td></tr>
<tr><td><code>intType</code></td><td>1</td><td> valueFrom and valueTo are integers. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:valueType
        */
        public static final int Animator_valueType = 7;
        /** Attributes that can be used with a AnimatorSet.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnimatorSet_ordering app.guchagucharr.guchagucharunrecorder:ordering}</code></td><td> Name of the property being animated.</td></tr>
           </table>
           @see #AnimatorSet_ordering
         */
        public static final int[] AnimatorSet = {
            0x7f01032f
        };
        /**
          <p>
          @attr description
           Name of the property being animated. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>together</code></td><td>0</td><td> child animations should be played together. </td></tr>
<tr><td><code>sequentially</code></td><td>1</td><td> child animations should be played sequentially, in the same order as the xml. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ordering
        */
        public static final int AnimatorSet_ordering = 0;
        /** Attributes that can be used with a AnticipateInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnticipateInterpolator_tension app.guchagucharr.guchagucharunrecorder:tension}</code></td><td> This is the amount of tension.</td></tr>
           </table>
           @see #AnticipateInterpolator_tension
         */
        public static final int[] AnticipateInterpolator = {
            0x7f010329
        };
        /**
          <p>
          @attr description
           This is the amount of tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tension
        */
        public static final int AnticipateInterpolator_tension = 0;
        /** Attributes that can be used with a AnticipateOvershootInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnticipateOvershootInterpolator_extraTension app.guchagucharr.guchagucharunrecorder:extraTension}</code></td><td> This is the amount by which to multiply the tension.</td></tr>
           <tr><td><code>{@link #AnticipateOvershootInterpolator_tension app.guchagucharr.guchagucharunrecorder:tension}</code></td><td> This is the amount of tension.</td></tr>
           </table>
           @see #AnticipateOvershootInterpolator_extraTension
           @see #AnticipateOvershootInterpolator_tension
         */
        public static final int[] AnticipateOvershootInterpolator = {
            0x7f010329, 0x7f01032a
        };
        /**
          <p>
          @attr description
           This is the amount by which to multiply the tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:extraTension
        */
        public static final int AnticipateOvershootInterpolator_extraTension = 1;
        /**
          <p>
          @attr description
           This is the amount of tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tension
        */
        public static final int AnticipateOvershootInterpolator_tension = 0;
        /**  Use <code>appwidget-provider</code> as the root tag of the XML resource that
         describes an AppWidget provider.  See {@link android.appwidget android.appwidget}
         package for more info.
     
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_autoAdvanceViewId app.guchagucharr.guchagucharunrecorder:autoAdvanceViewId}</code></td><td> The view id of the AppWidget subview which should be auto-advanced.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_configure app.guchagucharr.guchagucharunrecorder:configure}</code></td><td> A class name in the AppWidget's package to be launched to configure.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_initialKeyguardLayout app.guchagucharr.guchagucharunrecorder:initialKeyguardLayout}</code></td><td> A resource id of a layout.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_initialLayout app.guchagucharr.guchagucharunrecorder:initialLayout}</code></td><td> A resource id of a layout.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_minHeight app.guchagucharr.guchagucharunrecorder:minHeight}</code></td><td> Minimum height of the AppWidget.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_minResizeHeight app.guchagucharr.guchagucharunrecorder:minResizeHeight}</code></td><td> Minimum height that the AppWidget can be resized to.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_minResizeWidth app.guchagucharr.guchagucharunrecorder:minResizeWidth}</code></td><td> Minimum width that the AppWidget can be resized to.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_minWidth app.guchagucharr.guchagucharunrecorder:minWidth}</code></td><td> Minimum width of the AppWidget.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_previewImage app.guchagucharr.guchagucharunrecorder:previewImage}</code></td><td> A preview of what the AppWidget will look like after it's configured.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_resizeMode app.guchagucharr.guchagucharunrecorder:resizeMode}</code></td><td> Optional parameter which indicates if and how this widget can be
             resized.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_updatePeriodMillis app.guchagucharr.guchagucharunrecorder:updatePeriodMillis}</code></td><td> Update period in milliseconds, or 0 if the AppWidget will update itself.</td></tr>
           <tr><td><code>{@link #AppWidgetProviderInfo_widgetCategory app.guchagucharr.guchagucharunrecorder:widgetCategory}</code></td><td> Optional parameter which indicates where this widget can be shown,
             ie.</td></tr>
           </table>
           @see #AppWidgetProviderInfo_autoAdvanceViewId
           @see #AppWidgetProviderInfo_configure
           @see #AppWidgetProviderInfo_initialKeyguardLayout
           @see #AppWidgetProviderInfo_initialLayout
           @see #AppWidgetProviderInfo_minHeight
           @see #AppWidgetProviderInfo_minResizeHeight
           @see #AppWidgetProviderInfo_minResizeWidth
           @see #AppWidgetProviderInfo_minWidth
           @see #AppWidgetProviderInfo_previewImage
           @see #AppWidgetProviderInfo_resizeMode
           @see #AppWidgetProviderInfo_updatePeriodMillis
           @see #AppWidgetProviderInfo_widgetCategory
         */
        public static final int[] AppWidgetProviderInfo = {
            0x7f010226, 0x7f010227, 0x7f0103a2, 0x7f0103a3,
            0x7f0103a4, 0x7f0103a5, 0x7f0103a6, 0x7f0103a7,
            0x7f0103a8, 0x7f0103a9, 0x7f0103aa, 0x7f0103ab
        };
        /**
          <p>
          @attr description
           The view id of the AppWidget subview which should be auto-advanced.
             by the widget's host. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoAdvanceViewId
        */
        public static final int AppWidgetProviderInfo_autoAdvanceViewId = 9;
        /**
          <p>
          @attr description
           A class name in the AppWidget's package to be launched to configure.
             If not supplied, then no activity will be launched. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:configure
        */
        public static final int AppWidgetProviderInfo_configure = 7;
        /**
          <p>
          @attr description
           A resource id of a layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:initialKeyguardLayout
        */
        public static final int AppWidgetProviderInfo_initialKeyguardLayout = 6;
        /**
          <p>
          @attr description
           A resource id of a layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:initialLayout
        */
        public static final int AppWidgetProviderInfo_initialLayout = 5;
        /**
          <p>
          @attr description
           Minimum height of the AppWidget. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minHeight
        */
        public static final int AppWidgetProviderInfo_minHeight = 1;
        /**
          <p>
          @attr description
           Minimum height that the AppWidget can be resized to. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minResizeHeight
        */
        public static final int AppWidgetProviderInfo_minResizeHeight = 3;
        /**
          <p>
          @attr description
           Minimum width that the AppWidget can be resized to. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minResizeWidth
        */
        public static final int AppWidgetProviderInfo_minResizeWidth = 2;
        /**
          <p>
          @attr description
           Minimum width of the AppWidget. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minWidth
        */
        public static final int AppWidgetProviderInfo_minWidth = 0;
        /**
          <p>
          @attr description
           A preview of what the AppWidget will look like after it's configured.
              If not supplied, the AppWidget's icon will be used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:previewImage
        */
        public static final int AppWidgetProviderInfo_previewImage = 8;
        /**
          <p>
          @attr description
           Optional parameter which indicates if and how this widget can be
             resized. Supports combined values using | operator. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td></td></tr>
<tr><td><code>horizontal</code></td><td>0x1</td><td></td></tr>
<tr><td><code>vertical</code></td><td>0x2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:resizeMode
        */
        public static final int AppWidgetProviderInfo_resizeMode = 10;
        /**
          <p>
          @attr description
           Update period in milliseconds, or 0 if the AppWidget will update itself. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:updatePeriodMillis
        */
        public static final int AppWidgetProviderInfo_updatePeriodMillis = 4;
        /**
          <p>
          @attr description
           Optional parameter which indicates where this widget can be shown,
             ie. home screen, keyguard or both.
             resized. Supports combined values using | operator. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>home_screen</code></td><td>0x1</td><td></td></tr>
<tr><td><code>keyguard</code></td><td>0x2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:widgetCategory
        */
        public static final int AppWidgetProviderInfo_widgetCategory = 11;
        /** Attributes that can be used with a AutoCompleteTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AutoCompleteTextView_completionHint app.guchagucharr.guchagucharunrecorder:completionHint}</code></td><td> Defines the hint displayed in the drop down menu.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_completionHintView app.guchagucharr.guchagucharunrecorder:completionHintView}</code></td><td> Defines the hint view displayed in the drop down menu.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_completionThreshold app.guchagucharr.guchagucharunrecorder:completionThreshold}</code></td><td> Defines the number of characters that the user must type before
         completion suggestions are displayed in a drop down menu.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownAnchor app.guchagucharr.guchagucharunrecorder:dropDownAnchor}</code></td><td> View to anchor the auto-complete dropdown to.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownHeight app.guchagucharr.guchagucharunrecorder:dropDownHeight}</code></td><td> Specifies the basic height of the dropdown.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownHorizontalOffset app.guchagucharr.guchagucharunrecorder:dropDownHorizontalOffset}</code></td><td> Amount of pixels by which the drop down should be offset horizontally.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownSelector app.guchagucharr.guchagucharunrecorder:dropDownSelector}</code></td><td> Selector in a drop down list.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownVerticalOffset app.guchagucharr.guchagucharunrecorder:dropDownVerticalOffset}</code></td><td> Amount of pixels by which the drop down should be offset vertically.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_dropDownWidth app.guchagucharr.guchagucharunrecorder:dropDownWidth}</code></td><td> Specifies the basic width of the dropdown.</td></tr>
           <tr><td><code>{@link #AutoCompleteTextView_inputType app.guchagucharr.guchagucharunrecorder:inputType}</code></td><td> The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.</td></tr>
           </table>
           @see #AutoCompleteTextView_completionHint
           @see #AutoCompleteTextView_completionHintView
           @see #AutoCompleteTextView_completionThreshold
           @see #AutoCompleteTextView_dropDownAnchor
           @see #AutoCompleteTextView_dropDownHeight
           @see #AutoCompleteTextView_dropDownHorizontalOffset
           @see #AutoCompleteTextView_dropDownSelector
           @see #AutoCompleteTextView_dropDownVerticalOffset
           @see #AutoCompleteTextView_dropDownWidth
           @see #AutoCompleteTextView_inputType
         */
        public static final int[] AutoCompleteTextView = {
            0x7f010123, 0x7f01026f, 0x7f010270, 0x7f010271,
            0x7f010272, 0x7f010273, 0x7f010274, 0x7f010275,
            0x7f010276, 0x7f010277
        };
        /**
          <p>
          @attr description
           Defines the hint displayed in the drop down menu. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:completionHint
        */
        public static final int AutoCompleteTextView_completionHint = 1;
        /**
          <p>
          @attr description
           Defines the hint view displayed in the drop down menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:completionHintView
        */
        public static final int AutoCompleteTextView_completionHintView = 2;
        /**
          <p>
          @attr description
           Defines the number of characters that the user must type before
         completion suggestions are displayed in a drop down menu. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:completionThreshold
        */
        public static final int AutoCompleteTextView_completionThreshold = 3;
        /**
          <p>
          @attr description
           View to anchor the auto-complete dropdown to. If not specified, the text view itself
             is used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownAnchor
        */
        public static final int AutoCompleteTextView_dropDownAnchor = 7;
        /**
          <p>
          @attr description
           Specifies the basic height of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant height,
             fill_parent or match_parent to fill the height of the
             screen, or wrap_content to match the height of
             the content of the drop down. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the height of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the height of the content. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownHeight
        */
        public static final int AutoCompleteTextView_dropDownHeight = 9;
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset horizontally. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownHorizontalOffset
        */
        public static final int AutoCompleteTextView_dropDownHorizontalOffset = 6;
        /**
          <p>
          @attr description
           Selector in a drop down list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownSelector
        */
        public static final int AutoCompleteTextView_dropDownSelector = 4;
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset vertically. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownVerticalOffset
        */
        public static final int AutoCompleteTextView_dropDownVerticalOffset = 5;
        /**
          <p>
          @attr description
           Specifies the basic width of the dropdown. Its value may
             be a dimension (such as "12dip") for a constant width,
             fill_parent or match_parent to match the width of the
             screen, or wrap_content to match the width of
             the anchored view. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fill the width of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the width of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the width of its anchor. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownWidth
        */
        public static final int AutoCompleteTextView_dropDownWidth = 8;
        /**
          <p>
          @attr description
           The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inputType
        */
        public static final int AutoCompleteTextView_inputType = 0;
        /**  Drawable used to draw bitmaps. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BitmapDrawable_antialias app.guchagucharr.guchagucharunrecorder:antialias}</code></td><td> Enables or disables antialiasing.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_dither app.guchagucharr.guchagucharunrecorder:dither}</code></td><td> Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen).</td></tr>
           <tr><td><code>{@link #BitmapDrawable_filter app.guchagucharr.guchagucharunrecorder:filter}</code></td><td> Enables or disables bitmap filtering.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Defines the gravity for the bitmap.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_src app.guchagucharr.guchagucharunrecorder:src}</code></td><td> Identifier of the bitmap file.</td></tr>
           <tr><td><code>{@link #BitmapDrawable_tileMode app.guchagucharr.guchagucharunrecorder:tileMode}</code></td><td> Defines the tile mode.</td></tr>
           </table>
           @see #BitmapDrawable_antialias
           @see #BitmapDrawable_dither
           @see #BitmapDrawable_filter
           @see #BitmapDrawable_gravity
           @see #BitmapDrawable_src
           @see #BitmapDrawable_tileMode
         */
        public static final int[] BitmapDrawable = {
            0x7f010127, 0x7f0101ee, 0x7f0102d8, 0x7f010305,
            0x7f010306, 0x7f010307
        };
        /**
          <p>
          @attr description
           Enables or disables antialiasing. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:antialias
        */
        public static final int BitmapDrawable_antialias = 3;
        /**
          <p>
          @attr description
           Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dither
        */
        public static final int BitmapDrawable_dither = 2;
        /**
          <p>
          @attr description
           Enables or disables bitmap filtering. Filtering is used when the bitmap is
             shrunk or stretched to smooth its apperance. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:filter
        */
        public static final int BitmapDrawable_filter = 4;
        /**
          <p>
          @attr description
           Defines the gravity for the bitmap. The gravity indicates where to position
             the drawable in its container if the bitmap is smaller than the container. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int BitmapDrawable_gravity = 0;
        /**
          <p>
          @attr description
           Identifier of the bitmap file. This attribute is mandatory. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:src
        */
        public static final int BitmapDrawable_src = 1;
        /**
          <p>
          @attr description
           Defines the tile mode. When the tile mode is enabled, the bitmap is repeated.
             Gravity is ignored when the tile mode is enabled. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>-1</td><td> Do not tile the bitmap. This is the default value. </td></tr>
<tr><td><code>clamp</code></td><td>0</td><td> Replicates the edge color. </td></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Repeats the bitmap in both direction. </td></tr>
<tr><td><code>mirror</code></td><td>2</td><td> Repeats the shader's image horizontally and vertically, alternating
                 mirror images so that adjacent images always seam. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tileMode
        */
        public static final int BitmapDrawable_tileMode = 5;
        /** Attributes that can be used with a Button.
         */
        public static final int[] Button = {
            
        };
        /** Attributes that can be used with a ButtonBarContainerTheme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ButtonBarContainerTheme_buttonBarButtonStyle app.guchagucharr.guchagucharunrecorder:buttonBarButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #ButtonBarContainerTheme_buttonBarStyle app.guchagucharr.guchagucharunrecorder:buttonBarStyle}</code></td><td></td></tr>
           </table>
           @see #ButtonBarContainerTheme_buttonBarButtonStyle
           @see #ButtonBarContainerTheme_buttonBarStyle
         */
        public static final int[] ButtonBarContainerTheme = {
            0x7f010011, 0x7f010012
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#buttonBarButtonStyle}
          attribute's value can be found in the {@link #ButtonBarContainerTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:buttonBarButtonStyle
        */
        public static final int ButtonBarContainerTheme_buttonBarButtonStyle = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#buttonBarStyle}
          attribute's value can be found in the {@link #ButtonBarContainerTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:buttonBarStyle
        */
        public static final int ButtonBarContainerTheme_buttonBarStyle = 0;
        /** Attributes that can be used with a CalendarView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CalendarView_dateTextAppearance app.guchagucharr.guchagucharunrecorder:dateTextAppearance}</code></td><td> The text appearance for the calendar dates.</td></tr>
           <tr><td><code>{@link #CalendarView_firstDayOfWeek app.guchagucharr.guchagucharunrecorder:firstDayOfWeek}</code></td><td> The first day of week according to {@link java.util.Calendar}.</td></tr>
           <tr><td><code>{@link #CalendarView_focusedMonthDateColor app.guchagucharr.guchagucharunrecorder:focusedMonthDateColor}</code></td><td> The color for the dates of the focused month.</td></tr>
           <tr><td><code>{@link #CalendarView_maxDate app.guchagucharr.guchagucharunrecorder:maxDate}</code></td><td> The minimal date shown by this calendar view in mm/dd/yyyy format.</td></tr>
           <tr><td><code>{@link #CalendarView_minDate app.guchagucharr.guchagucharunrecorder:minDate}</code></td><td> The minimal date shown by this calendar view in mm/dd/yyyy format.</td></tr>
           <tr><td><code>{@link #CalendarView_selectedDateVerticalBar app.guchagucharr.guchagucharunrecorder:selectedDateVerticalBar}</code></td><td> Drawable for the vertical bar shown at the beginning and at the end of the selected date.</td></tr>
           <tr><td><code>{@link #CalendarView_selectedWeekBackgroundColor app.guchagucharr.guchagucharunrecorder:selectedWeekBackgroundColor}</code></td><td> The background color for the selected week.</td></tr>
           <tr><td><code>{@link #CalendarView_showWeekNumber app.guchagucharr.guchagucharunrecorder:showWeekNumber}</code></td><td> Whether do show week numbers.</td></tr>
           <tr><td><code>{@link #CalendarView_shownWeekCount app.guchagucharr.guchagucharunrecorder:shownWeekCount}</code></td><td> The number of weeks to be shown.</td></tr>
           <tr><td><code>{@link #CalendarView_unfocusedMonthDateColor app.guchagucharr.guchagucharunrecorder:unfocusedMonthDateColor}</code></td><td> The color for the dates of an unfocused month.</td></tr>
           <tr><td><code>{@link #CalendarView_weekDayTextAppearance app.guchagucharr.guchagucharunrecorder:weekDayTextAppearance}</code></td><td> The text appearance for the week day abbreviation of the calendar header.</td></tr>
           <tr><td><code>{@link #CalendarView_weekNumberColor app.guchagucharr.guchagucharunrecorder:weekNumberColor}</code></td><td> The color for the week numbers.</td></tr>
           <tr><td><code>{@link #CalendarView_weekSeparatorLineColor app.guchagucharr.guchagucharunrecorder:weekSeparatorLineColor}</code></td><td> The color for the separator line between weeks.</td></tr>
           </table>
           @see #CalendarView_dateTextAppearance
           @see #CalendarView_firstDayOfWeek
           @see #CalendarView_focusedMonthDateColor
           @see #CalendarView_maxDate
           @see #CalendarView_minDate
           @see #CalendarView_selectedDateVerticalBar
           @see #CalendarView_selectedWeekBackgroundColor
           @see #CalendarView_showWeekNumber
           @see #CalendarView_shownWeekCount
           @see #CalendarView_unfocusedMonthDateColor
           @see #CalendarView_weekDayTextAppearance
           @see #CalendarView_weekNumberColor
           @see #CalendarView_weekSeparatorLineColor
         */
        public static final int[] CalendarView = {
            0x7f010289, 0x7f01028a, 0x7f0102c1, 0x7f0102c2,
            0x7f0102c3, 0x7f0102c4, 0x7f0102c5, 0x7f0102c6,
            0x7f0102c7, 0x7f0102c8, 0x7f0102c9, 0x7f0102ca,
            0x7f0102cb
        };
        /**
          <p>
          @attr description
           The text appearance for the calendar dates. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dateTextAppearance
        */
        public static final int CalendarView_dateTextAppearance = 12;
        /**
          <p>
          @attr description
           The first day of week according to {@link java.util.Calendar}. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:firstDayOfWeek
        */
        public static final int CalendarView_firstDayOfWeek = 2;
        /**
          <p>
          @attr description
           The color for the dates of the focused month. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:focusedMonthDateColor
        */
        public static final int CalendarView_focusedMonthDateColor = 6;
        /**
          <p>
          @attr description
           The minimal date shown by this calendar view in mm/dd/yyyy format. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxDate
        */
        public static final int CalendarView_maxDate = 1;
        /**
          <p>
          @attr description
           The minimal date shown by this calendar view in mm/dd/yyyy format. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minDate
        */
        public static final int CalendarView_minDate = 0;
        /**
          <p>
          @attr description
           Drawable for the vertical bar shown at the beginning and at the end of the selected date. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectedDateVerticalBar
        */
        public static final int CalendarView_selectedDateVerticalBar = 10;
        /**
          <p>
          @attr description
           The background color for the selected week. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectedWeekBackgroundColor
        */
        public static final int CalendarView_selectedWeekBackgroundColor = 5;
        /**
          <p>
          @attr description
           Whether do show week numbers. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:showWeekNumber
        */
        public static final int CalendarView_showWeekNumber = 3;
        /**
          <p>
          @attr description
           The number of weeks to be shown. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shownWeekCount
        */
        public static final int CalendarView_shownWeekCount = 4;
        /**
          <p>
          @attr description
           The color for the dates of an unfocused month. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:unfocusedMonthDateColor
        */
        public static final int CalendarView_unfocusedMonthDateColor = 7;
        /**
          <p>
          @attr description
           The text appearance for the week day abbreviation of the calendar header. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:weekDayTextAppearance
        */
        public static final int CalendarView_weekDayTextAppearance = 11;
        /**
          <p>
          @attr description
           The color for the week numbers. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:weekNumberColor
        */
        public static final int CalendarView_weekNumberColor = 8;
        /**
          <p>
          @attr description
           The color for the separator line between weeks. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:weekSeparatorLineColor
        */
        public static final int CalendarView_weekSeparatorLineColor = 9;
        /**  Base attributes available to CheckBoxPreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CheckBoxPreference_disableDependentsState app.guchagucharr.guchagucharunrecorder:disableDependentsState}</code></td><td> The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
           <tr><td><code>{@link #CheckBoxPreference_summaryOff app.guchagucharr.guchagucharunrecorder:summaryOff}</code></td><td> The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is unchecked.</td></tr>
           <tr><td><code>{@link #CheckBoxPreference_summaryOn app.guchagucharr.guchagucharunrecorder:summaryOn}</code></td><td> The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is checked.</td></tr>
           </table>
           @see #CheckBoxPreference_disableDependentsState
           @see #CheckBoxPreference_summaryOff
           @see #CheckBoxPreference_summaryOn
         */
        public static final int[] CheckBoxPreference = {
            0x7f010375, 0x7f010376, 0x7f010377
        };
        /**
          <p>
          @attr description
           The state (true for on, or false for off) that causes dependents to be disabled. By default,
             dependents will be disabled when this is unchecked, so the value of this preference is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:disableDependentsState
        */
        public static final int CheckBoxPreference_disableDependentsState = 2;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is unchecked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summaryOff
        */
        public static final int CheckBoxPreference_summaryOff = 1;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen when the
             CheckBoxPreference is checked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summaryOn
        */
        public static final int CheckBoxPreference_summaryOn = 0;
        /** Attributes that can be used with a CheckedTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CheckedTextView_checkMark app.guchagucharr.guchagucharunrecorder:checkMark}</code></td><td> Drawable used for the check mark graphic.</td></tr>
           <tr><td><code>{@link #CheckedTextView_checked app.guchagucharr.guchagucharunrecorder:checked}</code></td><td> Indicates the initial checked state of this text.</td></tr>
           </table>
           @see #CheckedTextView_checkMark
           @see #CheckedTextView_checked
         */
        public static final int[] CheckedTextView = {
            0x7f0101d8, 0x7f0101da
        };
        /**
          <p>
          @attr description
           Drawable used for the check mark graphic. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkMark
        */
        public static final int CheckedTextView_checkMark = 1;
        /**
          <p>
          @attr description
           Indicates the initial checked state of this text. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checked
        */
        public static final int CheckedTextView_checked = 0;
        /** Attributes that can be used with a Chronometer.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Chronometer_format app.guchagucharr.guchagucharunrecorder:format}</code></td><td> Format string: if specified, the Chronometer will display this
             string, with the first "%s" replaced by the current timer value
             in "MM:SS" or "H:MM:SS" form.</td></tr>
           </table>
           @see #Chronometer_format
         */
        public static final int[] Chronometer = {
            0x7f0101d7
        };
        /**
          <p>
          @attr description
           Format string: if specified, the Chronometer will display this
             string, with the first "%s" replaced by the current timer value
             in "MM:SS" or "H:MM:SS" form.
             If no format string is specified, the Chronometer will simply display
             "MM:SS" or "H:MM:SS". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:format
        */
        public static final int Chronometer_format = 0;
        /** Attributes that can be used with a ClipDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ClipDrawable_clipOrientation app.guchagucharr.guchagucharunrecorder:clipOrientation}</code></td><td> The orientation for the clip.</td></tr>
           <tr><td><code>{@link #ClipDrawable_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to draw with the specified scale.</td></tr>
           <tr><td><code>{@link #ClipDrawable_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies where to clip within the drawable.</td></tr>
           </table>
           @see #ClipDrawable_clipOrientation
           @see #ClipDrawable_drawable
           @see #ClipDrawable_gravity
         */
        public static final int[] ClipDrawable = {
            0x7f010127, 0x7f0102dd, 0x7f01030c
        };
        /**
          <p>
          @attr description
           The orientation for the clip. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> Clip the drawable horizontally. </td></tr>
<tr><td><code>vertical</code></td><td>2</td><td> Clip the drawable vertically. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:clipOrientation
        */
        public static final int ClipDrawable_clipOrientation = 2;
        /**
          <p>
          @attr description
           Reference to a drawable resource to draw with the specified scale. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int ClipDrawable_drawable = 1;
        /**
          <p>
          @attr description
           Specifies where to clip within the drawable. The default value is
             left. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int ClipDrawable_gravity = 0;
        /**  Drawable used to draw a single color. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ColorDrawable_color app.guchagucharr.guchagucharunrecorder:color}</code></td><td> The color to use.</td></tr>
           </table>
           @see #ColorDrawable_color
         */
        public static final int[] ColorDrawable = {
            0x7f0102ec
        };
        /**
          <p>
          @attr description
           The color to use. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:color
        */
        public static final int ColorDrawable_color = 0;
        /** Attributes that can be used with a CompoundButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CompoundButton_button app.guchagucharr.guchagucharunrecorder:button}</code></td><td> Drawable used for the button graphic (e.</td></tr>
           <tr><td><code>{@link #CompoundButton_checked app.guchagucharr.guchagucharunrecorder:checked}</code></td><td> Indicates the initial checked state of this button.</td></tr>
           </table>
           @see #CompoundButton_button
           @see #CompoundButton_checked
         */
        public static final int[] CompoundButton = {
            0x7f0101d8, 0x7f0101d9
        };
        /**
          <p>
          @attr description
           Drawable used for the button graphic (e.g. checkbox, radio button, etc). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:button
        */
        public static final int CompoundButton_button = 1;
        /**
          <p>
          @attr description
           Indicates the initial checked state of this button. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checked
        */
        public static final int CompoundButton_checked = 0;
        /**  Maps a specific contact data MIME-type to styling information. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ContactsDataKind_allContactsName app.guchagucharr.guchagucharunrecorder:allContactsName}</code></td><td> Resource representing the term "All Contacts" (e.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_detailColumn app.guchagucharr.guchagucharunrecorder:detailColumn}</code></td><td> Column in data table that contains details for this data.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_detailSocialSummary app.guchagucharr.guchagucharunrecorder:detailSocialSummary}</code></td><td> Flag indicating that detail should be built from SocialProvider.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> Icon used to represent data of this kind.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_mimeType app.guchagucharr.guchagucharunrecorder:mimeType}</code></td><td> Mime-type handled by this mapping.</td></tr>
           <tr><td><code>{@link #ContactsDataKind_summaryColumn app.guchagucharr.guchagucharunrecorder:summaryColumn}</code></td><td> Column in data table that summarizes this data.</td></tr>
           </table>
           @see #ContactsDataKind_allContactsName
           @see #ContactsDataKind_detailColumn
           @see #ContactsDataKind_detailSocialSummary
           @see #ContactsDataKind_icon
           @see #ContactsDataKind_mimeType
           @see #ContactsDataKind_summaryColumn
         */
        public static final int[] ContactsDataKind = {
            0x7f0103b8, 0x7f0103b9, 0x7f0103ba, 0x7f0103bb,
            0x7f010405, 0x7f01045e
        };
        /**
          <p>
          @attr description
           Resource representing the term "All Contacts" (e.g. "All Friends" or
        "All connections"). Optional (Default is "All Contacts"). 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allContactsName
        */
        public static final int ContactsDataKind_allContactsName = 3;
        /**
          <p>
          @attr description
           Column in data table that contains details for this data. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:detailColumn
        */
        public static final int ContactsDataKind_detailColumn = 1;
        /**
          <p>
          @attr description
           Flag indicating that detail should be built from SocialProvider. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:detailSocialSummary
        */
        public static final int ContactsDataKind_detailSocialSummary = 2;
        /**
          <p>
          @attr description
           Icon used to represent data of this kind. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int ContactsDataKind_icon = 4;
        /**
          <p>
          @attr description
           Mime-type handled by this mapping. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mimeType
        */
        public static final int ContactsDataKind_mimeType = 5;
        /**
          <p>
          @attr description
           Column in data table that summarizes this data. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summaryColumn
        */
        public static final int ContactsDataKind_summaryColumn = 0;
        /** Attributes that can be used with a CycleInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CycleInterpolator_cycles app.guchagucharr.guchagucharunrecorder:cycles}</code></td><td></td></tr>
           </table>
           @see #CycleInterpolator_cycles
         */
        public static final int[] CycleInterpolator = {
            0x7f010328
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#cycles}
          attribute's value can be found in the {@link #CycleInterpolator} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:cycles
        */
        public static final int CycleInterpolator_cycles = 0;
        /** Attributes that can be used with a DatePicker.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DatePicker_calendarViewShown app.guchagucharr.guchagucharunrecorder:calendarViewShown}</code></td><td> Whether the calendar view is shown.</td></tr>
           <tr><td><code>{@link #DatePicker_endYear app.guchagucharr.guchagucharunrecorder:endYear}</code></td><td> The last year (inclusive), for example "2010".</td></tr>
           <tr><td><code>{@link #DatePicker_internalLayout app.guchagucharr.guchagucharunrecorder:internalLayout}</code></td><td> @hide The layout of the date picker.</td></tr>
           <tr><td><code>{@link #DatePicker_maxDate app.guchagucharr.guchagucharunrecorder:maxDate}</code></td><td> The maximal date shown by this calendar view in mm/dd/yyyy format.</td></tr>
           <tr><td><code>{@link #DatePicker_minDate app.guchagucharr.guchagucharunrecorder:minDate}</code></td><td> The minimal date shown by this calendar view in mm/dd/yyyy format.</td></tr>
           <tr><td><code>{@link #DatePicker_spinnersShown app.guchagucharr.guchagucharunrecorder:spinnersShown}</code></td><td> Whether the spinners are shown.</td></tr>
           <tr><td><code>{@link #DatePicker_startYear app.guchagucharr.guchagucharunrecorder:startYear}</code></td><td> The first year (inclusive), for example "1940".</td></tr>
           </table>
           @see #DatePicker_calendarViewShown
           @see #DatePicker_endYear
           @see #DatePicker_internalLayout
           @see #DatePicker_maxDate
           @see #DatePicker_minDate
           @see #DatePicker_spinnersShown
           @see #DatePicker_startYear
         */
        public static final int[] DatePicker = {
            0x7f010285, 0x7f010286, 0x7f010287, 0x7f010288,
            0x7f010289, 0x7f01028a, 0x7f01028b
        };
        /**
          <p>
          @attr description
           Whether the calendar view is shown. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:calendarViewShown
        */
        public static final int DatePicker_calendarViewShown = 3;
        /**
          <p>
          @attr description
           The last year (inclusive), for example "2010".
             {@deprecated Use maxDate instead.}
         


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:endYear
        */
        @Deprecated
        public static final int DatePicker_endYear = 1;
        /**
          <p>
          @attr description
           @hide The layout of the date picker. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalLayout
        */
        public static final int DatePicker_internalLayout = 6;
        /**
          <p>
          @attr description
           The maximal date shown by this calendar view in mm/dd/yyyy format. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxDate
        */
        public static final int DatePicker_maxDate = 5;
        /**
          <p>
          @attr description
           The minimal date shown by this calendar view in mm/dd/yyyy format. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minDate
        */
        public static final int DatePicker_minDate = 4;
        /**
          <p>
          @attr description
           Whether the spinners are shown. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:spinnersShown
        */
        public static final int DatePicker_spinnersShown = 2;
        /**
          <p>
          @attr description
           The first year (inclusive), for example "1940".
             {@deprecated Use minDate instead.}
         


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:startYear
        */
        @Deprecated
        public static final int DatePicker_startYear = 0;
        /** Attributes that can be used with a DecelerateInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DecelerateInterpolator_factor app.guchagucharr.guchagucharunrecorder:factor}</code></td><td> This is the amount of acceleration to add when easing out.</td></tr>
           </table>
           @see #DecelerateInterpolator_factor
         */
        public static final int[] DecelerateInterpolator = {
            0x7f010327
        };
        /**
          <p>
          @attr description
           This is the amount of acceleration to add when easing out. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:factor
        */
        public static final int DecelerateInterpolator_factor = 0;
        /**  Use <code>device-admin</code> as the root tag of the XML resource that
         describes a
         {@link android.app.admin.DeviceAdminReceiver}, which is
         referenced from its
         {@link android.app.admin.DeviceAdminReceiver#DEVICE_ADMIN_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DeviceAdmin_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Control whether the admin is visible to the user, even when it
             is not enabled.</td></tr>
           </table>
           @see #DeviceAdmin_visible
         */
        public static final int[] DeviceAdmin = {
            0x7f0102d5
        };
        /**
          <p>
          @attr description
           Control whether the admin is visible to the user, even when it
             is not enabled.  This is true by default.  You may want to make
             it false if your admin does not make sense to be turned on
             unless some explicit action happens in your app. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int DeviceAdmin_visible = 0;
        /**  Base attributes available to DialogPreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DialogPreference_dialogIcon app.guchagucharr.guchagucharunrecorder:dialogIcon}</code></td><td> The icon for the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_dialogLayout app.guchagucharr.guchagucharunrecorder:dialogLayout}</code></td><td> A layout to be used as the content View for the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_dialogMessage app.guchagucharr.guchagucharunrecorder:dialogMessage}</code></td><td> The message in the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_dialogTitle app.guchagucharr.guchagucharunrecorder:dialogTitle}</code></td><td> The title in the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_negativeButtonText app.guchagucharr.guchagucharunrecorder:negativeButtonText}</code></td><td> The negative button text for the dialog.</td></tr>
           <tr><td><code>{@link #DialogPreference_positiveButtonText app.guchagucharr.guchagucharunrecorder:positiveButtonText}</code></td><td> The positive button text for the dialog.</td></tr>
           </table>
           @see #DialogPreference_dialogIcon
           @see #DialogPreference_dialogLayout
           @see #DialogPreference_dialogMessage
           @see #DialogPreference_dialogTitle
           @see #DialogPreference_negativeButtonText
           @see #DialogPreference_positiveButtonText
         */
        public static final int[] DialogPreference = {
            0x7f010378, 0x7f010379, 0x7f01037a, 0x7f01037b,
            0x7f01037c, 0x7f01037d
        };
        /**
          <p>
          @attr description
           The icon for the dialog. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogIcon
        */
        public static final int DialogPreference_dialogIcon = 2;
        /**
          <p>
          @attr description
           A layout to be used as the content View for the dialog. By default, this shouldn't
             be needed. If a custom DialogPreference is required, this should be set. For example,
             the EditTextPreference uses a layout with an EditText as this attribute. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogLayout
        */
        public static final int DialogPreference_dialogLayout = 5;
        /**
          <p>
          @attr description
           The message in the dialog. If a dialogLayout is provided and contains
             a TextView with ID android:id/message, this message will be placed in there. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogMessage
        */
        public static final int DialogPreference_dialogMessage = 1;
        /**
          <p>
          @attr description
           The title in the dialog. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogTitle
        */
        public static final int DialogPreference_dialogTitle = 0;
        /**
          <p>
          @attr description
           The negative button text for the dialog. Set to @null to hide the negative button. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:negativeButtonText
        */
        public static final int DialogPreference_negativeButtonText = 4;
        /**
          <p>
          @attr description
           The positive button text for the dialog. Set to @null to hide the positive button. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:positiveButtonText
        */
        public static final int DialogPreference_positiveButtonText = 3;
        /**  Base attributes that are available to all Drawable objects. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Drawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #Drawable_visible
         */
        public static final int[] Drawable = {
            0x7f0102d5
        };
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int Drawable_visible = 0;
        /**  Describes the corners for the rectangle shape of a GradientDrawable.
         This can be used to render rounded corners. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DrawableCorners_bottomLeftRadius app.guchagucharr.guchagucharunrecorder:bottomLeftRadius}</code></td><td> Radius of the bottom left corner.</td></tr>
           <tr><td><code>{@link #DrawableCorners_bottomRightRadius app.guchagucharr.guchagucharunrecorder:bottomRightRadius}</code></td><td> Radius of the bottom right corner.</td></tr>
           <tr><td><code>{@link #DrawableCorners_radius app.guchagucharr.guchagucharunrecorder:radius}</code></td><td> Defines the radius of the four corners.</td></tr>
           <tr><td><code>{@link #DrawableCorners_topLeftRadius app.guchagucharr.guchagucharunrecorder:topLeftRadius}</code></td><td> Radius of the top left corner.</td></tr>
           <tr><td><code>{@link #DrawableCorners_topRightRadius app.guchagucharr.guchagucharunrecorder:topRightRadius}</code></td><td> Radius of the top right corner.</td></tr>
           </table>
           @see #DrawableCorners_bottomLeftRadius
           @see #DrawableCorners_bottomRightRadius
           @see #DrawableCorners_radius
           @see #DrawableCorners_topLeftRadius
           @see #DrawableCorners_topRightRadius
         */
        public static final int[] DrawableCorners = {
            0x7f0102ef, 0x7f0102f0, 0x7f0102f1, 0x7f0102f2,
            0x7f0102f3
        };
        /**
          <p>
          @attr description
           Radius of the bottom left corner. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bottomLeftRadius
        */
        public static final int DrawableCorners_bottomLeftRadius = 3;
        /**
          <p>
          @attr description
           Radius of the bottom right corner. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bottomRightRadius
        */
        public static final int DrawableCorners_bottomRightRadius = 4;
        /**
          <p>
          @attr description
           Defines the radius of the four corners. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:radius
        */
        public static final int DrawableCorners_radius = 0;
        /**
          <p>
          @attr description
           Radius of the top left corner. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:topLeftRadius
        */
        public static final int DrawableCorners_topLeftRadius = 1;
        /**
          <p>
          @attr description
           Radius of the top right corner. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:topRightRadius
        */
        public static final int DrawableCorners_topRightRadius = 2;
        /**  Drawable states.
         The mapping of Drawable states to a particular drawables is specified
         in the "state" elements of a Widget's "selector" element.
         Possible values:
         <ul>
         <li>"state_focused"
         <li>"state_window_focused"
         <li>"state_enabled"
         <li>"state_checked"
         <li>"state_selected"
         <li>"state_active"
         <li>"state_single"
         <li>"state_first"
         <li>"state_mid"
         <li>"state_last"
         <li>"state_only"
         <li>"state_pressed"
         <li>"state_activated"
         <li>"state_error"
         <li>"state_circle"
         <li>"state_rect"
         <li>"state_grow"
         <li>"state_move"
         <li>"state_hovered"
         <li>"state_drag_can_accept"
         <li>"state_drag_hovered"
         <li>"state_accessibility_focused"
         </ul>  
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DrawableStates_state_accelerated app.guchagucharr.guchagucharunrecorder:state_accelerated}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             indicating that the Drawable is in a view that is hardware accelerated.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_accessibility_focused app.guchagucharr.guchagucharunrecorder:state_accessibility_focused}</code></td><td> State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a View has accessibility focus.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_activated app.guchagucharr.guchagucharunrecorder:state_activated}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view or its parent has been "activated" meaning the user has currently
             marked it as being of interest.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_active app.guchagucharr.guchagucharunrecorder:state_active}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_checkable app.guchagucharr.guchagucharunrecorder:state_checkable}</code></td><td> State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_checked app.guchagucharr.guchagucharunrecorder:state_checked}</code></td><td> State identifier indicating that the object is currently checked.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_drag_can_accept app.guchagucharr.guchagucharunrecorder:state_drag_can_accept}</code></td><td> State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that the Drawable is in a view that is capable of accepting a drop of
             the content currently being manipulated in a drag-and-drop operation.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_drag_hovered app.guchagucharr.guchagucharunrecorder:state_drag_hovered}</code></td><td> State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a drag operation (for which the Drawable's view is a valid recipient)
             is currently positioned over the Drawable.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_enabled app.guchagucharr.guchagucharunrecorder:state_enabled}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view is enabled.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_first app.guchagucharr.guchagucharunrecorder:state_first}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_focused app.guchagucharr.guchagucharunrecorder:state_focused}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_hovered app.guchagucharr.guchagucharunrecorder:state_hovered}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a pointer is hovering over the view.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_last app.guchagucharr.guchagucharunrecorder:state_last}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_middle app.guchagucharr.guchagucharunrecorder:state_middle}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_pressed app.guchagucharr.guchagucharunrecorder:state_pressed}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when the user is pressing down in a view.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_selected app.guchagucharr.guchagucharunrecorder:state_selected}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view (or one of its parents) is currently selected.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_single app.guchagucharr.guchagucharunrecorder:state_single}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.</td></tr>
           <tr><td><code>{@link #DrawableStates_state_window_focused app.guchagucharr.guchagucharunrecorder:state_window_focused}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view's window has input focus.</td></tr>
           </table>
           @see #DrawableStates_state_accelerated
           @see #DrawableStates_state_accessibility_focused
           @see #DrawableStates_state_activated
           @see #DrawableStates_state_active
           @see #DrawableStates_state_checkable
           @see #DrawableStates_state_checked
           @see #DrawableStates_state_drag_can_accept
           @see #DrawableStates_state_drag_hovered
           @see #DrawableStates_state_enabled
           @see #DrawableStates_state_first
           @see #DrawableStates_state_focused
           @see #DrawableStates_state_hovered
           @see #DrawableStates_state_last
           @see #DrawableStates_state_middle
           @see #DrawableStates_state_pressed
           @see #DrawableStates_state_selected
           @see #DrawableStates_state_single
           @see #DrawableStates_state_window_focused
         */
        public static final int[] DrawableStates = {
            0x7f010330, 0x7f010331, 0x7f010332, 0x7f010333,
            0x7f010334, 0x7f010335, 0x7f010336, 0x7f010337,
            0x7f010338, 0x7f010339, 0x7f01033a, 0x7f01033b,
            0x7f01033c, 0x7f01033d, 0x7f01033e, 0x7f01033f,
            0x7f010340, 0x7f010341
        };
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             indicating that the Drawable is in a view that is hardware accelerated.
             This means that the device can at least render a full-screen scaled
             bitmap with one layer of text and bitmaps composited on top of it
             at 60fps.  When this is set, the colorBackgroundCacheHint will be
             ignored even if it specifies a solid color, since that optimization
             is not needed. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_accelerated
        */
        public static final int DrawableStates_state_accelerated = 13;
        /**
          <p>
          @attr description
           State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a View has accessibility focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_accessibility_focused
        */
        public static final int DrawableStates_state_accessibility_focused = 17;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view or its parent has been "activated" meaning the user has currently
             marked it as being of interest.  This is an alternative representation of
             state_checked for when the state should be propagated down the view hierarchy. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_activated
        */
        public static final int DrawableStates_state_activated = 7;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_active
        */
        public static final int DrawableStates_state_active = 8;
        /**
          <p>
          @attr description
           State identifier indicating that the object <var>may</var> display a check mark.
             See {@link R.attr#state_checked} for the identifier that indicates whether it is
             actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checkable
        */
        public static final int DrawableStates_state_checkable = 3;
        /**
          <p>
          @attr description
           State identifier indicating that the object is currently checked.  See
             {@link R.attr#state_checkable} for an additional identifier that can indicate if
             any object may ever display a check, regardless of whether state_checked is
             currently set. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checked
        */
        public static final int DrawableStates_state_checked = 4;
        /**
          <p>
          @attr description
           State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that the Drawable is in a view that is capable of accepting a drop of
             the content currently being manipulated in a drag-and-drop operation. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_drag_can_accept
        */
        public static final int DrawableStates_state_drag_can_accept = 15;
        /**
          <p>
          @attr description
           State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a drag operation (for which the Drawable's view is a valid recipient)
             is currently positioned over the Drawable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_drag_hovered
        */
        public static final int DrawableStates_state_drag_hovered = 16;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_enabled
        */
        public static final int DrawableStates_state_enabled = 2;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_first
        */
        public static final int DrawableStates_state_first = 10;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_focused
        */
        public static final int DrawableStates_state_focused = 0;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a pointer is hovering over the view. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_hovered
        */
        public static final int DrawableStates_state_hovered = 14;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_last
        */
        public static final int DrawableStates_state_last = 12;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_middle
        */
        public static final int DrawableStates_state_middle = 11;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when the user is pressing down in a view. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_pressed
        */
        public static final int DrawableStates_state_pressed = 6;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view (or one of its parents) is currently selected. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_selected
        */
        public static final int DrawableStates_state_selected = 5;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_single
        */
        public static final int DrawableStates_state_single = 9;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view's window has input focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_window_focused
        */
        public static final int DrawableStates_state_window_focused = 1;
        /**  Use <code>dream</code> as the root tag of the XML resource that
         describes an
         {@link android.service.dreams.DreamService}, which is
         referenced from its
         {@link android.service.dreams.DreamService#DREAM_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Dream_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this dream.</td></tr>
           </table>
           @see #Dream_settingsActivity
         */
        public static final int[] Dream = {
            0x7f0101b9
        };
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this dream. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int Dream_settingsActivity = 0;
        /** Attributes that can be used with a EditText.
         */
        public static final int[] EditText = {
            
        };
        /**  State array representing an expandable list child's indicator. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ExpandableListChildIndicatorState_state_last app.guchagucharr.guchagucharunrecorder:state_last}</code></td><td> State identifier indicating the child is the last child within its group.</td></tr>
           </table>
           @see #ExpandableListChildIndicatorState_state_last
         */
        public static final int[] ExpandableListChildIndicatorState = {
            0x7f01033c
        };
        /**
          <p>
          @attr description
           State identifier indicating the child is the last child within its group. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_last
        */
        public static final int ExpandableListChildIndicatorState_state_last = 0;
        /**  State array representing an expandable list group's indicator. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ExpandableListGroupIndicatorState_state_empty app.guchagucharr.guchagucharunrecorder:state_empty}</code></td><td> State identifier indicating the group is empty (has no children).</td></tr>
           <tr><td><code>{@link #ExpandableListGroupIndicatorState_state_expanded app.guchagucharr.guchagucharunrecorder:state_expanded}</code></td><td> State identifier indicating the group is expanded.</td></tr>
           </table>
           @see #ExpandableListGroupIndicatorState_state_empty
           @see #ExpandableListGroupIndicatorState_state_expanded
         */
        public static final int[] ExpandableListGroupIndicatorState = {
            0x7f010342, 0x7f010343
        };
        /**
          <p>
          @attr description
           State identifier indicating the group is empty (has no children). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_empty
        */
        public static final int ExpandableListGroupIndicatorState_state_empty = 1;
        /**
          <p>
          @attr description
           State identifier indicating the group is expanded. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_expanded
        */
        public static final int ExpandableListGroupIndicatorState_state_expanded = 0;
        /** Attributes that can be used with a ExpandableListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ExpandableListView_childDivider app.guchagucharr.guchagucharunrecorder:childDivider}</code></td><td> Drawable or color that is used as a divider for children.</td></tr>
           <tr><td><code>{@link #ExpandableListView_childIndicator app.guchagucharr.guchagucharunrecorder:childIndicator}</code></td><td> Indicator shown beside the child View.</td></tr>
           <tr><td><code>{@link #ExpandableListView_childIndicatorLeft app.guchagucharr.guchagucharunrecorder:childIndicatorLeft}</code></td><td> The left bound for a child's indicator.</td></tr>
           <tr><td><code>{@link #ExpandableListView_childIndicatorRight app.guchagucharr.guchagucharunrecorder:childIndicatorRight}</code></td><td> The right bound for a child's indicator.</td></tr>
           <tr><td><code>{@link #ExpandableListView_groupIndicator app.guchagucharr.guchagucharunrecorder:groupIndicator}</code></td><td> Indicator shown beside the group View.</td></tr>
           <tr><td><code>{@link #ExpandableListView_indicatorLeft app.guchagucharr.guchagucharunrecorder:indicatorLeft}</code></td><td> The left bound for an item's indicator.</td></tr>
           <tr><td><code>{@link #ExpandableListView_indicatorRight app.guchagucharr.guchagucharunrecorder:indicatorRight}</code></td><td> The right bound for an item's indicator.</td></tr>
           </table>
           @see #ExpandableListView_childDivider
           @see #ExpandableListView_childIndicator
           @see #ExpandableListView_childIndicatorLeft
           @see #ExpandableListView_childIndicatorRight
           @see #ExpandableListView_groupIndicator
           @see #ExpandableListView_indicatorLeft
           @see #ExpandableListView_indicatorRight
         */
        public static final int[] ExpandableListView = {
            0x7f0101df, 0x7f0101e0, 0x7f0101e1, 0x7f0101e2,
            0x7f0101e3, 0x7f0101e4, 0x7f0101e5
        };
        /**
          <p>
          @attr description
           Drawable or color that is used as a divider for children. (It will drawn
             below and above child items.) The height of this will be the same as
             the height of the normal list item divider. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:childDivider
        */
        public static final int ExpandableListView_childDivider = 6;
        /**
          <p>
          @attr description
           Indicator shown beside the child View. This can be a stateful Drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:childIndicator
        */
        public static final int ExpandableListView_childIndicator = 1;
        /**
          <p>
          @attr description
           The left bound for a child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:childIndicatorLeft
        */
        public static final int ExpandableListView_childIndicatorLeft = 4;
        /**
          <p>
          @attr description
           The right bound for a child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:childIndicatorRight
        */
        public static final int ExpandableListView_childIndicatorRight = 5;
        /**
          <p>
          @attr description
           Indicator shown beside the group View. This can be a stateful Drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:groupIndicator
        */
        public static final int ExpandableListView_groupIndicator = 0;
        /**
          <p>
          @attr description
           The left bound for an item's indicator. To specify a left bound specific to children,
             use childIndicatorLeft. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indicatorLeft
        */
        public static final int ExpandableListView_indicatorLeft = 2;
        /**
          <p>
          @attr description
           The right bound for an item's indicator. To specify a right bound specific to children,
             use childIndicatorRight. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indicatorRight
        */
        public static final int ExpandableListView_indicatorRight = 3;
        /**  An extra data value to place into a an extra/name value pair held
            in a Bundle, as per {@link android.os.Bundle}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Extra_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the extra data.</td></tr>
           <tr><td><code>{@link #Extra_value app.guchagucharr.guchagucharunrecorder:value}</code></td><td> Concrete value to put for this named extra data.</td></tr>
           </table>
           @see #Extra_name
           @see #Extra_value
         */
        public static final int[] Extra = {
            0x7f01040b, 0x7f01045c
        };
        /**
          <p>
          @attr description
           Required name of the extra data. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int Extra_name = 0;
        /**
          <p>
          @attr description
           Concrete value to put for this named extra data. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>May be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:value
        */
        public static final int Extra_value = 1;
        /**  Attributes that can be used with <code>&lt;fragment&gt;</code>
         tags inside of the layout of an Activity.  This instantiates
         the given {@link android.app.Fragment} and inserts its content
         view into the current location in the layout. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Fragment_id app.guchagucharr.guchagucharunrecorder:id}</code></td><td> Supply an identifier name for the top-level view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.</td></tr>
           <tr><td><code>{@link #Fragment_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Supply the name of the fragment class to instantiate.</td></tr>
           <tr><td><code>{@link #Fragment_tag app.guchagucharr.guchagucharunrecorder:tag}</code></td><td> Supply a tag for the top-level view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.</td></tr>
           </table>
           @see #Fragment_id
           @see #Fragment_name
           @see #Fragment_tag
         */
        public static final int[] Fragment = {
            0x7f010162, 0x7f010163, 0x7f01040b
        };
        /**
          <p>
          @attr description
           Supply an identifier name for the top-level view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:id
        */
        public static final int Fragment_id = 0;
        /**
          <p>
          @attr description
           Supply the name of the fragment class to instantiate. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int Fragment_name = 2;
        /**
          <p>
          @attr description
           Supply a tag for the top-level view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tag
        */
        public static final int Fragment_tag = 1;
        /**  Fragment animation class attributes. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FragmentAnimation_fragmentCloseEnterAnimation app.guchagucharr.guchagucharunrecorder:fragmentCloseEnterAnimation}</code></td><td></td></tr>
           <tr><td><code>{@link #FragmentAnimation_fragmentCloseExitAnimation app.guchagucharr.guchagucharunrecorder:fragmentCloseExitAnimation}</code></td><td></td></tr>
           <tr><td><code>{@link #FragmentAnimation_fragmentFadeEnterAnimation app.guchagucharr.guchagucharunrecorder:fragmentFadeEnterAnimation}</code></td><td></td></tr>
           <tr><td><code>{@link #FragmentAnimation_fragmentFadeExitAnimation app.guchagucharr.guchagucharunrecorder:fragmentFadeExitAnimation}</code></td><td></td></tr>
           <tr><td><code>{@link #FragmentAnimation_fragmentOpenEnterAnimation app.guchagucharr.guchagucharunrecorder:fragmentOpenEnterAnimation}</code></td><td></td></tr>
           <tr><td><code>{@link #FragmentAnimation_fragmentOpenExitAnimation app.guchagucharr.guchagucharunrecorder:fragmentOpenExitAnimation}</code></td><td></td></tr>
           </table>
           @see #FragmentAnimation_fragmentCloseEnterAnimation
           @see #FragmentAnimation_fragmentCloseExitAnimation
           @see #FragmentAnimation_fragmentFadeEnterAnimation
           @see #FragmentAnimation_fragmentFadeExitAnimation
           @see #FragmentAnimation_fragmentOpenEnterAnimation
           @see #FragmentAnimation_fragmentOpenExitAnimation
         */
        public static final int[] FragmentAnimation = {
            0x7f010144, 0x7f010145, 0x7f010146, 0x7f010147,
            0x7f010148, 0x7f010149
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fragmentCloseEnterAnimation}
          attribute's value can be found in the {@link #FragmentAnimation} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fragmentCloseEnterAnimation
        */
        public static final int FragmentAnimation_fragmentCloseEnterAnimation = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fragmentCloseExitAnimation}
          attribute's value can be found in the {@link #FragmentAnimation} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fragmentCloseExitAnimation
        */
        public static final int FragmentAnimation_fragmentCloseExitAnimation = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fragmentFadeEnterAnimation}
          attribute's value can be found in the {@link #FragmentAnimation} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fragmentFadeEnterAnimation
        */
        public static final int FragmentAnimation_fragmentFadeEnterAnimation = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fragmentFadeExitAnimation}
          attribute's value can be found in the {@link #FragmentAnimation} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fragmentFadeExitAnimation
        */
        public static final int FragmentAnimation_fragmentFadeExitAnimation = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fragmentOpenEnterAnimation}
          attribute's value can be found in the {@link #FragmentAnimation} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fragmentOpenEnterAnimation
        */
        public static final int FragmentAnimation_fragmentOpenEnterAnimation = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fragmentOpenExitAnimation}
          attribute's value can be found in the {@link #FragmentAnimation} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:fragmentOpenExitAnimation
        */
        public static final int FragmentAnimation_fragmentOpenExitAnimation = 1;
        /**  Attributes that can be used with <code>&lt;FragmentBreadCrumbs&gt;</code>
    tags. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FragmentBreadCrumbs_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.</td></tr>
           </table>
           @see #FragmentBreadCrumbs_gravity
         */
        public static final int[] FragmentBreadCrumbs = {
            0x7f010127
        };
        /**
          <p>
          @attr description
           Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.  


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int FragmentBreadCrumbs_gravity = 0;
        /** Attributes that can be used with a FrameLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FrameLayout_foreground app.guchagucharr.guchagucharunrecorder:foreground}</code></td><td> Defines the drawable to draw over the content.</td></tr>
           <tr><td><code>{@link #FrameLayout_foregroundGravity app.guchagucharr.guchagucharunrecorder:foregroundGravity}</code></td><td> Defines the gravity to apply to the foreground drawable.</td></tr>
           <tr><td><code>{@link #FrameLayout_foregroundInsidePadding app.guchagucharr.guchagucharunrecorder:foregroundInsidePadding}</code></td><td> Defines whether the foreground drawable should be drawn inside the padding.</td></tr>
           <tr><td><code>{@link #FrameLayout_measureAllChildren app.guchagucharr.guchagucharunrecorder:measureAllChildren}</code></td><td> Determines whether to measure all children or just those in
             the VISIBLE or INVISIBLE state when measuring.</td></tr>
           </table>
           @see #FrameLayout_foreground
           @see #FrameLayout_foregroundGravity
           @see #FrameLayout_foregroundInsidePadding
           @see #FrameLayout_measureAllChildren
         */
        public static final int[] FrameLayout = {
            0x7f0101db, 0x7f0101dc, 0x7f0101dd, 0x7f0101de
        };
        /**
          <p>
          @attr description
           Defines the drawable to draw over the content. This can be used as an overlay.
             The foreground drawable participates in the padding of the content if the gravity
             is set to fill. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:foreground
        */
        public static final int FrameLayout_foreground = 0;
        /**
          <p>
          @attr description
           Defines the gravity to apply to the foreground drawable. The gravity defaults
             to fill. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:foregroundGravity
        */
        public static final int FrameLayout_foregroundGravity = 1;
        /**
          <p>
          @attr description
           Defines whether the foreground drawable should be drawn inside the padding.
             This property is turned on by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:foregroundInsidePadding
        */
        public static final int FrameLayout_foregroundInsidePadding = 2;
        /**
          <p>
          @attr description
           Determines whether to measure all children or just those in
             the VISIBLE or INVISIBLE state when measuring. Defaults to false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:measureAllChildren
        */
        public static final int FrameLayout_measureAllChildren = 3;
        /** Attributes that can be used with a FrameLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FrameLayout_Layout_layout_gravity app.guchagucharr.guchagucharunrecorder:layout_gravity}</code></td><td> Standard gravity constant that a child supplies to its parent.</td></tr>
           </table>
           @see #FrameLayout_Layout_layout_gravity
         */
        public static final int[] FrameLayout_Layout = {
            0x7f01012a
        };
        /**
          <p>
          @attr description
           Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_gravity
        */
        public static final int FrameLayout_Layout_layout_gravity = 0;
        /** Attributes that can be used with a Gallery.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Gallery_animationDuration app.guchagucharr.guchagucharunrecorder:animationDuration}</code></td><td> Sets how long a transition animation should run (in milliseconds)
             when layout has changed.</td></tr>
           <tr><td><code>{@link #Gallery_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.</td></tr>
           <tr><td><code>{@link #Gallery_spacing app.guchagucharr.guchagucharunrecorder:spacing}</code></td><td></td></tr>
           <tr><td><code>{@link #Gallery_unselectedAlpha app.guchagucharr.guchagucharunrecorder:unselectedAlpha}</code></td><td> Sets the alpha on the items that are not selected.</td></tr>
           </table>
           @see #Gallery_animationDuration
           @see #Gallery_gravity
           @see #Gallery_spacing
           @see #Gallery_unselectedAlpha
         */
        public static final int[] Gallery = {
            0x7f010127, 0x7f0101e6, 0x7f0101e7, 0x7f0101e8
        };
        /**
          <p>
          @attr description
           Sets how long a transition animation should run (in milliseconds)
             when layout has changed.  Only relevant if animation is turned on. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animationDuration
        */
        public static final int Gallery_animationDuration = 1;
        /**
          <p>
          @attr description
           Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.  


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int Gallery_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#spacing}
          attribute's value can be found in the {@link #Gallery} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:spacing
        */
        public static final int Gallery_spacing = 2;
        /**
          <p>
          @attr description
           Sets the alpha on the items that are not selected. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:unselectedAlpha
        */
        public static final int Gallery_unselectedAlpha = 3;
        /**  GestureOverlayView specific attributes. These attributes are used to configure
         a GestureOverlayView from XML. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GestureOverlayView_eventsInterceptionEnabled app.guchagucharr.guchagucharunrecorder:eventsInterceptionEnabled}</code></td><td> Defines whether the overlay should intercept the motion events when a gesture
             is recognized.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_fadeDuration app.guchagucharr.guchagucharunrecorder:fadeDuration}</code></td><td> Duration, in milliseconds, of the fade out effect after the user is done
             drawing a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_fadeEnabled app.guchagucharr.guchagucharunrecorder:fadeEnabled}</code></td><td> Defines whether the gesture will automatically fade out after being recognized.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_fadeOffset app.guchagucharr.guchagucharunrecorder:fadeOffset}</code></td><td> Time, in milliseconds, to wait before the gesture fades out after the user
             is done drawing it.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureColor app.guchagucharr.guchagucharunrecorder:gestureColor}</code></td><td> Color used to draw a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeAngleThreshold app.guchagucharr.guchagucharunrecorder:gestureStrokeAngleThreshold}</code></td><td> Minimum curve angle a stroke must contain before it is recognized as a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeLengthThreshold app.guchagucharr.guchagucharunrecorder:gestureStrokeLengthThreshold}</code></td><td> Minimum length of a stroke before it is recognized as a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeSquarenessThreshold app.guchagucharr.guchagucharunrecorder:gestureStrokeSquarenessThreshold}</code></td><td> Squareness threshold of a stroke before it is recognized as a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeType app.guchagucharr.guchagucharunrecorder:gestureStrokeType}</code></td><td> Defines the type of strokes that define a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_gestureStrokeWidth app.guchagucharr.guchagucharunrecorder:gestureStrokeWidth}</code></td><td> Width of the stroke used to draw the gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Indicates whether horizontal (when the orientation is vertical) or vertical
             (when orientation is horizontal) strokes automatically define a gesture.</td></tr>
           <tr><td><code>{@link #GestureOverlayView_uncertainGestureColor app.guchagucharr.guchagucharunrecorder:uncertainGestureColor}</code></td><td> Color used to draw the user's strokes until we are sure it's a gesture.</td></tr>
           </table>
           @see #GestureOverlayView_eventsInterceptionEnabled
           @see #GestureOverlayView_fadeDuration
           @see #GestureOverlayView_fadeEnabled
           @see #GestureOverlayView_fadeOffset
           @see #GestureOverlayView_gestureColor
           @see #GestureOverlayView_gestureStrokeAngleThreshold
           @see #GestureOverlayView_gestureStrokeLengthThreshold
           @see #GestureOverlayView_gestureStrokeSquarenessThreshold
           @see #GestureOverlayView_gestureStrokeType
           @see #GestureOverlayView_gestureStrokeWidth
           @see #GestureOverlayView_orientation
           @see #GestureOverlayView_uncertainGestureColor
         */
        public static final int[] GestureOverlayView = {
            0x7f01012b, 0x7f010293, 0x7f010294, 0x7f010295,
            0x7f010296, 0x7f010297, 0x7f010298, 0x7f010299,
            0x7f01029a, 0x7f01029b, 0x7f01029c, 0x7f01029d
        };
        /**
          <p>
          @attr description
           Defines whether the overlay should intercept the motion events when a gesture
             is recognized. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:eventsInterceptionEnabled
        */
        public static final int GestureOverlayView_eventsInterceptionEnabled = 10;
        /**
          <p>
          @attr description
           Duration, in milliseconds, of the fade out effect after the user is done
             drawing a gesture. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fadeDuration
        */
        public static final int GestureOverlayView_fadeDuration = 5;
        /**
          <p>
          @attr description
           Defines whether the gesture will automatically fade out after being recognized. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fadeEnabled
        */
        public static final int GestureOverlayView_fadeEnabled = 11;
        /**
          <p>
          @attr description
           Time, in milliseconds, to wait before the gesture fades out after the user
             is done drawing it. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fadeOffset
        */
        public static final int GestureOverlayView_fadeOffset = 4;
        /**
          <p>
          @attr description
           Color used to draw a gesture. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureColor
        */
        public static final int GestureOverlayView_gestureColor = 2;
        /**
          <p>
          @attr description
           Minimum curve angle a stroke must contain before it is recognized as a gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureStrokeAngleThreshold
        */
        public static final int GestureOverlayView_gestureStrokeAngleThreshold = 9;
        /**
          <p>
          @attr description
           Minimum length of a stroke before it is recognized as a gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureStrokeLengthThreshold
        */
        public static final int GestureOverlayView_gestureStrokeLengthThreshold = 7;
        /**
          <p>
          @attr description
           Squareness threshold of a stroke before it is recognized as a gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureStrokeSquarenessThreshold
        */
        public static final int GestureOverlayView_gestureStrokeSquarenessThreshold = 8;
        /**
          <p>
          @attr description
           Defines the type of strokes that define a gesture. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>single</code></td><td>0</td><td> A gesture is made of only one stroke. </td></tr>
<tr><td><code>multiple</code></td><td>1</td><td> A gesture is made of multiple strokes. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureStrokeType
        */
        public static final int GestureOverlayView_gestureStrokeType = 6;
        /**
          <p>
          @attr description
           Width of the stroke used to draw the gesture. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureStrokeWidth
        */
        public static final int GestureOverlayView_gestureStrokeWidth = 1;
        /**
          <p>
          @attr description
           Indicates whether horizontal (when the orientation is vertical) or vertical
             (when orientation is horizontal) strokes automatically define a gesture. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int GestureOverlayView_orientation = 0;
        /**
          <p>
          @attr description
           Color used to draw the user's strokes until we are sure it's a gesture. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:uncertainGestureColor
        */
        public static final int GestureOverlayView_uncertainGestureColor = 3;
        /** Attributes that can be used with a GlowPadView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GlowPadView_allowScaling app.guchagucharr.guchagucharunrecorder:allowScaling}</code></td><td> Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent.</td></tr>
           <tr><td><code>{@link #GlowPadView_alwaysTrackFinger app.guchagucharr.guchagucharunrecorder:alwaysTrackFinger}</code></td><td> Used when the handle shouldn't wait to be hit before following the finger </td></tr>
           <tr><td><code>{@link #GlowPadView_directionDescriptions app.guchagucharr.guchagucharunrecorder:directionDescriptions}</code></td><td> Reference to an array resource that be used to announce the directions with targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_feedbackCount app.guchagucharr.guchagucharunrecorder:feedbackCount}</code></td><td> Number of waves/chevrons to show in animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_firstItemOffset app.guchagucharr.guchagucharunrecorder:firstItemOffset}</code></td><td> Location along the circle of the first item, in degrees.</td></tr>
           <tr><td><code>{@link #GlowPadView_glowRadius app.guchagucharr.guchagucharunrecorder:glowRadius}</code></td><td> Radius of glow under finger.</td></tr>
           <tr><td><code>{@link #GlowPadView_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.</td></tr>
           <tr><td><code>{@link #GlowPadView_handleDrawable app.guchagucharr.guchagucharunrecorder:handleDrawable}</code></td><td> Sets a drawable as the center.</td></tr>
           <tr><td><code>{@link #GlowPadView_innerRadius app.guchagucharr.guchagucharunrecorder:innerRadius}</code></td><td> Inner radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_magneticTargets app.guchagucharr.guchagucharunrecorder:magneticTargets}</code></td><td> Causes targets to snap to the finger location on activation.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRadius app.guchagucharr.guchagucharunrecorder:outerRadius}</code></td><td> Outer radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRingDrawable app.guchagucharr.guchagucharunrecorder:outerRingDrawable}</code></td><td> Drawable to use for wave ripple animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_pointDrawable app.guchagucharr.guchagucharunrecorder:pointDrawable}</code></td><td> Drawble used for drawing points </td></tr>
           <tr><td><code>{@link #GlowPadView_snapMargin app.guchagucharr.guchagucharunrecorder:snapMargin}</code></td><td> How close we need to be before snapping to a target.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDescriptions app.guchagucharr.guchagucharunrecorder:targetDescriptions}</code></td><td> Reference to an array resource that be used as description for the targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDrawables app.guchagucharr.guchagucharunrecorder:targetDrawables}</code></td><td> Reference to an array resource that be shown as targets around a circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_vibrationDuration app.guchagucharr.guchagucharunrecorder:vibrationDuration}</code></td><td> Tactile feedback duration for actions.</td></tr>
           </table>
           @see #GlowPadView_allowScaling
           @see #GlowPadView_alwaysTrackFinger
           @see #GlowPadView_directionDescriptions
           @see #GlowPadView_feedbackCount
           @see #GlowPadView_firstItemOffset
           @see #GlowPadView_glowRadius
           @see #GlowPadView_gravity
           @see #GlowPadView_handleDrawable
           @see #GlowPadView_innerRadius
           @see #GlowPadView_magneticTargets
           @see #GlowPadView_outerRadius
           @see #GlowPadView_outerRingDrawable
           @see #GlowPadView_pointDrawable
           @see #GlowPadView_snapMargin
           @see #GlowPadView_targetDescriptions
           @see #GlowPadView_targetDrawables
           @see #GlowPadView_vibrationDuration
         */
        public static final int[] GlowPadView = {
            0x7f010127, 0x7f0102e1, 0x7f0103bc, 0x7f0103bd,
            0x7f0103be, 0x7f0103bf, 0x7f0103c0, 0x7f0103c1,
            0x7f0103c2, 0x7f0103c3, 0x7f0103c4, 0x7f0103c5,
            0x7f0103c8, 0x7f0103c9, 0x7f0103ca, 0x7f0103cb,
            0x7f0103cc
        };
        /**
          <p>
          @attr description
           Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowScaling
        */
        public static final int GlowPadView_allowScaling = 7;
        /**
          <p>
          @attr description
           Used when the handle shouldn't wait to be hit before following the finger 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alwaysTrackFinger
        */
        public static final int GlowPadView_alwaysTrackFinger = 16;
        /**
          <p>
          @attr description
           Reference to an array resource that be used to announce the directions with targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:directionDescriptions
        */
        public static final int GlowPadView_directionDescriptions = 10;
        /**
          <p>
          @attr description
           Number of waves/chevrons to show in animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:feedbackCount
        */
        public static final int GlowPadView_feedbackCount = 15;
        /**
          <p>
          @attr description
           Location along the circle of the first item, in degrees.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:firstItemOffset
        */
        public static final int GlowPadView_firstItemOffset = 5;
        /**
          <p>
          @attr description
           Radius of glow under finger. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:glowRadius
        */
        public static final int GlowPadView_glowRadius = 4;
        /**
          <p>
          @attr description
           Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.  


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int GlowPadView_gravity = 0;
        /**
          <p>
          @attr description
           Sets a drawable as the center. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:handleDrawable
        */
        public static final int GlowPadView_handleDrawable = 11;
        /**
          <p>
          @attr description
           Inner radius of glow area. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:innerRadius
        */
        public static final int GlowPadView_innerRadius = 1;
        /**
          <p>
          @attr description
           Causes targets to snap to the finger location on activation. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:magneticTargets
        */
        public static final int GlowPadView_magneticTargets = 6;
        /**
          <p>
          @attr description
           Outer radius of glow area. Target icons will be drawn on this circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:outerRadius
        */
        public static final int GlowPadView_outerRadius = 12;
        /**
          <p>
          @attr description
           Drawable to use for wave ripple animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:outerRingDrawable
        */
        public static final int GlowPadView_outerRingDrawable = 2;
        /**
          <p>
          @attr description
           Drawble used for drawing points 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pointDrawable
        */
        public static final int GlowPadView_pointDrawable = 3;
        /**
          <p>
          @attr description
           How close we need to be before snapping to a target. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:snapMargin
        */
        public static final int GlowPadView_snapMargin = 14;
        /**
          <p>
          @attr description
           Reference to an array resource that be used as description for the targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetDescriptions
        */
        public static final int GlowPadView_targetDescriptions = 9;
        /**
          <p>
          @attr description
           Reference to an array resource that be shown as targets around a circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetDrawables
        */
        public static final int GlowPadView_targetDrawables = 8;
        /**
          <p>
          @attr description
           Tactile feedback duration for actions. Set to '0' for no vibration. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:vibrationDuration
        */
        public static final int GlowPadView_vibrationDuration = 13;
        /**  Drawable used to render a geometric shape, with a gradient or a solid color. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawable_dither app.guchagucharr.guchagucharunrecorder:dither}</code></td><td> Enables or disables dithering.</td></tr>
           <tr><td><code>{@link #GradientDrawable_innerRadius app.guchagucharr.guchagucharunrecorder:innerRadius}</code></td><td> Inner radius of the ring.</td></tr>
           <tr><td><code>{@link #GradientDrawable_innerRadiusRatio app.guchagucharr.guchagucharunrecorder:innerRadiusRatio}</code></td><td> Inner radius of the ring expressed as a ratio of the ring's width.</td></tr>
           <tr><td><code>{@link #GradientDrawable_shape app.guchagucharr.guchagucharunrecorder:shape}</code></td><td> Indicates what shape to fill with a gradient.</td></tr>
           <tr><td><code>{@link #GradientDrawable_thickness app.guchagucharr.guchagucharunrecorder:thickness}</code></td><td> Thickness of the ring.</td></tr>
           <tr><td><code>{@link #GradientDrawable_thicknessRatio app.guchagucharr.guchagucharunrecorder:thicknessRatio}</code></td><td> Thickness of the ring expressed as a ratio of the ring's width.</td></tr>
           <tr><td><code>{@link #GradientDrawable_useLevel app.guchagucharr.guchagucharunrecorder:useLevel}</code></td><td> Indicates whether the drawable's level affects the way the gradient is drawn.</td></tr>
           <tr><td><code>{@link #GradientDrawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Indicates whether the drawable should intially be visible.</td></tr>
           </table>
           @see #GradientDrawable_dither
           @see #GradientDrawable_innerRadius
           @see #GradientDrawable_innerRadiusRatio
           @see #GradientDrawable_shape
           @see #GradientDrawable_thickness
           @see #GradientDrawable_thicknessRatio
           @see #GradientDrawable_useLevel
           @see #GradientDrawable_visible
         */
        public static final int[] GradientDrawable = {
            0x7f0102d5, 0x7f0102d8, 0x7f0102de, 0x7f0102df,
            0x7f0102e0, 0x7f0102e1, 0x7f0102e2, 0x7f0102e6
        };
        /**
          <p>
          @attr description
           Enables or disables dithering. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dither
        */
        public static final int GradientDrawable_dither = 1;
        /**
          <p>
          @attr description
           Inner radius of the ring. When defined, innerRadiusRatio is ignored. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:innerRadius
        */
        public static final int GradientDrawable_innerRadius = 5;
        /**
          <p>
          @attr description
           Inner radius of the ring expressed as a ratio of the ring's width. For instance,
             if innerRadiusRatio=9, then the inner radius equals the ring's width divided by 9.
             This value is ignored if innerRadius is defined. Default value is 9. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:innerRadiusRatio
        */
        public static final int GradientDrawable_innerRadiusRatio = 3;
        /**
          <p>
          @attr description
           Indicates what shape to fill with a gradient. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rectangle</code></td><td>0</td><td> Rectangle shape, with optional rounder corners. </td></tr>
<tr><td><code>oval</code></td><td>1</td><td> Oval shape. </td></tr>
<tr><td><code>line</code></td><td>2</td><td> Line shape. </td></tr>
<tr><td><code>ring</code></td><td>3</td><td> Ring shape. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shape
        */
        public static final int GradientDrawable_shape = 2;
        /**
          <p>
          @attr description
           Thickness of the ring. When defined, thicknessRatio is ignored. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thickness
        */
        public static final int GradientDrawable_thickness = 6;
        /**
          <p>
          @attr description
           Thickness of the ring expressed as a ratio of the ring's width. For instance,
             if thicknessRatio=3, then the thickness equals the ring's width divided by 3.
             This value is ignored if innerRadius is defined. Default value is 3. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thicknessRatio
        */
        public static final int GradientDrawable_thicknessRatio = 4;
        /**
          <p>
          @attr description
           Indicates whether the drawable's level affects the way the gradient is drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:useLevel
        */
        public static final int GradientDrawable_useLevel = 7;
        /**
          <p>
          @attr description
           Indicates whether the drawable should intially be visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int GradientDrawable_visible = 0;
        /**  Used to describe the gradient used to fill the shape of a GradientDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableGradient_angle app.guchagucharr.guchagucharunrecorder:angle}</code></td><td> Angle of the gradient.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_centerColor app.guchagucharr.guchagucharunrecorder:centerColor}</code></td><td> Optional center color.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_centerX app.guchagucharr.guchagucharunrecorder:centerX}</code></td><td> X coordinate of the origin of the gradient within the shape.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_centerY app.guchagucharr.guchagucharunrecorder:centerY}</code></td><td> Y coordinate of the origin of the gradient within the shape.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_endColor app.guchagucharr.guchagucharunrecorder:endColor}</code></td><td> End color of the gradient.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_gradientRadius app.guchagucharr.guchagucharunrecorder:gradientRadius}</code></td><td> Radius of the gradient, used only with radial gradient.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_startColor app.guchagucharr.guchagucharunrecorder:startColor}</code></td><td> Start color of the gradient.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_type app.guchagucharr.guchagucharunrecorder:type}</code></td><td> Type of gradient.</td></tr>
           <tr><td><code>{@link #GradientDrawableGradient_useLevel app.guchagucharr.guchagucharunrecorder:useLevel}</code></td><td></td></tr>
           </table>
           @see #GradientDrawableGradient_angle
           @see #GradientDrawableGradient_centerColor
           @see #GradientDrawableGradient_centerX
           @see #GradientDrawableGradient_centerY
           @see #GradientDrawableGradient_endColor
           @see #GradientDrawableGradient_gradientRadius
           @see #GradientDrawableGradient_startColor
           @see #GradientDrawableGradient_type
           @see #GradientDrawableGradient_useLevel
         */
        public static final int[] GradientDrawableGradient = {
            0x7f0102e3, 0x7f0102e4, 0x7f0102e5, 0x7f0102e6,
            0x7f0102e7, 0x7f0102e8, 0x7f0102e9, 0x7f0102ea,
            0x7f0102eb
        };
        /**
          <p>
          @attr description
           Angle of the gradient. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:angle
        */
        public static final int GradientDrawableGradient_angle = 4;
        /**
          <p>
          @attr description
           Optional center color. For linear gradients, use centerX or centerY
             to place the center color. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:centerColor
        */
        public static final int GradientDrawableGradient_centerColor = 1;
        /**
          <p>
          @attr description
           X coordinate of the origin of the gradient within the shape. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:centerX
        */
        public static final int GradientDrawableGradient_centerX = 6;
        /**
          <p>
          @attr description
           Y coordinate of the origin of the gradient within the shape. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:centerY
        */
        public static final int GradientDrawableGradient_centerY = 7;
        /**
          <p>
          @attr description
           End color of the gradient. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:endColor
        */
        public static final int GradientDrawableGradient_endColor = 2;
        /**
          <p>
          @attr description
           Radius of the gradient, used only with radial gradient. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gradientRadius
        */
        public static final int GradientDrawableGradient_gradientRadius = 8;
        /**
          <p>
          @attr description
           Start color of the gradient. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:startColor
        */
        public static final int GradientDrawableGradient_startColor = 0;
        /**
          <p>
          @attr description
           Type of gradient. The default type is linear. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>linear</code></td><td>0</td><td> Linear gradient. </td></tr>
<tr><td><code>radial</code></td><td>1</td><td> Radial, or circular, gradient. </td></tr>
<tr><td><code>sweep</code></td><td>2</td><td> Sweep, or angled or diamond, gradient. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:type
        */
        public static final int GradientDrawableGradient_type = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#useLevel}
          attribute's value can be found in the {@link #GradientDrawableGradient} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:useLevel
        */
        public static final int GradientDrawableGradient_useLevel = 3;
        /**  Used to specify the optional padding of a GradientDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawablePadding_bottom app.guchagucharr.guchagucharunrecorder:bottom}</code></td><td> Amount of bottom padding inside the gradient shape.</td></tr>
           <tr><td><code>{@link #GradientDrawablePadding_left app.guchagucharr.guchagucharunrecorder:left}</code></td><td> Amount of left padding inside the gradient shape.</td></tr>
           <tr><td><code>{@link #GradientDrawablePadding_right app.guchagucharr.guchagucharunrecorder:right}</code></td><td> Amount of right padding inside the gradient shape.</td></tr>
           <tr><td><code>{@link #GradientDrawablePadding_top app.guchagucharr.guchagucharunrecorder:top}</code></td><td> Amount of top padding inside the gradient shape.</td></tr>
           </table>
           @see #GradientDrawablePadding_bottom
           @see #GradientDrawablePadding_left
           @see #GradientDrawablePadding_right
           @see #GradientDrawablePadding_top
         */
        public static final int[] GradientDrawablePadding = {
            0x7f0102f4, 0x7f0102f5, 0x7f0102f6, 0x7f0102f7
        };
        /**
          <p>
          @attr description
           Amount of bottom padding inside the gradient shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bottom
        */
        public static final int GradientDrawablePadding_bottom = 3;
        /**
          <p>
          @attr description
           Amount of left padding inside the gradient shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:left
        */
        public static final int GradientDrawablePadding_left = 0;
        /**
          <p>
          @attr description
           Amount of right padding inside the gradient shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:right
        */
        public static final int GradientDrawablePadding_right = 2;
        /**
          <p>
          @attr description
           Amount of top padding inside the gradient shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:top
        */
        public static final int GradientDrawablePadding_top = 1;
        /**  Used to specify the size of the shape for GradientDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableSize_height app.guchagucharr.guchagucharunrecorder:height}</code></td><td> Height of the gradient shape.</td></tr>
           <tr><td><code>{@link #GradientDrawableSize_width app.guchagucharr.guchagucharunrecorder:width}</code></td><td> Width of the gradient shape.</td></tr>
           </table>
           @see #GradientDrawableSize_height
           @see #GradientDrawableSize_width
         */
        public static final int[] GradientDrawableSize = {
            0x7f010247, 0x7f01024b
        };
        /**
          <p>
          @attr description
           Height of the gradient shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:height
        */
        public static final int GradientDrawableSize_height = 0;
        /**
          <p>
          @attr description
           Width of the gradient shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:width
        */
        public static final int GradientDrawableSize_width = 1;
        /**  Used to fill the shape of GradientDrawable with a solid color. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableSolid_color app.guchagucharr.guchagucharunrecorder:color}</code></td><td> Solid color for the gradient shape.</td></tr>
           </table>
           @see #GradientDrawableSolid_color
         */
        public static final int[] GradientDrawableSolid = {
            0x7f0102ec
        };
        /**
          <p>
          @attr description
           Solid color for the gradient shape. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:color
        */
        public static final int GradientDrawableSolid_color = 0;
        /**  Used to describe the optional stroke of a GradientDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientDrawableStroke_color app.guchagucharr.guchagucharunrecorder:color}</code></td><td> Color of the gradient shape's stroke.</td></tr>
           <tr><td><code>{@link #GradientDrawableStroke_dashGap app.guchagucharr.guchagucharunrecorder:dashGap}</code></td><td> Gap between dashes in the stroke.</td></tr>
           <tr><td><code>{@link #GradientDrawableStroke_dashWidth app.guchagucharr.guchagucharunrecorder:dashWidth}</code></td><td> Length of a dash in the stroke.</td></tr>
           <tr><td><code>{@link #GradientDrawableStroke_width app.guchagucharr.guchagucharunrecorder:width}</code></td><td> Width of the gradient shape's stroke.</td></tr>
           </table>
           @see #GradientDrawableStroke_color
           @see #GradientDrawableStroke_dashGap
           @see #GradientDrawableStroke_dashWidth
           @see #GradientDrawableStroke_width
         */
        public static final int[] GradientDrawableStroke = {
            0x7f01024b, 0x7f0102ec, 0x7f0102ed, 0x7f0102ee
        };
        /**
          <p>
          @attr description
           Color of the gradient shape's stroke. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:color
        */
        public static final int GradientDrawableStroke_color = 1;
        /**
          <p>
          @attr description
           Gap between dashes in the stroke. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dashGap
        */
        public static final int GradientDrawableStroke_dashGap = 3;
        /**
          <p>
          @attr description
           Length of a dash in the stroke. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dashWidth
        */
        public static final int GradientDrawableStroke_dashWidth = 2;
        /**
          <p>
          @attr description
           Width of the gradient shape's stroke. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:width
        */
        public static final int GradientDrawableStroke_width = 0;
        /** Attributes that can be used with a GridLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_alignmentMode app.guchagucharr.guchagucharunrecorder:alignmentMode}</code></td><td> When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins.</td></tr>
           <tr><td><code>{@link #GridLayout_columnCount app.guchagucharr.guchagucharunrecorder:columnCount}</code></td><td> The maxmimum number of columns to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_columnOrderPreserved app.guchagucharr.guchagucharunrecorder:columnOrderPreserved}</code></td><td> When set to true, forces column boundaries to appear in the same order
        as column indices.</td></tr>
           <tr><td><code>{@link #GridLayout_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> The orientation property is not used during layout.</td></tr>
           <tr><td><code>{@link #GridLayout_rowCount app.guchagucharr.guchagucharunrecorder:rowCount}</code></td><td> The maxmimum number of rows to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_rowOrderPreserved app.guchagucharr.guchagucharunrecorder:rowOrderPreserved}</code></td><td> When set to true, forces row boundaries to appear in the same order
        as row indices.</td></tr>
           <tr><td><code>{@link #GridLayout_useDefaultMargins app.guchagucharr.guchagucharunrecorder:useDefaultMargins}</code></td><td> When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.</td></tr>
           </table>
           @see #GridLayout_alignmentMode
           @see #GridLayout_columnCount
           @see #GridLayout_columnOrderPreserved
           @see #GridLayout_orientation
           @see #GridLayout_rowCount
           @see #GridLayout_rowOrderPreserved
           @see #GridLayout_useDefaultMargins
         */
        public static final int[] GridLayout = {
            0x7f01012b, 0x7f01012c, 0x7f010201, 0x7f010202,
            0x7f010203, 0x7f010204, 0x7f010205
        };
        /**
          <p>
          @attr description
           When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td> Align the bounds of the children.
        See {@link android.widget.GridLayout#ALIGN_BOUNDS}. </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td> Align the margins of the children.
        See {@link android.widget.GridLayout#ALIGN_MARGINS}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alignmentMode
        */
        public static final int GridLayout_alignmentMode = 1;
        /**
          <p>
          @attr description
           The maxmimum number of columns to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:columnCount
        */
        public static final int GridLayout_columnCount = 3;
        /**
          <p>
          @attr description
           When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:columnOrderPreserved
        */
        public static final int GridLayout_columnOrderPreserved = 6;
        /**
          <p>
          @attr description
           The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout paramters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int GridLayout_orientation = 0;
        /**
          <p>
          @attr description
           The maxmimum number of rows to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rowCount
        */
        public static final int GridLayout_rowCount = 2;
        /**
          <p>
          @attr description
           When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rowOrderPreserved
        */
        public static final int GridLayout_rowOrderPreserved = 5;
        /**
          <p>
          @attr description
           When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:useDefaultMargins
        */
        public static final int GridLayout_useDefaultMargins = 4;
        /** Attributes that can be used with a GridLayoutAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayoutAnimation_columnDelay app.guchagucharr.guchagucharunrecorder:columnDelay}</code></td><td> Fraction of the animation duration used to delay the beginning of
         the animation of each column.</td></tr>
           <tr><td><code>{@link #GridLayoutAnimation_direction app.guchagucharr.guchagucharunrecorder:direction}</code></td><td> Direction of the animation in the grid.</td></tr>
           <tr><td><code>{@link #GridLayoutAnimation_directionPriority app.guchagucharr.guchagucharunrecorder:directionPriority}</code></td><td> Priority of the rows and columns.</td></tr>
           <tr><td><code>{@link #GridLayoutAnimation_rowDelay app.guchagucharr.guchagucharunrecorder:rowDelay}</code></td><td> Fraction of the animation duration used to delay the beginning of
         the animation of each row.</td></tr>
           </table>
           @see #GridLayoutAnimation_columnDelay
           @see #GridLayoutAnimation_direction
           @see #GridLayoutAnimation_directionPriority
           @see #GridLayoutAnimation_rowDelay
         */
        public static final int[] GridLayoutAnimation = {
            0x7f010323, 0x7f010324, 0x7f010325, 0x7f010326
        };
        /**
          <p>
          @attr description
           Fraction of the animation duration used to delay the beginning of
         the animation of each column. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:columnDelay
        */
        public static final int GridLayoutAnimation_columnDelay = 0;
        /**
          <p>
          @attr description
           Direction of the animation in the grid. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left_to_right</code></td><td>0x0</td><td> Animates columns from left to right. </td></tr>
<tr><td><code>right_to_left</code></td><td>0x1</td><td> Animates columns from right to left. </td></tr>
<tr><td><code>top_to_bottom</code></td><td>0x0</td><td> Animates rows from top to bottom. </td></tr>
<tr><td><code>bottom_to_top</code></td><td>0x2</td><td> Animates rows from bottom to top. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:direction
        */
        public static final int GridLayoutAnimation_direction = 2;
        /**
          <p>
          @attr description
           Priority of the rows and columns. When the priority is none,
         both rows and columns have the same priority. When the priority is
         column, the animations will be applied on the columns first. The same
         goes for rows. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Rows and columns are animated at the same time. </td></tr>
<tr><td><code>column</code></td><td>1</td><td> Columns are animated first. </td></tr>
<tr><td><code>row</code></td><td>2</td><td> Rows are animated first. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:directionPriority
        */
        public static final int GridLayoutAnimation_directionPriority = 3;
        /**
          <p>
          @attr description
           Fraction of the animation duration used to delay the beginning of
         the animation of each row. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rowDelay
        */
        public static final int GridLayoutAnimation_rowDelay = 1;
        /** Attributes that can be used with a GridLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_column app.guchagucharr.guchagucharunrecorder:layout_column}</code></td><td> The column boundary delimiting the left of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan app.guchagucharr.guchagucharunrecorder:layout_columnSpan}</code></td><td> The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_gravity app.guchagucharr.guchagucharunrecorder:layout_gravity}</code></td><td> Gravity specifies how a component should be placed in its group of cells.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_row app.guchagucharr.guchagucharunrecorder:layout_row}</code></td><td> The row boundary delimiting the top of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan app.guchagucharr.guchagucharunrecorder:layout_rowSpan}</code></td><td> The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           </table>
           @see #GridLayout_Layout_layout_column
           @see #GridLayout_Layout_layout_columnSpan
           @see #GridLayout_Layout_layout_gravity
           @see #GridLayout_Layout_layout_row
           @see #GridLayout_Layout_layout_rowSpan
         */
        public static final int[] GridLayout_Layout = {
            0x7f01012a, 0x7f010236, 0x7f0102a2, 0x7f0102a3,
            0x7f0102a4
        };
        /**
          <p>
          @attr description
           The column boundary delimiting the left of the group of cells
        occupied by this view. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_column
        */
        public static final int GridLayout_Layout_layout_column = 1;
        /**
          <p>
          @attr description
           The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_columnSpan
        */
        public static final int GridLayout_Layout_layout_columnSpan = 4;
        /**
          <p>
          @attr description
           Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_gravity
        */
        public static final int GridLayout_Layout_layout_gravity = 0;
        /**
          <p>
          @attr description
           The row boundary delimiting the top of the group of cells
        occupied by this view. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_row
        */
        public static final int GridLayout_Layout_layout_row = 2;
        /**
          <p>
          @attr description
           The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_rowSpan
        */
        public static final int GridLayout_Layout_layout_rowSpan = 3;
        /** Attributes that can be used with a GridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridView_columnWidth app.guchagucharr.guchagucharunrecorder:columnWidth}</code></td><td> Specifies the fixed width for each column.</td></tr>
           <tr><td><code>{@link #GridView_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies the gravity within each cell.</td></tr>
           <tr><td><code>{@link #GridView_horizontalSpacing app.guchagucharr.guchagucharunrecorder:horizontalSpacing}</code></td><td> Defines the default horizontal spacing between columns.</td></tr>
           <tr><td><code>{@link #GridView_numColumns app.guchagucharr.guchagucharunrecorder:numColumns}</code></td><td> Defines how many columns to show.</td></tr>
           <tr><td><code>{@link #GridView_stretchMode app.guchagucharr.guchagucharunrecorder:stretchMode}</code></td><td> Defines how columns should stretch to fill the available empty space, if any.</td></tr>
           <tr><td><code>{@link #GridView_verticalSpacing app.guchagucharr.guchagucharunrecorder:verticalSpacing}</code></td><td> Defines the default vertical spacing between rows.</td></tr>
           </table>
           @see #GridView_columnWidth
           @see #GridView_gravity
           @see #GridView_horizontalSpacing
           @see #GridView_numColumns
           @see #GridView_stretchMode
           @see #GridView_verticalSpacing
         */
        public static final int[] GridView = {
            0x7f010127, 0x7f0101e9, 0x7f0101ea, 0x7f0101eb,
            0x7f0101ec, 0x7f0101ed
        };
        /**
          <p>
          @attr description
           Specifies the fixed width for each column. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:columnWidth
        */
        public static final int GridView_columnWidth = 4;
        /**
          <p>
          @attr description
           Specifies the gravity within each cell. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int GridView_gravity = 0;
        /**
          <p>
          @attr description
           Defines the default horizontal spacing between columns. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:horizontalSpacing
        */
        public static final int GridView_horizontalSpacing = 1;
        /**
          <p>
          @attr description
           Defines how many columns to show. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto_fit</code></td><td>-1</td><td> Display as many columns as possible to fill the available space. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:numColumns
        */
        public static final int GridView_numColumns = 5;
        /**
          <p>
          @attr description
           Defines how columns should stretch to fill the available empty space, if any. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Stretching is disabled. </td></tr>
<tr><td><code>spacingWidth</code></td><td>1</td><td> The spacing between each column is stretched. </td></tr>
<tr><td><code>columnWidth</code></td><td>2</td><td> Each column is stretched equally. </td></tr>
<tr><td><code>spacingWidthUniform</code></td><td>3</td><td> The spacing between each column is uniformly stretched.. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stretchMode
        */
        public static final int GridView_stretchMode = 3;
        /**
          <p>
          @attr description
           Defines the default vertical spacing between rows. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:verticalSpacing
        */
        public static final int GridView_verticalSpacing = 2;
        /** Attributes that can be used with a HorizontalScrollView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #HorizontalScrollView_fillViewport app.guchagucharr.guchagucharunrecorder:fillViewport}</code></td><td> Defines whether the scrollview should stretch its content to fill the viewport.</td></tr>
           </table>
           @see #HorizontalScrollView_fillViewport
         */
        public static final int[] HorizontalScrollView = {
            0x7f010280
        };
        /**
          <p>
          @attr description
           Defines whether the scrollview should stretch its content to fill the viewport. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillViewport
        */
        public static final int HorizontalScrollView_fillViewport = 0;
        /** Attributes that can be used with a Icon.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Icon_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           <tr><td><code>{@link #Icon_mimeType app.guchagucharr.guchagucharunrecorder:mimeType}</code></td><td> Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.</td></tr>
           </table>
           @see #Icon_icon
           @see #Icon_mimeType
         */
        public static final int[] Icon = {
            0x7f010405, 0x7f01045e
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int Icon_icon = 0;
        /**
          <p>
          @attr description
           Specify a MIME type that is handled, as per
             {@link android.content.IntentFilter#addDataType
             IntentFilter.addDataType()}.
             <p><em>Note: MIME type matching in the Android framework is
             case-sensitive, unlike formal RFC MIME types.  As a result,
             MIME types here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mimeType
        */
        public static final int Icon_mimeType = 1;
        /** Attributes that can be used with a IconDefault.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconDefault_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> A Drawable resource providing a graphical representation of its
         associated item.</td></tr>
           </table>
           @see #IconDefault_icon
         */
        public static final int[] IconDefault = {
            0x7f010405
        };
        /**
          <p>
          @attr description
           A Drawable resource providing a graphical representation of its
         associated item.  Use with the
         application tag (to supply a default icon for all application
         components), or with the activity, receiver, service, or instrumentation
         tag (to supply a specific icon for that component).  It may also be
         used with the intent-filter tag to supply an icon to show to the
         user when an activity is being selected based on a particular Intent.
    
         <p>The given icon will be used to display to the user a graphical
         representation of its associated component; for example, as the icon
         for main activity that is displayed in the launcher.  This must be
         a reference to a Drawable resource containing the image definition. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int IconDefault_icon = 0;
        /** Attributes that can be used with a IconMenuView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconMenuView_maxItems app.guchagucharr.guchagucharunrecorder:maxItems}</code></td><td> Defines the maximum number of items to show.</td></tr>
           <tr><td><code>{@link #IconMenuView_maxItemsPerRow app.guchagucharr.guchagucharunrecorder:maxItemsPerRow}</code></td><td> Defines the maximum number of items per row.</td></tr>
           <tr><td><code>{@link #IconMenuView_maxRows app.guchagucharr.guchagucharunrecorder:maxRows}</code></td><td> Defines the maximum number of rows displayed.</td></tr>
           <tr><td><code>{@link #IconMenuView_moreIcon app.guchagucharr.guchagucharunrecorder:moreIcon}</code></td><td> 'More' icon.</td></tr>
           <tr><td><code>{@link #IconMenuView_rowHeight app.guchagucharr.guchagucharunrecorder:rowHeight}</code></td><td> Defines the height of each row.</td></tr>
           </table>
           @see #IconMenuView_maxItems
           @see #IconMenuView_maxItemsPerRow
           @see #IconMenuView_maxRows
           @see #IconMenuView_moreIcon
           @see #IconMenuView_rowHeight
         */
        public static final int[] IconMenuView = {
            0x7f010218, 0x7f010219, 0x7f01021a, 0x7f01021b,
            0x7f01021c
        };
        /**
          <p>
          @attr description
           Defines the maximum number of items to show. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxItems
        */
        public static final int IconMenuView_maxItems = 3;
        /**
          <p>
          @attr description
           Defines the maximum number of items per row. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxItemsPerRow
        */
        public static final int IconMenuView_maxItemsPerRow = 2;
        /**
          <p>
          @attr description
           Defines the maximum number of rows displayed. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxRows
        */
        public static final int IconMenuView_maxRows = 1;
        /**
          <p>
          @attr description
           'More' icon. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:moreIcon
        */
        public static final int IconMenuView_moreIcon = 4;
        /**
          <p>
          @attr description
           Defines the height of each row. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rowHeight
        */
        public static final int IconMenuView_rowHeight = 0;
        /** Attributes that can be used with a ImageSwitcher.
         */
        public static final int[] ImageSwitcher = {
            
        };
        /** Attributes that can be used with a ImageView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ImageView_adjustViewBounds app.guchagucharr.guchagucharunrecorder:adjustViewBounds}</code></td><td> Set this to true if you want the ImageView to adjust its bounds
             to preserve the aspect ratio of its drawable.</td></tr>
           <tr><td><code>{@link #ImageView_baseline app.guchagucharr.guchagucharunrecorder:baseline}</code></td><td> The offset of the baseline within this view.</td></tr>
           <tr><td><code>{@link #ImageView_baselineAlignBottom app.guchagucharr.guchagucharunrecorder:baselineAlignBottom}</code></td><td> If true, the image view will be baseline aligned with based on its
             bottom edge.</td></tr>
           <tr><td><code>{@link #ImageView_cropToPadding app.guchagucharr.guchagucharunrecorder:cropToPadding}</code></td><td> If true, the image will be cropped to fit within its padding.</td></tr>
           <tr><td><code>{@link #ImageView_drawableAlpha app.guchagucharr.guchagucharunrecorder:drawableAlpha}</code></td><td> @hide The alpha value (0-255) set on the ImageView's drawable.</td></tr>
           <tr><td><code>{@link #ImageView_maxHeight app.guchagucharr.guchagucharunrecorder:maxHeight}</code></td><td> An optional argument to supply a maximum height for this view.</td></tr>
           <tr><td><code>{@link #ImageView_maxWidth app.guchagucharr.guchagucharunrecorder:maxWidth}</code></td><td> An optional argument to supply a maximum width for this view.</td></tr>
           <tr><td><code>{@link #ImageView_scaleType app.guchagucharr.guchagucharunrecorder:scaleType}</code></td><td> Controls how the image should be resized or moved to match the size
             of this ImageView.</td></tr>
           <tr><td><code>{@link #ImageView_src app.guchagucharr.guchagucharunrecorder:src}</code></td><td> Sets a drawable as the content of this ImageView.</td></tr>
           <tr><td><code>{@link #ImageView_tint app.guchagucharr.guchagucharunrecorder:tint}</code></td><td> Set a tinting color for the image.</td></tr>
           </table>
           @see #ImageView_adjustViewBounds
           @see #ImageView_baseline
           @see #ImageView_baselineAlignBottom
           @see #ImageView_cropToPadding
           @see #ImageView_drawableAlpha
           @see #ImageView_maxHeight
           @see #ImageView_maxWidth
           @see #ImageView_scaleType
           @see #ImageView_src
           @see #ImageView_tint
         */
        public static final int[] ImageView = {
            0x7f0101ee, 0x7f0101ef, 0x7f0101f0, 0x7f0101f1,
            0x7f0101f2, 0x7f0101f3, 0x7f0101f4, 0x7f0101f5,
            0x7f0101f6, 0x7f0101f7
        };
        /**
          <p>
          @attr description
           Set this to true if you want the ImageView to adjust its bounds
             to preserve the aspect ratio of its drawable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:adjustViewBounds
        */
        public static final int ImageView_adjustViewBounds = 2;
        /**
          <p>
          @attr description
           The offset of the baseline within this view. See {see android.view.View#getBaseline}
             for details 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:baseline
        */
        public static final int ImageView_baseline = 8;
        /**
          <p>
          @attr description
           If true, the image view will be baseline aligned with based on its
             bottom edge. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:baselineAlignBottom
        */
        public static final int ImageView_baselineAlignBottom = 6;
        /**
          <p>
          @attr description
           If true, the image will be cropped to fit within its padding. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:cropToPadding
        */
        public static final int ImageView_cropToPadding = 7;
        /**
          <p>
          @attr description
           @hide The alpha value (0-255) set on the ImageView's drawable. Equivalent
             to calling ImageView.setAlpha(int), not the same as View.setAlpha(float). 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableAlpha
        */
        public static final int ImageView_drawableAlpha = 9;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum height for this view.
             See {see android.widget.ImageView#setMaxHeight} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxHeight
        */
        public static final int ImageView_maxHeight = 4;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum width for this view.
             See {see android.widget.ImageView#setMaxWidth} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxWidth
        */
        public static final int ImageView_maxWidth = 3;
        /**
          <p>
          @attr description
           Controls how the image should be resized or moved to match the size
             of this ImageView. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>matrix</code></td><td>0</td><td></td></tr>
<tr><td><code>fitXY</code></td><td>1</td><td></td></tr>
<tr><td><code>fitStart</code></td><td>2</td><td></td></tr>
<tr><td><code>fitCenter</code></td><td>3</td><td></td></tr>
<tr><td><code>fitEnd</code></td><td>4</td><td></td></tr>
<tr><td><code>center</code></td><td>5</td><td></td></tr>
<tr><td><code>centerCrop</code></td><td>6</td><td></td></tr>
<tr><td><code>centerInside</code></td><td>7</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scaleType
        */
        public static final int ImageView_scaleType = 1;
        /**
          <p>
          @attr description
           Sets a drawable as the content of this ImageView. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:src
        */
        public static final int ImageView_src = 0;
        /**
          <p>
          @attr description
           Set a tinting color for the image. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tint
        */
        public static final int ImageView_tint = 5;
        /**  An <code>input-extras</code> is a container for extra data to supply to
         an input method.  Contains
         one more more {@link #Extra <extra>} tags.  
         */
        public static final int[] InputExtras = {
            
        };
        /**  Use <code>input-method</code> as the root tag of the XML resource that
         describes an
         {@link android.view.inputmethod.InputMethod} service, which is
         referenced from its
         {@link android.view.inputmethod.InputMethod#SERVICE_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InputMethod_isDefault app.guchagucharr.guchagucharunrecorder:isDefault}</code></td><td> Set to true in all of the configurations for which this input
             method should be considered an option as the default.</td></tr>
           <tr><td><code>{@link #InputMethod_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #InputMethod_isDefault
           @see #InputMethod_settingsActivity
         */
        public static final int[] InputMethod = {
            0x7f0101b9, 0x7f0101ba
        };
        /**
          <p>
          @attr description
           Set to true in all of the configurations for which this input
             method should be considered an option as the default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isDefault
        */
        public static final int InputMethod_isDefault = 1;
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int InputMethod_settingsActivity = 0;
        /** Attributes that can be used with a InputMethodService.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InputMethodService_imeExtractEnterAnimation app.guchagucharr.guchagucharunrecorder:imeExtractEnterAnimation}</code></td><td> Animation to use when showing the fullscreen extract UI after
             it had previously been hidden.</td></tr>
           <tr><td><code>{@link #InputMethodService_imeExtractExitAnimation app.guchagucharr.guchagucharunrecorder:imeExtractExitAnimation}</code></td><td> Animation to use when hiding the fullscreen extract UI after
             it had previously been shown.</td></tr>
           <tr><td><code>{@link #InputMethodService_imeFullscreenBackground app.guchagucharr.guchagucharunrecorder:imeFullscreenBackground}</code></td><td> Background to use for entire input method when it is being
             shown in fullscreen mode with the extract view, to ensure
             that it completely covers the application.</td></tr>
           </table>
           @see #InputMethodService_imeExtractEnterAnimation
           @see #InputMethodService_imeExtractExitAnimation
           @see #InputMethodService_imeFullscreenBackground
         */
        public static final int[] InputMethodService = {
            0x7f010383, 0x7f010384, 0x7f010385
        };
        /**
          <p>
          @attr description
           Animation to use when showing the fullscreen extract UI after
             it had previously been hidden. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeExtractEnterAnimation
        */
        public static final int InputMethodService_imeExtractEnterAnimation = 1;
        /**
          <p>
          @attr description
           Animation to use when hiding the fullscreen extract UI after
             it had previously been shown. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeExtractExitAnimation
        */
        public static final int InputMethodService_imeExtractExitAnimation = 2;
        /**
          <p>
          @attr description
           Background to use for entire input method when it is being
             shown in fullscreen mode with the extract view, to ensure
             that it completely covers the application.  This allows,
             for example, the candidate view to be hidden
             while in fullscreen mode without having the application show through
             behind it.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeFullscreenBackground
        */
        public static final int InputMethodService_imeFullscreenBackground = 0;
        /**  This is the subtype of InputMethod. Subtype can describe locales (e.g. en_US, fr_FR...)
         and modes (e.g. voice, keyboard...), and is used for IME switch. This subtype allows
         the system to call the specified subtype of the IME directly. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InputMethod_Subtype_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> The icon of the subtype.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_imeSubtypeExtraValue app.guchagucharr.guchagucharunrecorder:imeSubtypeExtraValue}</code></td><td> The extra value of the subtype.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_imeSubtypeLocale app.guchagucharr.guchagucharunrecorder:imeSubtypeLocale}</code></td><td> The locale of the subtype.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_imeSubtypeMode app.guchagucharr.guchagucharunrecorder:imeSubtypeMode}</code></td><td> The mode of the subtype.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_isAuxiliary app.guchagucharr.guchagucharunrecorder:isAuxiliary}</code></td><td> Set true if the subtype is auxiliary.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> The name of the subtype.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_overridesImplicitlyEnabledSubtype app.guchagucharr.guchagucharunrecorder:overridesImplicitlyEnabledSubtype}</code></td><td> Set true when this subtype should be selected by default if no other subtypes are
             selected explicitly.</td></tr>
           <tr><td><code>{@link #InputMethod_Subtype_subtypeId app.guchagucharr.guchagucharunrecorder:subtypeId}</code></td><td> The unique id for the subtype.</td></tr>
           </table>
           @see #InputMethod_Subtype_icon
           @see #InputMethod_Subtype_imeSubtypeExtraValue
           @see #InputMethod_Subtype_imeSubtypeLocale
           @see #InputMethod_Subtype_imeSubtypeMode
           @see #InputMethod_Subtype_isAuxiliary
           @see #InputMethod_Subtype_label
           @see #InputMethod_Subtype_overridesImplicitlyEnabledSubtype
           @see #InputMethod_Subtype_subtypeId
         */
        public static final int[] InputMethod_Subtype = {
            0x7f0101bb, 0x7f0101bc, 0x7f0101bd, 0x7f0101be,
            0x7f0101bf, 0x7f0101c0, 0x7f010404, 0x7f010405
        };
        /**
          <p>
          @attr description
           The icon of the subtype. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int InputMethod_Subtype_icon = 7;
        /**
          <p>
          @attr description
           The extra value of the subtype. This string can be any string and will be passed to
             the IME when the framework calls the IME with the subtype.  


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeSubtypeExtraValue
        */
        public static final int InputMethod_Subtype_imeSubtypeExtraValue = 4;
        /**
          <p>
          @attr description
           The locale of the subtype. This string should be a locale (e.g. en_US, fr_FR...)
             and will be passed to the IME when the framework calls the IME
             with the subtype. This is also used by the framework to know the supported locales
             of the IME.  


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeSubtypeLocale
        */
        public static final int InputMethod_Subtype_imeSubtypeLocale = 0;
        /**
          <p>
          @attr description
           The mode of the subtype. This string can be a mode (e.g. voice, keyboard...) and this
             string will be passed to the IME when the framework calls the IME with the
             subtype.  


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeSubtypeMode
        */
        public static final int InputMethod_Subtype_imeSubtypeMode = 1;
        /**
          <p>
          @attr description
           Set true if the subtype is auxiliary.  An auxiliary subtype won't be shown in the
             input method selection list in the settings app.
             InputMethodManager#switchToLastInputMethod will ignore auxiliary subtypes when it
             chooses a target subtype. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isAuxiliary
        */
        public static final int InputMethod_Subtype_isAuxiliary = 2;
        /**
          <p>
          @attr description
           The name of the subtype. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int InputMethod_Subtype_label = 6;
        /**
          <p>
          @attr description
           Set true when this subtype should be selected by default if no other subtypes are
             selected explicitly. Note that a subtype with this parameter being true will
             not be shown in the subtypes list. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:overridesImplicitlyEnabledSubtype
        */
        public static final int InputMethod_Subtype_overridesImplicitlyEnabledSubtype = 3;
        /**
          <p>
          @attr description
           The unique id for the subtype. The input method framework keeps track of enabled
             subtypes by ID. When the IME package gets upgraded, enabled IDs will stay enabled even
             if other attributes are different. If the ID is unspecified (by calling the other
             constructor or 0. Arrays.hashCode(new Object[] {locale, mode, extraValue,
             isAuxiliary, overridesImplicitlyEnabledSubtype}) will be used instead. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:subtypeId
        */
        public static final int InputMethod_Subtype_subtypeId = 5;
        /** Attributes that can be used with a InsetDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #InsetDrawable_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #InsetDrawable_insetBottom app.guchagucharr.guchagucharunrecorder:insetBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_insetLeft app.guchagucharr.guchagucharunrecorder:insetLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_insetRight app.guchagucharr.guchagucharunrecorder:insetRight}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_insetTop app.guchagucharr.guchagucharunrecorder:insetTop}</code></td><td></td></tr>
           <tr><td><code>{@link #InsetDrawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #InsetDrawable_drawable
           @see #InsetDrawable_insetBottom
           @see #InsetDrawable_insetLeft
           @see #InsetDrawable_insetRight
           @see #InsetDrawable_insetTop
           @see #InsetDrawable_visible
         */
        public static final int[] InsetDrawable = {
            0x7f0102d5, 0x7f0102dd, 0x7f010301, 0x7f010302,
            0x7f010303, 0x7f010304
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int InsetDrawable_drawable = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#insetBottom}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:insetBottom
        */
        public static final int InsetDrawable_insetBottom = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#insetLeft}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:insetLeft
        */
        public static final int InsetDrawable_insetLeft = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#insetRight}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:insetRight
        */
        public static final int InsetDrawable_insetRight = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#insetTop}
          attribute's value can be found in the {@link #InsetDrawable} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:insetTop
        */
        public static final int InsetDrawable_insetTop = 4;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int InsetDrawable_visible = 0;
        /**  Declaration of an {@link android.content.Intent} object in XML.  May
         also include zero or more {@link #IntentCategory <category> and
         {@link #Extra <extra>} tags. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Intent_action app.guchagucharr.guchagucharunrecorder:action}</code></td><td> The action name to assign to the Intent, as per
            {@link android.content.Intent#setAction Intent.setAction()}.</td></tr>
           <tr><td><code>{@link #Intent_data app.guchagucharr.guchagucharunrecorder:data}</code></td><td> The data URI to assign to the Intent, as per
            {@link android.content.Intent#setData Intent.setData()}.</td></tr>
           <tr><td><code>{@link #Intent_mimeType app.guchagucharr.guchagucharunrecorder:mimeType}</code></td><td> The MIME type name to assign to the Intent, as per
            {@link android.content.Intent#setType Intent.setType()}.</td></tr>
           <tr><td><code>{@link #Intent_targetClass app.guchagucharr.guchagucharunrecorder:targetClass}</code></td><td> The class part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}.</td></tr>
           <tr><td><code>{@link #Intent_targetPackage app.guchagucharr.guchagucharunrecorder:targetPackage}</code></td><td> The package part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}.</td></tr>
           </table>
           @see #Intent_action
           @see #Intent_data
           @see #Intent_mimeType
           @see #Intent_targetClass
           @see #Intent_targetPackage
         */
        public static final int[] Intent = {
            0x7f010433, 0x7f01045e, 0x7f010465, 0x7f010466,
            0x7f010467
        };
        /**
          <p>
          @attr description
           The action name to assign to the Intent, as per
            {@link android.content.Intent#setAction Intent.setAction()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:action
        */
        public static final int Intent_action = 2;
        /**
          <p>
          @attr description
           The data URI to assign to the Intent, as per
            {@link android.content.Intent#setData Intent.setData()}.
            <p><em>Note: scheme and host name matching in the Android framework is
            case-sensitive, unlike the formal RFC.  As a result,
            URIs here should always be normalized to use lower case letters
            for these elements (as well as other proper Uri normalization).</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:data
        */
        public static final int Intent_data = 3;
        /**
          <p>
          @attr description
           The MIME type name to assign to the Intent, as per
            {@link android.content.Intent#setType Intent.setType()}.
            <p><em>Note: MIME type matching in the Android framework is
            case-sensitive, unlike formal RFC MIME types.  As a result,
            MIME types here should always use lower case letters.</em></p> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mimeType
        */
        public static final int Intent_mimeType = 1;
        /**
          <p>
          @attr description
           The class part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetClass
        */
        public static final int Intent_targetClass = 4;
        /**
          <p>
          @attr description
           The package part of the ComponentName to assign to the Intent, as per
            {@link android.content.Intent#setComponent Intent.setComponent()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetPackage
        */
        public static final int Intent_targetPackage = 0;
        /**  A category to add to an Intent, as per
            {@link android.content.Intent#addCategory Intent.addCategory()}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IntentCategory_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> Required name of the category.</td></tr>
           </table>
           @see #IntentCategory_name
         */
        public static final int[] IntentCategory = {
            0x7f01040b
        };
        /**
          <p>
          @attr description
           Required name of the category. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int IntentCategory_name = 0;
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap app.guchagucharr.guchagucharunrecorder:horizontalGap}</code></td><td> Default horizontal gap between keys.</td></tr>
           <tr><td><code>{@link #Keyboard_keyHeight app.guchagucharr.guchagucharunrecorder:keyHeight}</code></td><td> Default height of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_keyWidth app.guchagucharr.guchagucharunrecorder:keyWidth}</code></td><td> Default width of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap app.guchagucharr.guchagucharunrecorder:verticalGap}</code></td><td> Default vertical gap between rows of keys.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_keyHeight
           @see #Keyboard_keyWidth
           @see #Keyboard_verticalGap
         */
        public static final int[] Keyboard = {
            0x7f010391, 0x7f010392, 0x7f010393, 0x7f010394
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 2;
        /**
          <p>
          @attr description
           Default height of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyHeight
        */
        public static final int Keyboard_keyHeight = 1;
        /**
          <p>
          @attr description
           Default width of a key, in pixels or percentage of display width. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyWidth
        */
        public static final int Keyboard_keyWidth = 0;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:verticalGap
        */
        public static final int Keyboard_verticalGap = 3;
        /**  Use <code>keyboard-layouts</code> as the root tag of the XML resource that
         describes a collection of keyboard layouts provided by an application.
         Each keyboard layout is declared by a <code>keyboard-layout</code> tag
         with these attributes.

         The XML resource that contains the keyboard layouts must be referenced from its
         {@link android.hardware.input.InputManager#META_DATA_KEYBOARD_LAYOUTS}
         meta-data entry used with broadcast receivers for
         {@link android.hardware.input.InputManager#ACTION_QUERY_KEYBOARD_LAYOUTS}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayout_keyboardLayout app.guchagucharr.guchagucharunrecorder:keyboardLayout}</code></td><td> The key character map file resource.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> The display label of the keyboard layout.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_name app.guchagucharr.guchagucharunrecorder:name}</code></td><td> The name of the keyboard layout, must be unique in the receiver.</td></tr>
           </table>
           @see #KeyboardLayout_keyboardLayout
           @see #KeyboardLayout_label
           @see #KeyboardLayout_name
         */
        public static final int[] KeyboardLayout = {
            0x7f0103f4, 0x7f010404, 0x7f01040b
        };
        /**
          <p>
          @attr description
           The key character map file resource. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyboardLayout
        */
        public static final int KeyboardLayout_keyboardLayout = 0;
        /**
          <p>
          @attr description
           The display label of the keyboard layout. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int KeyboardLayout_label = 1;
        /**
          <p>
          @attr description
           The name of the keyboard layout, must be unique in the receiver. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:name
        */
        public static final int KeyboardLayout_name = 2;
        /** Attributes that can be used with a KeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardView_keyBackground app.guchagucharr.guchagucharunrecorder:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewHeight app.guchagucharr.guchagucharunrecorder:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewLayout app.guchagucharr.guchagucharunrecorder:keyPreviewLayout}</code></td><td> Layout resource for key press feedback.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPreviewOffset app.guchagucharr.guchagucharunrecorder:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextColor app.guchagucharr.guchagucharunrecorder:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextSize app.guchagucharr.guchagucharunrecorder:keyTextSize}</code></td><td> Size of the text for character keys.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyboardViewStyle app.guchagucharr.guchagucharunrecorder:keyboardViewStyle}</code></td><td> Default KeyboardView style.</td></tr>
           <tr><td><code>{@link #KeyboardView_labelTextSize app.guchagucharr.guchagucharunrecorder:labelTextSize}</code></td><td> Size of the text for custom keys with some text and no icon.</td></tr>
           <tr><td><code>{@link #KeyboardView_popupLayout app.guchagucharr.guchagucharunrecorder:popupLayout}</code></td><td> Layout resource for popup keyboards.</td></tr>
           <tr><td><code>{@link #KeyboardView_shadowColor app.guchagucharr.guchagucharunrecorder:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #KeyboardView_shadowRadius app.guchagucharr.guchagucharunrecorder:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #KeyboardView_verticalCorrection app.guchagucharr.guchagucharunrecorder:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #KeyboardView_keyBackground
           @see #KeyboardView_keyPreviewHeight
           @see #KeyboardView_keyPreviewLayout
           @see #KeyboardView_keyPreviewOffset
           @see #KeyboardView_keyTextColor
           @see #KeyboardView_keyTextSize
           @see #KeyboardView_keyboardViewStyle
           @see #KeyboardView_labelTextSize
           @see #KeyboardView_popupLayout
           @see #KeyboardView_shadowColor
           @see #KeyboardView_shadowRadius
           @see #KeyboardView_verticalCorrection
         */
        public static final int[] KeyboardView = {
            0x7f010254, 0x7f010257, 0x7f010386, 0x7f010387,
            0x7f010388, 0x7f010389, 0x7f01038a, 0x7f01038b,
            0x7f01038c, 0x7f01038d, 0x7f01038e, 0x7f01038f
        };
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyBackground
        */
        public static final int KeyboardView_keyBackground = 3;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyPreviewHeight
        */
        public static final int KeyboardView_keyPreviewHeight = 9;
        /**
          <p>
          @attr description
           Layout resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyPreviewLayout
        */
        public static final int KeyboardView_keyPreviewLayout = 7;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyPreviewOffset
        */
        public static final int KeyboardView_keyPreviewOffset = 8;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyTextColor
        */
        public static final int KeyboardView_keyTextColor = 6;
        /**
          <p>
          @attr description
           Size of the text for character keys. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyTextSize
        */
        public static final int KeyboardView_keyTextSize = 4;
        /**
          <p>
          @attr description
           Default KeyboardView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyboardViewStyle
        */
        public static final int KeyboardView_keyboardViewStyle = 2;
        /**
          <p>
          @attr description
           Size of the text for custom keys with some text and no icon. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:labelTextSize
        */
        public static final int KeyboardView_labelTextSize = 5;
        /**
          <p>
          @attr description
           Layout resource for popup keyboards. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupLayout
        */
        public static final int KeyboardView_popupLayout = 11;
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shadowColor
        */
        public static final int KeyboardView_shadowColor = 0;
        /**
          <p>
          @attr description
           Radius of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shadowRadius
        */
        public static final int KeyboardView_shadowRadius = 1;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:verticalCorrection
        */
        public static final int KeyboardView_verticalCorrection = 10;
        /** Attributes that can be used with a KeyboardViewPreviewState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardViewPreviewState_state_long_pressable app.guchagucharr.guchagucharunrecorder:state_long_pressable}</code></td><td> State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background.</td></tr>
           </table>
           @see #KeyboardViewPreviewState_state_long_pressable
         */
        public static final int[] KeyboardViewPreviewState = {
            0x7f010390
        };
        /**
          <p>
          @attr description
           State for {@link android.inputmethodservice.KeyboardView KeyboardView}
                key preview background. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_long_pressable
        */
        public static final int KeyboardViewPreviewState_state_long_pressable = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_codes app.guchagucharr.guchagucharunrecorder:codes}</code></td><td> The unicode value or comma-separated values that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_iconPreview app.guchagucharr.guchagucharunrecorder:iconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isModifier app.guchagucharr.guchagucharunrecorder:isModifier}</code></td><td> Whether this is a modifier key such as Alt or Shift.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isRepeatable app.guchagucharr.guchagucharunrecorder:isRepeatable}</code></td><td> Whether long-pressing on this key will make it repeat.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isSticky app.guchagucharr.guchagucharunrecorder:isSticky}</code></td><td> Whether this is a toggle key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyEdgeFlags app.guchagucharr.guchagucharunrecorder:keyEdgeFlags}</code></td><td> Key edge flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIcon app.guchagucharr.guchagucharunrecorder:keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabel app.guchagucharr.guchagucharunrecorder:keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyOutputText app.guchagucharr.guchagucharunrecorder:keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyboardMode app.guchagucharr.guchagucharunrecorder:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupCharacters app.guchagucharr.guchagucharunrecorder:popupCharacters}</code></td><td> The characters to display in the popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_popupKeyboard app.guchagucharr.guchagucharunrecorder:popupKeyboard}</code></td><td> The XML keyboard layout of any popup keyboard.</td></tr>
           </table>
           @see #Keyboard_Key_codes
           @see #Keyboard_Key_iconPreview
           @see #Keyboard_Key_isModifier
           @see #Keyboard_Key_isRepeatable
           @see #Keyboard_Key_isSticky
           @see #Keyboard_Key_keyEdgeFlags
           @see #Keyboard_Key_keyIcon
           @see #Keyboard_Key_keyLabel
           @see #Keyboard_Key_keyOutputText
           @see #Keyboard_Key_keyboardMode
           @see #Keyboard_Key_popupCharacters
           @see #Keyboard_Key_popupKeyboard
         */
        public static final int[] Keyboard_Key = {
            0x7f010396, 0x7f010397, 0x7f010398, 0x7f010399,
            0x7f01039a, 0x7f01039b, 0x7f01039c, 0x7f01039d,
            0x7f01039e, 0x7f01039f, 0x7f0103a0, 0x7f0103a1
        };
        /**
          <p>
          @attr description
           The unicode value or comma-separated values that this key outputs. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:codes
        */
        public static final int Keyboard_Key_codes = 1;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:iconPreview
        */
        public static final int Keyboard_Key_iconPreview = 8;
        /**
          <p>
          @attr description
           Whether this is a modifier key such as Alt or Shift. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isModifier
        */
        public static final int Keyboard_Key_isModifier = 5;
        /**
          <p>
          @attr description
           Whether long-pressing on this key will make it repeat. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isRepeatable
        */
        public static final int Keyboard_Key_isRepeatable = 7;
        /**
          <p>
          @attr description
           Whether this is a toggle key. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isSticky
        */
        public static final int Keyboard_Key_isSticky = 6;
        /**
          <p>
          @attr description
           Key edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>1</td><td> Key is anchored to the left of the keyboard. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Key is anchored to the right of the keyboard. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyEdgeFlags
        */
        public static final int Keyboard_Key_keyEdgeFlags = 4;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyIcon
        */
        public static final int Keyboard_Key_keyIcon = 11;
        /**
          <p>
          @attr description
           The label to display on the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyLabel
        */
        public static final int Keyboard_Key_keyLabel = 10;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyOutputText
        */
        public static final int Keyboard_Key_keyOutputText = 9;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the key will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyboardMode
        */
        public static final int Keyboard_Key_keyboardMode = 0;
        /**
          <p>
          @attr description
           The characters to display in the popup keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupCharacters
        */
        public static final int Keyboard_Key_popupCharacters = 3;
        /**
          <p>
          @attr description
           The XML keyboard layout of any popup keyboard. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupKeyboard
        */
        public static final int Keyboard_Key_popupKeyboard = 2;
        /** Attributes that can be used with a Keyboard_Row.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Row_keyboardMode app.guchagucharr.guchagucharunrecorder:keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Row_rowEdgeFlags app.guchagucharr.guchagucharunrecorder:rowEdgeFlags}</code></td><td> Row edge flags.</td></tr>
           </table>
           @see #Keyboard_Row_keyboardMode
           @see #Keyboard_Row_rowEdgeFlags
         */
        public static final int[] Keyboard_Row = {
            0x7f010395, 0x7f010396
        };
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keyboardMode
        */
        public static final int Keyboard_Row_keyboardMode = 1;
        /**
          <p>
          @attr description
           Row edge flags. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>4</td><td> Row is anchored to the top of the keyboard. </td></tr>
<tr><td><code>bottom</code></td><td>8</td><td> Row is anchored to the bottom of the keyboard. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rowEdgeFlags
        */
        public static final int Keyboard_Row_rowEdgeFlags = 0;
        /** Attributes that can be used with a KeyguardGlowStripView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_dotSize app.guchagucharr.guchagucharunrecorder:dotSize}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_glowDot app.guchagucharr.guchagucharunrecorder:glowDot}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_leftToRight app.guchagucharr.guchagucharunrecorder:leftToRight}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_numDots app.guchagucharr.guchagucharunrecorder:numDots}</code></td><td></td></tr>
           </table>
           @see #KeyguardGlowStripView_dotSize
           @see #KeyguardGlowStripView_glowDot
           @see #KeyguardGlowStripView_leftToRight
           @see #KeyguardGlowStripView_numDots
         */
        public static final int[] KeyguardGlowStripView = {
            0x7f0103fa, 0x7f0103fb, 0x7f0103fc, 0x7f0103fd
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#dotSize}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:dotSize
        */
        public static final int KeyguardGlowStripView_dotSize = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#glowDot}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:glowDot
        */
        public static final int KeyguardGlowStripView_glowDot = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#leftToRight}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:leftToRight
        */
        public static final int KeyguardGlowStripView_leftToRight = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#numDots}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:numDots
        */
        public static final int KeyguardGlowStripView_numDots = 1;
        /** Attributes that can be used with a KeyguardSecurityViewFlipper_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxHeight app.guchagucharr.guchagucharunrecorder:layout_maxHeight}</code></td><td> The maximum valid height for this item.</td></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxWidth app.guchagucharr.guchagucharunrecorder:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxHeight
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxWidth
         */
        public static final int[] KeyguardSecurityViewFlipper_Layout = {
            0x7f0103cd, 0x7f010400
        };
        /**
          <p>
          @attr description
           The maximum valid height for this item. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unbounded</code></td><td>-1</td><td> Indicates that the view may be resized arbitrarily large. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_maxHeight
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxHeight = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_maxWidth
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxWidth = 1;
        /**  Drawable used to render several drawables stacked on top of each other.
         Each child drawable can be controlled individually. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LayerDrawable_opacity app.guchagucharr.guchagucharunrecorder:opacity}</code></td><td> Indicates the opacity of the layer.</td></tr>
           </table>
           @see #LayerDrawable_opacity
         */
        public static final int[] LayerDrawable = {
            0x7f0102f8
        };
        /**
          <p>
          @attr description
           Indicates the opacity of the layer. This can be useful to allow the
              system to enable drawing optimizations. The default value is
              translucent. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>opaque</code></td><td>-1</td><td> Indicates that the layer is opaque and contains no transparent
                 nor translucent pixels. </td></tr>
<tr><td><code>transparent</code></td><td>-2</td><td> The layer is completely transparent (no pixel will be drawn.) </td></tr>
<tr><td><code>translucent</code></td><td>-3</td><td> The layer has translucent pixels. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:opacity
        */
        public static final int LayerDrawable_opacity = 0;
        /**  Describes an item (or child) of a LayerDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LayerDrawableItem_bottom app.guchagucharr.guchagucharunrecorder:bottom}</code></td><td> Bottom coordinate of the layer.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Drawable used to render the layer.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_id app.guchagucharr.guchagucharunrecorder:id}</code></td><td> Identifier of the layer.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_left app.guchagucharr.guchagucharunrecorder:left}</code></td><td> Left coordinate of the layer.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_right app.guchagucharr.guchagucharunrecorder:right}</code></td><td> Right coordinate of the layer.</td></tr>
           <tr><td><code>{@link #LayerDrawableItem_top app.guchagucharr.guchagucharunrecorder:top}</code></td><td> Top coordinate of the layer.</td></tr>
           </table>
           @see #LayerDrawableItem_bottom
           @see #LayerDrawableItem_drawable
           @see #LayerDrawableItem_id
           @see #LayerDrawableItem_left
           @see #LayerDrawableItem_right
           @see #LayerDrawableItem_top
         */
        public static final int[] LayerDrawableItem = {
            0x7f010162, 0x7f0102dd, 0x7f0102f4, 0x7f0102f5,
            0x7f0102f6, 0x7f0102f7
        };
        /**
          <p>
          @attr description
           Bottom coordinate of the layer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bottom
        */
        public static final int LayerDrawableItem_bottom = 5;
        /**
          <p>
          @attr description
           Drawable used to render the layer. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int LayerDrawableItem_drawable = 1;
        /**
          <p>
          @attr description
           Identifier of the layer. This can be used to retrieve the layer
             from a drawbable container. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:id
        */
        public static final int LayerDrawableItem_id = 0;
        /**
          <p>
          @attr description
           Left coordinate of the layer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:left
        */
        public static final int LayerDrawableItem_left = 2;
        /**
          <p>
          @attr description
           Right coordinate of the layer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:right
        */
        public static final int LayerDrawableItem_right = 4;
        /**
          <p>
          @attr description
           Top coordinate of the layer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:top
        */
        public static final int LayerDrawableItem_top = 3;
        /** Attributes that can be used with a LayoutAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LayoutAnimation_animation app.guchagucharr.guchagucharunrecorder:animation}</code></td><td> Animation to use on each child.</td></tr>
           <tr><td><code>{@link #LayoutAnimation_animationOrder app.guchagucharr.guchagucharunrecorder:animationOrder}</code></td><td> The order in which the animations will be started.</td></tr>
           <tr><td><code>{@link #LayoutAnimation_delay app.guchagucharr.guchagucharunrecorder:delay}</code></td><td> Fraction of the animation duration used to delay the beginning of
         the animation of each child.</td></tr>
           <tr><td><code>{@link #LayoutAnimation_interpolator app.guchagucharr.guchagucharunrecorder:interpolator}</code></td><td> Interpolator used to interpolate the delay between the start of
         each animation.</td></tr>
           </table>
           @see #LayoutAnimation_animation
           @see #LayoutAnimation_animationOrder
           @see #LayoutAnimation_delay
           @see #LayoutAnimation_interpolator
         */
        public static final int[] LayoutAnimation = {
            0x7f010228, 0x7f010320, 0x7f010321, 0x7f010322
        };
        /**
          <p>
          @attr description
           Animation to use on each child. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animation
        */
        public static final int LayoutAnimation_animation = 2;
        /**
          <p>
          @attr description
           The order in which the animations will be started. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Animations are started in the natural order. </td></tr>
<tr><td><code>reverse</code></td><td>1</td><td> Animations are started in the reverse order. </td></tr>
<tr><td><code>random</code></td><td>2</td><td> Animations are started randomly. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animationOrder
        */
        public static final int LayoutAnimation_animationOrder = 3;
        /**
          <p>
          @attr description
           Fraction of the animation duration used to delay the beginning of
         the animation of each child. 


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:delay
        */
        public static final int LayoutAnimation_delay = 1;
        /**
          <p>
          @attr description
           Interpolator used to interpolate the delay between the start of
         each animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:interpolator
        */
        public static final int LayoutAnimation_interpolator = 0;
        /** Attributes that can be used with a LevelListDrawableItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LevelListDrawableItem_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #LevelListDrawableItem_maxLevel app.guchagucharr.guchagucharunrecorder:maxLevel}</code></td><td> The maximum level allowed for this item.</td></tr>
           <tr><td><code>{@link #LevelListDrawableItem_minLevel app.guchagucharr.guchagucharunrecorder:minLevel}</code></td><td> The minimum level allowed for this item.</td></tr>
           </table>
           @see #LevelListDrawableItem_drawable
           @see #LevelListDrawableItem_maxLevel
           @see #LevelListDrawableItem_minLevel
         */
        public static final int[] LevelListDrawableItem = {
            0x7f0102dd, 0x7f0102f9, 0x7f0102fa
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int LevelListDrawableItem_drawable = 0;
        /**
          <p>
          @attr description
           The maximum level allowed for this item. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxLevel
        */
        public static final int LevelListDrawableItem_maxLevel = 2;
        /**
          <p>
          @attr description
           The minimum level allowed for this item. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minLevel
        */
        public static final int LevelListDrawableItem_minLevel = 1;
        /** Attributes that can be used with a LinearLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayout_baselineAligned app.guchagucharr.guchagucharunrecorder:baselineAligned}</code></td><td> When set to false, prevents the layout from aligning its children's
             baselines.</td></tr>
           <tr><td><code>{@link #LinearLayout_baselineAlignedChildIndex app.guchagucharr.guchagucharunrecorder:baselineAlignedChildIndex}</code></td><td> When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).</td></tr>
           <tr><td><code>{@link #LinearLayout_divider app.guchagucharr.guchagucharunrecorder:divider}</code></td><td> Drawable to use as a vertical divider between buttons.</td></tr>
           <tr><td><code>{@link #LinearLayout_dividerPadding app.guchagucharr.guchagucharunrecorder:dividerPadding}</code></td><td> Size of padding on either end of a divider.</td></tr>
           <tr><td><code>{@link #LinearLayout_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.</td></tr>
           <tr><td><code>{@link #LinearLayout_measureWithLargestChild app.guchagucharr.guchagucharunrecorder:measureWithLargestChild}</code></td><td> When set to true, all children with a weight will be considered having
             the minimum size of the largest child.</td></tr>
           <tr><td><code>{@link #LinearLayout_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.</td></tr>
           <tr><td><code>{@link #LinearLayout_showDividers app.guchagucharr.guchagucharunrecorder:showDividers}</code></td><td> Setting for which dividers to show.</td></tr>
           <tr><td><code>{@link #LinearLayout_weightSum app.guchagucharr.guchagucharunrecorder:weightSum}</code></td><td> Defines the maximum weight sum.</td></tr>
           </table>
           @see #LinearLayout_baselineAligned
           @see #LinearLayout_baselineAlignedChildIndex
           @see #LinearLayout_divider
           @see #LinearLayout_dividerPadding
           @see #LinearLayout_gravity
           @see #LinearLayout_measureWithLargestChild
           @see #LinearLayout_orientation
           @see #LinearLayout_showDividers
           @see #LinearLayout_weightSum
         */
        public static final int[] LinearLayout = {
            0x7f010127, 0x7f01012b, 0x7f0101fb, 0x7f0101fc,
            0x7f0101fd, 0x7f0101fe, 0x7f0101ff, 0x7f010200,
            0x7f010206
        };
        /**
          <p>
          @attr description
           When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:baselineAligned
        */
        public static final int LinearLayout_baselineAligned = 2;
        /**
          <p>
          @attr description
           When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:baselineAlignedChildIndex
        */
        public static final int LinearLayout_baselineAlignedChildIndex = 3;
        /**
          <p>
          @attr description
           Drawable to use as a vertical divider between buttons. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:divider
        */
        public static final int LinearLayout_divider = 8;
        /**
          <p>
          @attr description
           Size of padding on either end of a divider. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dividerPadding
        */
        public static final int LinearLayout_dividerPadding = 7;
        /**
          <p>
          @attr description
           Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.  


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int LinearLayout_gravity = 0;
        /**
          <p>
          @attr description
           When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:measureWithLargestChild
        */
        public static final int LinearLayout_measureWithLargestChild = 5;
        /**
          <p>
          @attr description
           Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int LinearLayout_orientation = 1;
        /**
          <p>
          @attr description
           Setting for which dividers to show. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>beginning</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:showDividers
        */
        public static final int LinearLayout_showDividers = 6;
        /**
          <p>
          @attr description
           Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:weightSum
        */
        public static final int LinearLayout_weightSum = 4;
        /** Attributes that can be used with a LinearLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_gravity app.guchagucharr.guchagucharunrecorder:layout_gravity}</code></td><td> Standard gravity constant that a child supplies to its parent.</td></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_height app.guchagucharr.guchagucharunrecorder:layout_height}</code></td><td> Specifies the basic height of the view.</td></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_weight app.guchagucharr.guchagucharunrecorder:layout_weight}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayout_Layout_layout_width app.guchagucharr.guchagucharunrecorder:layout_width}</code></td><td> Specifies the basic width of the view.</td></tr>
           </table>
           @see #LinearLayout_Layout_layout_gravity
           @see #LinearLayout_Layout_layout_height
           @see #LinearLayout_Layout_layout_weight
           @see #LinearLayout_Layout_layout_width
         */
        public static final int[] LinearLayout_Layout = {
            0x7f01012a, 0x7f0101b0, 0x7f0101b1, 0x7f0102a1
        };
        /**
          <p>
          @attr description
           Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_gravity
        */
        public static final int LinearLayout_Layout_layout_gravity = 0;
        /**
          <p>
          @attr description
           Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_height
        */
        public static final int LinearLayout_Layout_layout_height = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#layout_weight}
          attribute's value can be found in the {@link #LinearLayout_Layout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_weight
        */
        public static final int LinearLayout_Layout_layout_weight = 3;
        /**
          <p>
          @attr description
           Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_width
        */
        public static final int LinearLayout_Layout_layout_width = 1;
        /**  Base attributes available to ListPreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListPreference_entries app.guchagucharr.guchagucharunrecorder:entries}</code></td><td> The human-readable array to present as a list.</td></tr>
           <tr><td><code>{@link #ListPreference_entryValues app.guchagucharr.guchagucharunrecorder:entryValues}</code></td><td> The array to find the value to save for a preference when an entry from
             entries is selected.</td></tr>
           </table>
           @see #ListPreference_entries
           @see #ListPreference_entryValues
         */
        public static final int[] ListPreference = {
            0x7f010129, 0x7f01037e
        };
        /**
          <p>
          @attr description
           The human-readable array to present as a list. Each entry must have a corresponding
             index in entryValues. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:entries
        */
        public static final int ListPreference_entries = 0;
        /**
          <p>
          @attr description
           The array to find the value to save for a preference when an entry from
             entries is selected. If a user clicks on the second item in entries, the
             second item in this array will be saved to the preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:entryValues
        */
        public static final int ListPreference_entryValues = 1;
        /** Attributes that can be used with a ListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListView_divider app.guchagucharr.guchagucharunrecorder:divider}</code></td><td> Drawable or color to draw between list items.</td></tr>
           <tr><td><code>{@link #ListView_dividerHeight app.guchagucharr.guchagucharunrecorder:dividerHeight}</code></td><td> Height of the divider.</td></tr>
           <tr><td><code>{@link #ListView_entries app.guchagucharr.guchagucharunrecorder:entries}</code></td><td> Reference to an array resource that will populate the ListView.</td></tr>
           <tr><td><code>{@link #ListView_footerDividersEnabled app.guchagucharr.guchagucharunrecorder:footerDividersEnabled}</code></td><td> When set to false, the ListView will not draw the divider before each footer view.</td></tr>
           <tr><td><code>{@link #ListView_headerDividersEnabled app.guchagucharr.guchagucharunrecorder:headerDividersEnabled}</code></td><td> When set to false, the ListView will not draw the divider after each header view.</td></tr>
           <tr><td><code>{@link #ListView_overScrollFooter app.guchagucharr.guchagucharunrecorder:overScrollFooter}</code></td><td> Drawable to draw below list content.</td></tr>
           <tr><td><code>{@link #ListView_overScrollHeader app.guchagucharr.guchagucharunrecorder:overScrollHeader}</code></td><td> Drawable to draw above list content.</td></tr>
           </table>
           @see #ListView_divider
           @see #ListView_dividerHeight
           @see #ListView_entries
           @see #ListView_footerDividersEnabled
           @see #ListView_headerDividersEnabled
           @see #ListView_overScrollFooter
           @see #ListView_overScrollHeader
         */
        public static final int[] ListView = {
            0x7f010129, 0x7f010206, 0x7f010207, 0x7f010208,
            0x7f010209, 0x7f01020a, 0x7f01020b
        };
        /**
          <p>
          @attr description
           Drawable or color to draw between list items. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:divider
        */
        public static final int ListView_divider = 1;
        /**
          <p>
          @attr description
           Height of the divider. Will use the intrinsic height of the divider if this
             is not specified. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dividerHeight
        */
        public static final int ListView_dividerHeight = 2;
        /**
          <p>
          @attr description
           Reference to an array resource that will populate the ListView.  For static content,
             this is simpler than populating the ListView programmatically. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:entries
        */
        public static final int ListView_entries = 0;
        /**
          <p>
          @attr description
           When set to false, the ListView will not draw the divider before each footer view.
             The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:footerDividersEnabled
        */
        public static final int ListView_footerDividersEnabled = 4;
        /**
          <p>
          @attr description
           When set to false, the ListView will not draw the divider after each header view.
             The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:headerDividersEnabled
        */
        public static final int ListView_headerDividersEnabled = 3;
        /**
          <p>
          @attr description
           Drawable to draw below list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:overScrollFooter
        */
        public static final int ListView_overScrollFooter = 6;
        /**
          <p>
          @attr description
           Drawable to draw above list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:overScrollHeader
        */
        public static final int ListView_overScrollHeader = 5;
        /** Attributes that can be used with a LockPatternView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LockPatternView_aspect app.guchagucharr.guchagucharunrecorder:aspect}</code></td><td> Aspect to use when drawing LockPatternView.</td></tr>
           </table>
           @see #LockPatternView_aspect
         */
        public static final int[] LockPatternView = {
            0x7f0103cf
        };
        /**
          <p>
          @attr description
           Aspect to use when drawing LockPatternView. Choices are "square"(default), "lock_width"
             or "lock_height" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:aspect
        */
        public static final int LockPatternView_aspect = 0;
        /** Attributes that can be used with a MapAttrs.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MapAttrs_cameraBearing app.guchagucharr.guchagucharunrecorder:cameraBearing}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_cameraTargetLat app.guchagucharr.guchagucharunrecorder:cameraTargetLat}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_cameraTargetLng app.guchagucharr.guchagucharunrecorder:cameraTargetLng}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_cameraTilt app.guchagucharr.guchagucharunrecorder:cameraTilt}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_cameraZoom app.guchagucharr.guchagucharunrecorder:cameraZoom}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_mapType app.guchagucharr.guchagucharunrecorder:mapType}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_uiCompass app.guchagucharr.guchagucharunrecorder:uiCompass}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_uiRotateGestures app.guchagucharr.guchagucharunrecorder:uiRotateGestures}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_uiScrollGestures app.guchagucharr.guchagucharunrecorder:uiScrollGestures}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_uiTiltGestures app.guchagucharr.guchagucharunrecorder:uiTiltGestures}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_uiZoomControls app.guchagucharr.guchagucharunrecorder:uiZoomControls}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_uiZoomGestures app.guchagucharr.guchagucharunrecorder:uiZoomGestures}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_useViewLifecycle app.guchagucharr.guchagucharunrecorder:useViewLifecycle}</code></td><td></td></tr>
           <tr><td><code>{@link #MapAttrs_zOrderOnTop app.guchagucharr.guchagucharunrecorder:zOrderOnTop}</code></td><td></td></tr>
           </table>
           @see #MapAttrs_cameraBearing
           @see #MapAttrs_cameraTargetLat
           @see #MapAttrs_cameraTargetLng
           @see #MapAttrs_cameraTilt
           @see #MapAttrs_cameraZoom
           @see #MapAttrs_mapType
           @see #MapAttrs_uiCompass
           @see #MapAttrs_uiRotateGestures
           @see #MapAttrs_uiScrollGestures
           @see #MapAttrs_uiTiltGestures
           @see #MapAttrs_uiZoomControls
           @see #MapAttrs_uiZoomGestures
           @see #MapAttrs_useViewLifecycle
           @see #MapAttrs_zOrderOnTop
         */
        public static final int[] MapAttrs = {
            0x7f010003, 0x7f010004, 0x7f010005, 0x7f010006,
            0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a,
            0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e,
            0x7f01000f, 0x7f010010
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#cameraBearing}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:cameraBearing
        */
        public static final int MapAttrs_cameraBearing = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#cameraTargetLat}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:cameraTargetLat
        */
        public static final int MapAttrs_cameraTargetLat = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#cameraTargetLng}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:cameraTargetLng
        */
        public static final int MapAttrs_cameraTargetLng = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#cameraTilt}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:cameraTilt
        */
        public static final int MapAttrs_cameraTilt = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#cameraZoom}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:cameraZoom
        */
        public static final int MapAttrs_cameraZoom = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#mapType}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>normal</code></td><td>1</td><td></td></tr>
<tr><td><code>satellite</code></td><td>2</td><td></td></tr>
<tr><td><code>terrain</code></td><td>3</td><td></td></tr>
<tr><td><code>hybrid</code></td><td>4</td><td></td></tr>
</table>
          @attr name app.guchagucharr.guchagucharunrecorder:mapType
        */
        public static final int MapAttrs_mapType = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#uiCompass}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:uiCompass
        */
        public static final int MapAttrs_uiCompass = 6;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#uiRotateGestures}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:uiRotateGestures
        */
        public static final int MapAttrs_uiRotateGestures = 7;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#uiScrollGestures}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:uiScrollGestures
        */
        public static final int MapAttrs_uiScrollGestures = 8;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#uiTiltGestures}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:uiTiltGestures
        */
        public static final int MapAttrs_uiTiltGestures = 9;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#uiZoomControls}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:uiZoomControls
        */
        public static final int MapAttrs_uiZoomControls = 10;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#uiZoomGestures}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:uiZoomGestures
        */
        public static final int MapAttrs_uiZoomGestures = 11;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#useViewLifecycle}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:useViewLifecycle
        */
        public static final int MapAttrs_useViewLifecycle = 12;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#zOrderOnTop}
          attribute's value can be found in the {@link #MapAttrs} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:zOrderOnTop
        */
        public static final int MapAttrs_zOrderOnTop = 13;
        /**  The set of attributes for a MapView. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MapView_apiKey app.guchagucharr.guchagucharunrecorder:apiKey}</code></td><td> Value is a string that specifies the Maps API Key to use.</td></tr>
           </table>
           @see #MapView_apiKey
         */
        public static final int[] MapView = {
            0x7f01035a
        };
        /**
          <p>
          @attr description
           Value is a string that specifies the Maps API Key to use. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:apiKey
        */
        public static final int MapView_apiKey = 0;
        /** Attributes that can be used with a MediaRouteButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MediaRouteButton_externalRouteEnabledDrawable app.guchagucharr.guchagucharunrecorder:externalRouteEnabledDrawable}</code></td><td> This drawable is a state list where the "activated" state
             indicates active media routing.</td></tr>
           <tr><td><code>{@link #MediaRouteButton_mediaRouteTypes app.guchagucharr.guchagucharunrecorder:mediaRouteTypes}</code></td><td> The types of media routes the button and its resulting
             chooser will filter by.</td></tr>
           <tr><td><code>{@link #MediaRouteButton_minHeight app.guchagucharr.guchagucharunrecorder:minHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #MediaRouteButton_minWidth app.guchagucharr.guchagucharunrecorder:minWidth}</code></td><td></td></tr>
           </table>
           @see #MediaRouteButton_externalRouteEnabledDrawable
           @see #MediaRouteButton_mediaRouteTypes
           @see #MediaRouteButton_minHeight
           @see #MediaRouteButton_minWidth
         */
        public static final int[] MediaRouteButton = {
            0x7f010226, 0x7f010227, 0x7f0103f5, 0x7f0103f6
        };
        /**
          <p>
          @attr description
           This drawable is a state list where the "activated" state
             indicates active media routing. Non-activated indicates
             that media is playing to the local device only.
             @hide 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:externalRouteEnabledDrawable
        */
        public static final int MediaRouteButton_externalRouteEnabledDrawable = 2;
        /**
          <p>
          @attr description
           The types of media routes the button and its resulting
             chooser will filter by. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>liveAudio</code></td><td>0x1</td><td> Allow selection of live audio routes. </td></tr>
<tr><td><code>user</code></td><td>0x800000</td><td> Allow selection of user (app-specified) routes. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mediaRouteTypes
        */
        public static final int MediaRouteButton_mediaRouteTypes = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minHeight}
          attribute's value can be found in the {@link #MediaRouteButton} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minHeight
        */
        public static final int MediaRouteButton_minHeight = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minWidth}
          attribute's value can be found in the {@link #MediaRouteButton} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minWidth
        */
        public static final int MediaRouteButton_minWidth = 0;
        /**  Base attributes that are available to all Menu objects. 
         */
        public static final int[] Menu = {
            
        };
        /**  Base attributes that are available to all groups. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuGroup_checkableBehavior app.guchagucharr.guchagucharunrecorder:checkableBehavior}</code></td><td> Whether the items are capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuGroup_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Whether the items are enabled.</td></tr>
           <tr><td><code>{@link #MenuGroup_id app.guchagucharr.guchagucharunrecorder:id}</code></td><td> The ID of the group.</td></tr>
           <tr><td><code>{@link #MenuGroup_menuCategory app.guchagucharr.guchagucharunrecorder:menuCategory}</code></td><td> The category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_orderInCategory app.guchagucharr.guchagucharunrecorder:orderInCategory}</code></td><td> The order within the category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Whether the items are shown/visible.</td></tr>
           </table>
           @see #MenuGroup_checkableBehavior
           @see #MenuGroup_enabled
           @see #MenuGroup_id
           @see #MenuGroup_menuCategory
           @see #MenuGroup_orderInCategory
           @see #MenuGroup_visible
         */
        public static final int[] MenuGroup = {
            0x7f010162, 0x7f010250, 0x7f0102d5, 0x7f01035b,
            0x7f01035c, 0x7f01035d
        };
        /**
          <p>
          @attr description
           Whether the items are capable of displaying a check mark. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> The items are not checkable. </td></tr>
<tr><td><code>all</code></td><td>1</td><td> The items are all checkable. </td></tr>
<tr><td><code>single</code></td><td>2</td><td> The items are checkable and there will only be a single checked item in
                 this group. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkableBehavior
        */
        public static final int MenuGroup_checkableBehavior = 5;
        /**
          <p>
          @attr description
           Whether the items are enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int MenuGroup_enabled = 1;
        /**
          <p>
          @attr description
           The ID of the group. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:id
        */
        public static final int MenuGroup_id = 0;
        /**
          <p>
          @attr description
           The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.) 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>container</code></td><td>0x00010000</td><td> Items are part of a container. </td></tr>
<tr><td><code>system</code></td><td>0x00020000</td><td> Items are provided by the system. </td></tr>
<tr><td><code>secondary</code></td><td>0x00030000</td><td> Items are user-supplied secondary (infrequently used). </td></tr>
<tr><td><code>alternative</code></td><td>0x00040000</td><td> Items are alternative actions. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:menuCategory
        */
        public static final int MenuGroup_menuCategory = 3;
        /**
          <p>
          @attr description
           The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orderInCategory
        */
        public static final int MenuGroup_orderInCategory = 4;
        /**
          <p>
          @attr description
           Whether the items are shown/visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int MenuGroup_visible = 2;
        /**  Base attributes that are available to all Item objects. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItem_actionLayout app.guchagucharr.guchagucharunrecorder:actionLayout}</code></td><td> An optional layout to be used as an action view.</td></tr>
           <tr><td><code>{@link #MenuItem_actionProviderClass app.guchagucharr.guchagucharunrecorder:actionProviderClass}</code></td><td> The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.</td></tr>
           <tr><td><code>{@link #MenuItem_actionViewClass app.guchagucharr.guchagucharunrecorder:actionViewClass}</code></td><td> The name of an optional View class to instantiate and use as an
             action view.</td></tr>
           <tr><td><code>{@link #MenuItem_alphabeticShortcut app.guchagucharr.guchagucharunrecorder:alphabeticShortcut}</code></td><td> The alphabetic shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_checkable app.guchagucharr.guchagucharunrecorder:checkable}</code></td><td> Whether the item is capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuItem_checked app.guchagucharr.guchagucharunrecorder:checked}</code></td><td> Whether the item is checked.</td></tr>
           <tr><td><code>{@link #MenuItem_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Whether the item is enabled.</td></tr>
           <tr><td><code>{@link #MenuItem_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> The icon associated with this item.</td></tr>
           <tr><td><code>{@link #MenuItem_id app.guchagucharr.guchagucharunrecorder:id}</code></td><td> The ID of the item.</td></tr>
           <tr><td><code>{@link #MenuItem_menuCategory app.guchagucharr.guchagucharunrecorder:menuCategory}</code></td><td> The category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_numericShortcut app.guchagucharr.guchagucharunrecorder:numericShortcut}</code></td><td> The numeric shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_onClick app.guchagucharr.guchagucharunrecorder:onClick}</code></td><td> Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked.</td></tr>
           <tr><td><code>{@link #MenuItem_orderInCategory app.guchagucharr.guchagucharunrecorder:orderInCategory}</code></td><td> The order within the category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_showAsAction app.guchagucharr.guchagucharunrecorder:showAsAction}</code></td><td> How this item should display in the Action Bar, if present.</td></tr>
           <tr><td><code>{@link #MenuItem_title app.guchagucharr.guchagucharunrecorder:title}</code></td><td> The title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_titleCondensed app.guchagucharr.guchagucharunrecorder:titleCondensed}</code></td><td> The condensed title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Whether the item is shown/visible.</td></tr>
           </table>
           @see #MenuItem_actionLayout
           @see #MenuItem_actionProviderClass
           @see #MenuItem_actionViewClass
           @see #MenuItem_alphabeticShortcut
           @see #MenuItem_checkable
           @see #MenuItem_checked
           @see #MenuItem_enabled
           @see #MenuItem_icon
           @see #MenuItem_id
           @see #MenuItem_menuCategory
           @see #MenuItem_numericShortcut
           @see #MenuItem_onClick
           @see #MenuItem_orderInCategory
           @see #MenuItem_showAsAction
           @see #MenuItem_title
           @see #MenuItem_titleCondensed
           @see #MenuItem_visible
         */
        public static final int[] MenuItem = {
            0x7f010162, 0x7f010191, 0x7f0101d8, 0x7f010250,
            0x7f0102d5, 0x7f01035b, 0x7f01035c, 0x7f01035e,
            0x7f01035f, 0x7f010360, 0x7f010361, 0x7f010362,
            0x7f010363, 0x7f010364, 0x7f010365, 0x7f010366,
            0x7f010405
        };
        /**
          <p>
          @attr description
           An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionLayout
        */
        public static final int MenuItem_actionLayout = 13;
        /**
          <p>
          @attr description
           The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionProviderClass
        */
        public static final int MenuItem_actionProviderClass = 15;
        /**
          <p>
          @attr description
           The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionViewClass
        */
        public static final int MenuItem_actionViewClass = 14;
        /**
          <p>
          @attr description
           The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alphabeticShortcut
        */
        public static final int MenuItem_alphabeticShortcut = 9;
        /**
          <p>
          @attr description
           Whether the item is capable of displaying a check mark. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkable
        */
        public static final int MenuItem_checkable = 11;
        /**
          <p>
          @attr description
           Whether the item is checked.  Note that you must first have enabled checking with
             the checkable attribute or else the check mark will not appear. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checked
        */
        public static final int MenuItem_checked = 2;
        /**
          <p>
          @attr description
           Whether the item is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int MenuItem_enabled = 3;
        /**
          <p>
          @attr description
           The icon associated with this item.  This icon will not always be shown, so
             the title should be sufficient in describing this item. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int MenuItem_icon = 16;
        /**
          <p>
          @attr description
           The ID of the item. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:id
        */
        public static final int MenuItem_id = 0;
        /**
          <p>
          @attr description
           The category applied to the item.
             (This will be or'ed with the orderInCategory attribute.) 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>container</code></td><td>0x00010000</td><td> Items are part of a container. </td></tr>
<tr><td><code>system</code></td><td>0x00020000</td><td> Items are provided by the system. </td></tr>
<tr><td><code>secondary</code></td><td>0x00030000</td><td> Items are user-supplied secondary (infrequently used). </td></tr>
<tr><td><code>alternative</code></td><td>0x00040000</td><td> Items are alternative actions. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:menuCategory
        */
        public static final int MenuItem_menuCategory = 5;
        /**
          <p>
          @attr description
           The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:numericShortcut
        */
        public static final int MenuItem_numericShortcut = 10;
        /**
          <p>
          @attr description
           Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:onClick
        */
        public static final int MenuItem_onClick = 1;
        /**
          <p>
          @attr description
           The order within the category applied to the item.
             (This will be or'ed with the category attribute.) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orderInCategory
        */
        public static final int MenuItem_orderInCategory = 6;
        /**
          <p>
          @attr description
           How this item should display in the Action Bar, if present. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always". </td></tr>
<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always". </td></tr>
<tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
<tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation. </td></tr>
<tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:showAsAction
        */
        public static final int MenuItem_showAsAction = 12;
        /**
          <p>
          @attr description
           The title associated with the item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:title
        */
        public static final int MenuItem_title = 7;
        /**
          <p>
          @attr description
           The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:titleCondensed
        */
        public static final int MenuItem_titleCondensed = 8;
        /**
          <p>
          @attr description
           Whether the item is shown/visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int MenuItem_visible = 4;
        /**  State array representing a menu item that is currently focused and checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemCheckedFocusedState_state_checkable app.guchagucharr.guchagucharunrecorder:state_checkable}</code></td><td> State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #MenuItemCheckedFocusedState_state_checked app.guchagucharr.guchagucharunrecorder:state_checked}</code></td><td> State identifier indicating that the object is currently checked.</td></tr>
           <tr><td><code>{@link #MenuItemCheckedFocusedState_state_focused app.guchagucharr.guchagucharunrecorder:state_focused}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus.</td></tr>
           </table>
           @see #MenuItemCheckedFocusedState_state_checkable
           @see #MenuItemCheckedFocusedState_state_checked
           @see #MenuItemCheckedFocusedState_state_focused
         */
        public static final int[] MenuItemCheckedFocusedState = {
            0x7f010330, 0x7f010333, 0x7f010334
        };
        /**
          <p>
          @attr description
           State identifier indicating that the object <var>may</var> display a check mark.
             See {@link R.attr#state_checked} for the identifier that indicates whether it is
             actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checkable
        */
        public static final int MenuItemCheckedFocusedState_state_checkable = 1;
        /**
          <p>
          @attr description
           State identifier indicating that the object is currently checked.  See
             {@link R.attr#state_checkable} for an additional identifier that can indicate if
             any object may ever display a check, regardless of whether state_checked is
             currently set. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checked
        */
        public static final int MenuItemCheckedFocusedState_state_checked = 2;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_focused
        */
        public static final int MenuItemCheckedFocusedState_state_focused = 0;
        /**  State array representing a menu item that is currently checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemCheckedState_state_checkable app.guchagucharr.guchagucharunrecorder:state_checkable}</code></td><td> State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #MenuItemCheckedState_state_checked app.guchagucharr.guchagucharunrecorder:state_checked}</code></td><td> State identifier indicating that the object is currently checked.</td></tr>
           </table>
           @see #MenuItemCheckedState_state_checkable
           @see #MenuItemCheckedState_state_checked
         */
        public static final int[] MenuItemCheckedState = {
            0x7f010333, 0x7f010334
        };
        /**
          <p>
          @attr description
           State identifier indicating that the object <var>may</var> display a check mark.
             See {@link R.attr#state_checked} for the identifier that indicates whether it is
             actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checkable
        */
        public static final int MenuItemCheckedState_state_checkable = 0;
        /**
          <p>
          @attr description
           State identifier indicating that the object is currently checked.  See
             {@link R.attr#state_checkable} for an additional identifier that can indicate if
             any object may ever display a check, regardless of whether state_checked is
             currently set. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checked
        */
        public static final int MenuItemCheckedState_state_checked = 1;
        /**  State array representing a menu item that is focused and checkable but is not currently checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemUncheckedFocusedState_state_checkable app.guchagucharr.guchagucharunrecorder:state_checkable}</code></td><td> State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           <tr><td><code>{@link #MenuItemUncheckedFocusedState_state_focused app.guchagucharr.guchagucharunrecorder:state_focused}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus.</td></tr>
           </table>
           @see #MenuItemUncheckedFocusedState_state_checkable
           @see #MenuItemUncheckedFocusedState_state_focused
         */
        public static final int[] MenuItemUncheckedFocusedState = {
            0x7f010330, 0x7f010333
        };
        /**
          <p>
          @attr description
           State identifier indicating that the object <var>may</var> display a check mark.
             See {@link R.attr#state_checked} for the identifier that indicates whether it is
             actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checkable
        */
        public static final int MenuItemUncheckedFocusedState_state_checkable = 1;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_focused
        */
        public static final int MenuItemUncheckedFocusedState_state_focused = 0;
        /**  State array representing a menu item that is checkable but is not currently checked. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItemUncheckedState_state_checkable app.guchagucharr.guchagucharunrecorder:state_checkable}</code></td><td> State identifier indicating that the object <var>may</var> display a check mark.</td></tr>
           </table>
           @see #MenuItemUncheckedState_state_checkable
         */
        public static final int[] MenuItemUncheckedState = {
            0x7f010333
        };
        /**
          <p>
          @attr description
           State identifier indicating that the object <var>may</var> display a check mark.
             See {@link R.attr#state_checked} for the identifier that indicates whether it is
             actually checked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_checkable
        */
        public static final int MenuItemUncheckedState_state_checkable = 0;
        /** Attributes that can be used with a MenuView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuView_headerBackground app.guchagucharr.guchagucharunrecorder:headerBackground}</code></td><td> Default background for the menu header.</td></tr>
           <tr><td><code>{@link #MenuView_horizontalDivider app.guchagucharr.guchagucharunrecorder:horizontalDivider}</code></td><td> Default horizontal divider between rows of menu items.</td></tr>
           <tr><td><code>{@link #MenuView_itemBackground app.guchagucharr.guchagucharunrecorder:itemBackground}</code></td><td> Default background for each menu item.</td></tr>
           <tr><td><code>{@link #MenuView_itemIconDisabledAlpha app.guchagucharr.guchagucharunrecorder:itemIconDisabledAlpha}</code></td><td> Default disabled icon alpha for each menu item that shows an icon.</td></tr>
           <tr><td><code>{@link #MenuView_itemTextAppearance app.guchagucharr.guchagucharunrecorder:itemTextAppearance}</code></td><td> Default appearance of menu item text.</td></tr>
           <tr><td><code>{@link #MenuView_preserveIconSpacing app.guchagucharr.guchagucharunrecorder:preserveIconSpacing}</code></td><td> Whether space should be reserved in layout when an icon is missing.</td></tr>
           <tr><td><code>{@link #MenuView_verticalDivider app.guchagucharr.guchagucharunrecorder:verticalDivider}</code></td><td> Default vertical divider between menu items.</td></tr>
           <tr><td><code>{@link #MenuView_windowAnimationStyle app.guchagucharr.guchagucharunrecorder:windowAnimationStyle}</code></td><td> Default animations for the menu.</td></tr>
           </table>
           @see #MenuView_headerBackground
           @see #MenuView_horizontalDivider
           @see #MenuView_itemBackground
           @see #MenuView_itemIconDisabledAlpha
           @see #MenuView_itemTextAppearance
           @see #MenuView_preserveIconSpacing
           @see #MenuView_verticalDivider
           @see #MenuView_windowAnimationStyle
         */
        public static final int[] MenuView = {
            0x7f010072, 0x7f010211, 0x7f010212, 0x7f010213,
            0x7f010214, 0x7f010215, 0x7f010216, 0x7f010217
        };
        /**
          <p>
          @attr description
           Default background for the menu header. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:headerBackground
        */
        public static final int MenuView_headerBackground = 4;
        /**
          <p>
          @attr description
           Default horizontal divider between rows of menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:horizontalDivider
        */
        public static final int MenuView_horizontalDivider = 2;
        /**
          <p>
          @attr description
           Default background for each menu item. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:itemBackground
        */
        public static final int MenuView_itemBackground = 5;
        /**
          <p>
          @attr description
           Default disabled icon alpha for each menu item that shows an icon. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:itemIconDisabledAlpha
        */
        public static final int MenuView_itemIconDisabledAlpha = 6;
        /**
          <p>
          @attr description
           Default appearance of menu item text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:itemTextAppearance
        */
        public static final int MenuView_itemTextAppearance = 1;
        /**
          <p>
          @attr description
           Whether space should be reserved in layout when an icon is missing. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preserveIconSpacing
        */
        public static final int MenuView_preserveIconSpacing = 7;
        /**
          <p>
          @attr description
           Default vertical divider between menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:verticalDivider
        */
        public static final int MenuView_verticalDivider = 3;
        /**
          <p>
          @attr description
           Default animations for the menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowAnimationStyle
        */
        public static final int MenuView_windowAnimationStyle = 0;
        /** Attributes that can be used with a MipmapDrawableItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MipmapDrawableItem_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           </table>
           @see #MipmapDrawableItem_drawable
         */
        public static final int[] MipmapDrawableItem = {
            0x7f0102dd
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int MipmapDrawableItem_drawable = 0;
        /** Attributes that can be used with a MultiPaneChallengeLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Influences how layout_centerWithinArea behaves </td></tr>
           </table>
           @see #MultiPaneChallengeLayout_orientation
         */
        public static final int[] MultiPaneChallengeLayout = {
            0x7f01012b
        };
        /**
          <p>
          @attr description
           Influences how layout_centerWithinArea behaves 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int MultiPaneChallengeLayout_orientation = 0;
        /** Attributes that can be used with a MultiPaneChallengeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_centerWithinArea app.guchagucharr.guchagucharunrecorder:layout_centerWithinArea}</code></td><td> Percentage of the screen this child should consume or center within.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_childType app.guchagucharr.guchagucharunrecorder:layout_childType}</code></td><td> Some child types have special behavior.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_gravity app.guchagucharr.guchagucharunrecorder:layout_gravity}</code></td><td> Standard gravity constant that a child supplies to its parent.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_maxHeight app.guchagucharr.guchagucharunrecorder:layout_maxHeight}</code></td><td> The maximum valid height for this item.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_maxWidth app.guchagucharr.guchagucharunrecorder:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #MultiPaneChallengeLayout_Layout_layout_centerWithinArea
           @see #MultiPaneChallengeLayout_Layout_layout_childType
           @see #MultiPaneChallengeLayout_Layout_layout_gravity
           @see #MultiPaneChallengeLayout_Layout_layout_maxHeight
           @see #MultiPaneChallengeLayout_Layout_layout_maxWidth
         */
        public static final int[] MultiPaneChallengeLayout_Layout = {
            0x7f01012a, 0x7f0103cd, 0x7f0103fe, 0x7f0103ff,
            0x7f010400
        };
        /**
          <p>
          @attr description
           Percentage of the screen this child should consume or center within.
             If 0/default, the view will be measured by standard rules
             as if this were a FrameLayout. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_centerWithinArea
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_centerWithinArea = 3;
        /**
          <p>
          @attr description
           Some child types have special behavior. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_childType
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_childType = 2;
        /**
          <p>
          @attr description
           Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_gravity
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_gravity = 0;
        /**
          <p>
          @attr description
           The maximum valid height for this item. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unbounded</code></td><td>-1</td><td> Indicates that the view may be resized arbitrarily large. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_maxHeight
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_maxHeight = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #MultiPaneChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_maxWidth
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_maxWidth = 4;
        /** Attributes that can be used with a MultiSelectListPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiSelectListPreference_entries app.guchagucharr.guchagucharunrecorder:entries}</code></td><td> The human-readable array to present as a list.</td></tr>
           <tr><td><code>{@link #MultiSelectListPreference_entryValues app.guchagucharr.guchagucharunrecorder:entryValues}</code></td><td> The array to find the value to save for a preference when an entry from
             entries is selected.</td></tr>
           </table>
           @see #MultiSelectListPreference_entries
           @see #MultiSelectListPreference_entryValues
         */
        public static final int[] MultiSelectListPreference = {
            0x7f010129, 0x7f01037e
        };
        /**
          <p>
          @attr description
           The human-readable array to present as a list. Each entry must have a corresponding
             index in entryValues. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:entries
        */
        public static final int MultiSelectListPreference_entries = 0;
        /**
          <p>
          @attr description
           The array to find the value to save for a preference when an entry from
             entries is selected. If a user clicks the second item in entries, the
             second item in this array will be saved to the preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:entryValues
        */
        public static final int MultiSelectListPreference_entryValues = 1;
        /** Attributes that can be used with a MultiWaveView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiWaveView_alwaysTrackFinger app.guchagucharr.guchagucharunrecorder:alwaysTrackFinger}</code></td><td> Used when the handle shouldn't wait to be hit before following the finger </td></tr>
           <tr><td><code>{@link #MultiWaveView_chevronDrawables app.guchagucharr.guchagucharunrecorder:chevronDrawables}</code></td><td> Drawables to use for chevron animations.</td></tr>
           <tr><td><code>{@link #MultiWaveView_directionDescriptions app.guchagucharr.guchagucharunrecorder:directionDescriptions}</code></td><td> Reference to an array resource that be used to announce the directions with targets around the circle.</td></tr>
           <tr><td><code>{@link #MultiWaveView_feedbackCount app.guchagucharr.guchagucharunrecorder:feedbackCount}</code></td><td> Number of waves/chevrons to show in animation.</td></tr>
           <tr><td><code>{@link #MultiWaveView_handleDrawable app.guchagucharr.guchagucharunrecorder:handleDrawable}</code></td><td> Sets a drawable as the drag center.</td></tr>
           <tr><td><code>{@link #MultiWaveView_outerRadius app.guchagucharr.guchagucharunrecorder:outerRadius}</code></td><td> Outer radius of target circle.</td></tr>
           <tr><td><code>{@link #MultiWaveView_snapMargin app.guchagucharr.guchagucharunrecorder:snapMargin}</code></td><td> How close we need to be before snapping to a target.</td></tr>
           <tr><td><code>{@link #MultiWaveView_targetDescriptions app.guchagucharr.guchagucharunrecorder:targetDescriptions}</code></td><td> Reference to an array resource that be used as description for the targets around the circle.</td></tr>
           <tr><td><code>{@link #MultiWaveView_targetDrawables app.guchagucharr.guchagucharunrecorder:targetDrawables}</code></td><td> Reference to an array resource that be shown as targets around a circle.</td></tr>
           <tr><td><code>{@link #MultiWaveView_vibrationDuration app.guchagucharr.guchagucharunrecorder:vibrationDuration}</code></td><td> Tactile feedback duration for actions.</td></tr>
           <tr><td><code>{@link #MultiWaveView_waveDrawable app.guchagucharr.guchagucharunrecorder:waveDrawable}</code></td><td> Drawable to use for wave ripple animation.</td></tr>
           </table>
           @see #MultiWaveView_alwaysTrackFinger
           @see #MultiWaveView_chevronDrawables
           @see #MultiWaveView_directionDescriptions
           @see #MultiWaveView_feedbackCount
           @see #MultiWaveView_handleDrawable
           @see #MultiWaveView_outerRadius
           @see #MultiWaveView_snapMargin
           @see #MultiWaveView_targetDescriptions
           @see #MultiWaveView_targetDrawables
           @see #MultiWaveView_vibrationDuration
           @see #MultiWaveView_waveDrawable
         */
        public static final int[] MultiWaveView = {
            0x7f0103c2, 0x7f0103c3, 0x7f0103c4, 0x7f0103c5,
            0x7f0103c6, 0x7f0103c7, 0x7f0103c8, 0x7f0103c9,
            0x7f0103ca, 0x7f0103cb, 0x7f0103cc
        };
        /**
          <p>
          @attr description
           Used when the handle shouldn't wait to be hit before following the finger 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alwaysTrackFinger
        */
        public static final int MultiWaveView_alwaysTrackFinger = 10;
        /**
          <p>
          @attr description
           Drawables to use for chevron animations. May be null. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:chevronDrawables
        */
        public static final int MultiWaveView_chevronDrawables = 4;
        /**
          <p>
          @attr description
           Reference to an array resource that be used to announce the directions with targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:directionDescriptions
        */
        public static final int MultiWaveView_directionDescriptions = 2;
        /**
          <p>
          @attr description
           Number of waves/chevrons to show in animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:feedbackCount
        */
        public static final int MultiWaveView_feedbackCount = 9;
        /**
          <p>
          @attr description
           Sets a drawable as the drag center. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:handleDrawable
        */
        public static final int MultiWaveView_handleDrawable = 3;
        /**
          <p>
          @attr description
           Outer radius of target circle. Icons will be drawn on this circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:outerRadius
        */
        public static final int MultiWaveView_outerRadius = 6;
        /**
          <p>
          @attr description
           How close we need to be before snapping to a target. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:snapMargin
        */
        public static final int MultiWaveView_snapMargin = 8;
        /**
          <p>
          @attr description
           Reference to an array resource that be used as description for the targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetDescriptions
        */
        public static final int MultiWaveView_targetDescriptions = 1;
        /**
          <p>
          @attr description
           Reference to an array resource that be shown as targets around a circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:targetDrawables
        */
        public static final int MultiWaveView_targetDrawables = 0;
        /**
          <p>
          @attr description
           Tactile feedback duration for actions. Set to '0' for no vibration. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:vibrationDuration
        */
        public static final int MultiWaveView_vibrationDuration = 7;
        /**
          <p>
          @attr description
           Drawable to use for wave ripple animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:waveDrawable
        */
        public static final int MultiWaveView_waveDrawable = 5;
        /**  Drawable used to draw 9-patches. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NinePatchDrawable_dither app.guchagucharr.guchagucharunrecorder:dither}</code></td><td> Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen).</td></tr>
           <tr><td><code>{@link #NinePatchDrawable_src app.guchagucharr.guchagucharunrecorder:src}</code></td><td> Identifier of the bitmap file.</td></tr>
           </table>
           @see #NinePatchDrawable_dither
           @see #NinePatchDrawable_src
         */
        public static final int[] NinePatchDrawable = {
            0x7f0101ee, 0x7f0102d8
        };
        /**
          <p>
          @attr description
           Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dither
        */
        public static final int NinePatchDrawable_dither = 1;
        /**
          <p>
          @attr description
           Identifier of the bitmap file. This attribute is mandatory. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:src
        */
        public static final int NinePatchDrawable_src = 0;
        /** Attributes that can be used with a NumPadKey.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NumPadKey_digit app.guchagucharr.guchagucharunrecorder:digit}</code></td><td></td></tr>
           <tr><td><code>{@link #NumPadKey_textView app.guchagucharr.guchagucharunrecorder:textView}</code></td><td></td></tr>
           </table>
           @see #NumPadKey_digit
           @see #NumPadKey_textView
         */
        public static final int[] NumPadKey = {
            0x7f010401, 0x7f010402
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#digit}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:digit
        */
        public static final int NumPadKey_digit = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#textView}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:textView
        */
        public static final int NumPadKey_textView = 1;
        /** Attributes that can be used with a NumberPicker_new.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NumberPicker_new_internalLayout app.guchagucharr.guchagucharunrecorder:internalLayout}</code></td><td> @hide The layout of the number picker.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_internalMaxHeight app.guchagucharr.guchagucharunrecorder:internalMaxHeight}</code></td><td> @hide The max height of the NumberPicker.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_internalMaxWidth app.guchagucharr.guchagucharunrecorder:internalMaxWidth}</code></td><td> @hide The max width of the NumberPicker.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_internalMinHeight app.guchagucharr.guchagucharunrecorder:internalMinHeight}</code></td><td> @hide The min height of the NumberPicker.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_internalMinWidth app.guchagucharr.guchagucharunrecorder:internalMinWidth}</code></td><td> @hide The min width of the NumberPicker.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_selectionDivider app.guchagucharr.guchagucharunrecorder:selectionDivider}</code></td><td> @hide The divider for making the selection area.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_selectionDividerHeight app.guchagucharr.guchagucharunrecorder:selectionDividerHeight}</code></td><td> @hide The height of the selection divider.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_selectionDividersDistance app.guchagucharr.guchagucharunrecorder:selectionDividersDistance}</code></td><td> @hide The distance between the two selection dividers.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_solidColor app.guchagucharr.guchagucharunrecorder:solidColor}</code></td><td> @hide Color for the solid color background if such for optimized rendering.</td></tr>
           <tr><td><code>{@link #NumberPicker_new_virtualButtonPressedDrawable app.guchagucharr.guchagucharunrecorder:virtualButtonPressedDrawable}</code></td><td> @hide The drawable for pressed virtual (increment/decrement) buttons.</td></tr>
           </table>
           @see #NumberPicker_new_internalLayout
           @see #NumberPicker_new_internalMaxHeight
           @see #NumberPicker_new_internalMaxWidth
           @see #NumberPicker_new_internalMinHeight
           @see #NumberPicker_new_internalMinWidth
           @see #NumberPicker_new_selectionDivider
           @see #NumberPicker_new_selectionDividerHeight
           @see #NumberPicker_new_selectionDividersDistance
           @see #NumberPicker_new_solidColor
           @see #NumberPicker_new_virtualButtonPressedDrawable
         */
        public static final int[] NumberPicker_new = {
            0x7f01028b, 0x7f0102cc, 0x7f0102cd, 0x7f0102ce,
            0x7f0102cf, 0x7f0102d0, 0x7f0102d1, 0x7f0102d2,
            0x7f0102d3, 0x7f0102d4
        };
        /**
          <p>
          @attr description
           @hide The layout of the number picker. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalLayout
        */
        public static final int NumberPicker_new_internalLayout = 0;
        /**
          <p>
          @attr description
           @hide The max height of the NumberPicker. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalMaxHeight
        */
        public static final int NumberPicker_new_internalMaxHeight = 6;
        /**
          <p>
          @attr description
           @hide The max width of the NumberPicker. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalMaxWidth
        */
        public static final int NumberPicker_new_internalMaxWidth = 8;
        /**
          <p>
          @attr description
           @hide The min height of the NumberPicker. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalMinHeight
        */
        public static final int NumberPicker_new_internalMinHeight = 5;
        /**
          <p>
          @attr description
           @hide The min width of the NumberPicker. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalMinWidth
        */
        public static final int NumberPicker_new_internalMinWidth = 7;
        /**
          <p>
          @attr description
           @hide The divider for making the selection area. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectionDivider
        */
        public static final int NumberPicker_new_selectionDivider = 2;
        /**
          <p>
          @attr description
           @hide The height of the selection divider. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectionDividerHeight
        */
        public static final int NumberPicker_new_selectionDividerHeight = 3;
        /**
          <p>
          @attr description
           @hide The distance between the two selection dividers. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectionDividersDistance
        */
        public static final int NumberPicker_new_selectionDividersDistance = 4;
        /**
          <p>
          @attr description
           @hide Color for the solid color background if such for optimized rendering. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:solidColor
        */
        public static final int NumberPicker_new_solidColor = 1;
        /**
          <p>
          @attr description
           @hide The drawable for pressed virtual (increment/decrement) buttons. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:virtualButtonPressedDrawable
        */
        public static final int NumberPicker_new_virtualButtonPressedDrawable = 9;
        /** Attributes that can be used with a OvershootInterpolator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #OvershootInterpolator_tension app.guchagucharr.guchagucharunrecorder:tension}</code></td><td> This is the amount of tension.</td></tr>
           </table>
           @see #OvershootInterpolator_tension
         */
        public static final int[] OvershootInterpolator = {
            0x7f010329
        };
        /**
          <p>
          @attr description
           This is the amount of tension. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tension
        */
        public static final int OvershootInterpolator_tension = 0;
        /**  PagedView specific attributes. These attributes are used to customize
         a PagedView view in XML files. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PagedView_pageSpacing app.guchagucharr.guchagucharunrecorder:pageSpacing}</code></td><td> The space between adjacent pages of the PagedView.</td></tr>
           <tr><td><code>{@link #PagedView_scrollIndicatorPaddingLeft app.guchagucharr.guchagucharunrecorder:scrollIndicatorPaddingLeft}</code></td><td> The padding for the scroll indicator area </td></tr>
           <tr><td><code>{@link #PagedView_scrollIndicatorPaddingRight app.guchagucharr.guchagucharunrecorder:scrollIndicatorPaddingRight}</code></td><td></td></tr>
           </table>
           @see #PagedView_pageSpacing
           @see #PagedView_scrollIndicatorPaddingLeft
           @see #PagedView_scrollIndicatorPaddingRight
         */
        public static final int[] PagedView = {
            0x7f0103f7, 0x7f0103f8, 0x7f0103f9
        };
        /**
          <p>
          @attr description
           The space between adjacent pages of the PagedView. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pageSpacing
        */
        public static final int PagedView_pageSpacing = 0;
        /**
          <p>
          @attr description
           The padding for the scroll indicator area 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollIndicatorPaddingLeft
        */
        public static final int PagedView_scrollIndicatorPaddingLeft = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#scrollIndicatorPaddingRight}
          attribute's value can be found in the {@link #PagedView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollIndicatorPaddingRight
        */
        public static final int PagedView_scrollIndicatorPaddingRight = 2;
        /** Attributes that can be used with a Pointer.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Pointer_pointerIconArrow app.guchagucharr.guchagucharunrecorder:pointerIconArrow}</code></td><td> Reference to a pointer icon drawable with STYLE_ARROW </td></tr>
           <tr><td><code>{@link #Pointer_pointerIconSpotAnchor app.guchagucharr.guchagucharunrecorder:pointerIconSpotAnchor}</code></td><td> Reference to a pointer icon drawable with STYLE_SPOT_ANCHOR </td></tr>
           <tr><td><code>{@link #Pointer_pointerIconSpotHover app.guchagucharr.guchagucharunrecorder:pointerIconSpotHover}</code></td><td> Reference to a pointer icon drawable with STYLE_SPOT_HOVER </td></tr>
           <tr><td><code>{@link #Pointer_pointerIconSpotTouch app.guchagucharr.guchagucharunrecorder:pointerIconSpotTouch}</code></td><td> Reference to a pointer icon drawable with STYLE_SPOT_TOUCH </td></tr>
           </table>
           @see #Pointer_pointerIconArrow
           @see #Pointer_pointerIconSpotAnchor
           @see #Pointer_pointerIconSpotHover
           @see #Pointer_pointerIconSpotTouch
         */
        public static final int[] Pointer = {
            0x7f0103e3, 0x7f0103e4, 0x7f0103e5, 0x7f0103e6
        };
        /**
          <p>
          @attr description
           Reference to a pointer icon drawable with STYLE_ARROW 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pointerIconArrow
        */
        public static final int Pointer_pointerIconArrow = 0;
        /**
          <p>
          @attr description
           Reference to a pointer icon drawable with STYLE_SPOT_ANCHOR 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pointerIconSpotAnchor
        */
        public static final int Pointer_pointerIconSpotAnchor = 3;
        /**
          <p>
          @attr description
           Reference to a pointer icon drawable with STYLE_SPOT_HOVER 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pointerIconSpotHover
        */
        public static final int Pointer_pointerIconSpotHover = 1;
        /**
          <p>
          @attr description
           Reference to a pointer icon drawable with STYLE_SPOT_TOUCH 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pointerIconSpotTouch
        */
        public static final int Pointer_pointerIconSpotTouch = 2;
        /** Attributes that can be used with a PointerIcon.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PointerIcon_bitmap app.guchagucharr.guchagucharunrecorder:bitmap}</code></td><td> Drawable to use as the icon bitmap.</td></tr>
           <tr><td><code>{@link #PointerIcon_hotSpotX app.guchagucharr.guchagucharunrecorder:hotSpotX}</code></td><td> X coordinate of the icon hot spot.</td></tr>
           <tr><td><code>{@link #PointerIcon_hotSpotY app.guchagucharr.guchagucharunrecorder:hotSpotY}</code></td><td> Y coordinate of the icon hot spot.</td></tr>
           </table>
           @see #PointerIcon_bitmap
           @see #PointerIcon_hotSpotX
           @see #PointerIcon_hotSpotY
         */
        public static final int[] PointerIcon = {
            0x7f0103e7, 0x7f0103e8, 0x7f0103e9
        };
        /**
          <p>
          @attr description
           Drawable to use as the icon bitmap. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bitmap
        */
        public static final int PointerIcon_bitmap = 0;
        /**
          <p>
          @attr description
           X coordinate of the icon hot spot. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hotSpotX
        */
        public static final int PointerIcon_hotSpotX = 1;
        /**
          <p>
          @attr description
           Y coordinate of the icon hot spot. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hotSpotY
        */
        public static final int PointerIcon_hotSpotY = 2;
        /** Attributes that can be used with a PopupWindow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindow_popupAnimationStyle app.guchagucharr.guchagucharunrecorder:popupAnimationStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #PopupWindow_popupBackground app.guchagucharr.guchagucharunrecorder:popupBackground}</code></td><td></td></tr>
           </table>
           @see #PopupWindow_popupAnimationStyle
           @see #PopupWindow_popupBackground
         */
        public static final int[] PopupWindow = {
            0x7f010278, 0x7f010279
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#popupAnimationStyle}
          attribute's value can be found in the {@link #PopupWindow} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:popupAnimationStyle
        */
        public static final int PopupWindow_popupAnimationStyle = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#popupBackground}
          attribute's value can be found in the {@link #PopupWindow} array.


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:popupBackground
        */
        public static final int PopupWindow_popupBackground = 0;
        /** Attributes that can be used with a PopupWindowBackgroundState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor app.guchagucharr.guchagucharunrecorder:state_above_anchor}</code></td><td> State identifier indicating the popup will be above the anchor.</td></tr>
           </table>
           @see #PopupWindowBackgroundState_state_above_anchor
         */
        public static final int[] PopupWindowBackgroundState = {
            0x7f010344
        };
        /**
          <p>
          @attr description
           State identifier indicating the popup will be above the anchor. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_above_anchor
        */
        public static final int PopupWindowBackgroundState_state_above_anchor = 0;
        /**  Base attributes available to Preference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Preference_defaultValue app.guchagucharr.guchagucharunrecorder:defaultValue}</code></td><td> The default value for the preference, which will be set either if persistence
             is off or persistence is on and the preference is not found in the persistent
             storage.</td></tr>
           <tr><td><code>{@link #Preference_dependency app.guchagucharr.guchagucharunrecorder:dependency}</code></td><td> The key of another Preference that this Preference will depend on.</td></tr>
           <tr><td><code>{@link #Preference_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Whether the Preference is enabled.</td></tr>
           <tr><td><code>{@link #Preference_fragment app.guchagucharr.guchagucharunrecorder:fragment}</code></td><td> When used inside of a modern PreferenceActivity, this declares
             a new PreferenceFragment to be shown when the user selects this item.</td></tr>
           <tr><td><code>{@link #Preference_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> The optional icon for the preference </td></tr>
           <tr><td><code>{@link #Preference_key app.guchagucharr.guchagucharunrecorder:key}</code></td><td> The key to store the Preference value.</td></tr>
           <tr><td><code>{@link #Preference_layout app.guchagucharr.guchagucharunrecorder:layout}</code></td><td> The layout for the Preference in a PreferenceActivity screen.</td></tr>
           <tr><td><code>{@link #Preference_order app.guchagucharr.guchagucharunrecorder:order}</code></td><td> The order for the Preference (lower values are to be ordered first).</td></tr>
           <tr><td><code>{@link #Preference_persistent app.guchagucharr.guchagucharunrecorder:persistent}</code></td><td> Whether the Preference stores its value to the shared preferences.</td></tr>
           <tr><td><code>{@link #Preference_selectable app.guchagucharr.guchagucharunrecorder:selectable}</code></td><td> Whether the Preference is selectable.</td></tr>
           <tr><td><code>{@link #Preference_shouldDisableView app.guchagucharr.guchagucharunrecorder:shouldDisableView}</code></td><td> Whether the view of this Preference should be disabled when
             this Preference is disabled.</td></tr>
           <tr><td><code>{@link #Preference_summary app.guchagucharr.guchagucharunrecorder:summary}</code></td><td> The summary for the Preference in a PreferenceActivity screen.</td></tr>
           <tr><td><code>{@link #Preference_title app.guchagucharr.guchagucharunrecorder:title}</code></td><td> The title for the Preference in a PreferenceActivity screen.</td></tr>
           <tr><td><code>{@link #Preference_widgetLayout app.guchagucharr.guchagucharunrecorder:widgetLayout}</code></td><td> The layout for the controllable widget portion of a Preference.</td></tr>
           </table>
           @see #Preference_defaultValue
           @see #Preference_dependency
           @see #Preference_enabled
           @see #Preference_fragment
           @see #Preference_icon
           @see #Preference_key
           @see #Preference_layout
           @see #Preference_order
           @see #Preference_persistent
           @see #Preference_selectable
           @see #Preference_shouldDisableView
           @see #Preference_summary
           @see #Preference_title
           @see #Preference_widgetLayout
         */
        public static final int[] Preference = {
            0x7f0101ae, 0x7f010250, 0x7f01035e, 0x7f01036a,
            0x7f01036d, 0x7f01036e, 0x7f01036f, 0x7f010370,
            0x7f010371, 0x7f010372, 0x7f010373, 0x7f010374,
            0x7f010405, 0x7f010418
        };
        /**
          <p>
          @attr description
           The default value for the preference, which will be set either if persistence
             is off or persistence is on and the preference is not found in the persistent
             storage.  


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>May be a floating point value, such as "<code>1.2</code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:defaultValue
        */
        public static final int Preference_defaultValue = 10;
        /**
          <p>
          @attr description
           The key of another Preference that this Preference will depend on.  If the other
             Preference is not set or is off, this Preference will be disabled. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dependency
        */
        public static final int Preference_dependency = 9;
        /**
          <p>
          @attr description
           Whether the Preference is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int Preference_enabled = 1;
        /**
          <p>
          @attr description
           When used inside of a modern PreferenceActivity, this declares
             a new PreferenceFragment to be shown when the user selects this item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fragment
        */
        public static final int Preference_fragment = 4;
        /**
          <p>
          @attr description
           The optional icon for the preference 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int Preference_icon = 12;
        /**
          <p>
          @attr description
           The key to store the Preference value. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:key
        */
        public static final int Preference_key = 5;
        /**
          <p>
          @attr description
           The layout for the Preference in a PreferenceActivity screen. This should
             rarely need to be changed, look at widgetLayout instead. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout
        */
        public static final int Preference_layout = 0;
        /**
          <p>
          @attr description
           The order for the Preference (lower values are to be ordered first). If this is not
             specified, the default orderin will be alphabetic. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:order
        */
        public static final int Preference_order = 6;
        /**
          <p>
          @attr description
           Whether the Preference stores its value to the shared preferences. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:persistent
        */
        public static final int Preference_persistent = 13;
        /**
          <p>
          @attr description
           Whether the Preference is selectable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectable
        */
        public static final int Preference_selectable = 8;
        /**
          <p>
          @attr description
           Whether the view of this Preference should be disabled when
             this Preference is disabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shouldDisableView
        */
        public static final int Preference_shouldDisableView = 11;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summary
        */
        public static final int Preference_summary = 3;
        /**
          <p>
          @attr description
           The title for the Preference in a PreferenceActivity screen. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:title
        */
        public static final int Preference_title = 2;
        /**
          <p>
          @attr description
           The layout for the controllable widget portion of a Preference. This is inflated
             into the layout for a Preference and should be used more frequently than
             the layout attribute. For example, a checkbox preference would specify
             a custom layout (consisting of just the CheckBox) here. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:widgetLayout
        */
        public static final int Preference_widgetLayout = 7;
        /** Attributes that can be used with a PreferenceFrameLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PreferenceFrameLayout_borderBottom app.guchagucharr.guchagucharunrecorder:borderBottom}</code></td><td> Padding to use at the bottom of the prefs content.</td></tr>
           <tr><td><code>{@link #PreferenceFrameLayout_borderLeft app.guchagucharr.guchagucharunrecorder:borderLeft}</code></td><td> Padding to use at the left of the prefs content.</td></tr>
           <tr><td><code>{@link #PreferenceFrameLayout_borderRight app.guchagucharr.guchagucharunrecorder:borderRight}</code></td><td> Padding to use at the right of the prefs content.</td></tr>
           <tr><td><code>{@link #PreferenceFrameLayout_borderTop app.guchagucharr.guchagucharunrecorder:borderTop}</code></td><td> Padding to use at the top of the prefs content.</td></tr>
           </table>
           @see #PreferenceFrameLayout_borderBottom
           @see #PreferenceFrameLayout_borderLeft
           @see #PreferenceFrameLayout_borderRight
           @see #PreferenceFrameLayout_borderTop
         */
        public static final int[] PreferenceFrameLayout = {
            0x7f01020c, 0x7f01020d, 0x7f01020e, 0x7f01020f
        };
        /**
          <p>
          @attr description
           Padding to use at the bottom of the prefs content. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:borderBottom
        */
        public static final int PreferenceFrameLayout_borderBottom = 1;
        /**
          <p>
          @attr description
           Padding to use at the left of the prefs content. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:borderLeft
        */
        public static final int PreferenceFrameLayout_borderLeft = 2;
        /**
          <p>
          @attr description
           Padding to use at the right of the prefs content. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:borderRight
        */
        public static final int PreferenceFrameLayout_borderRight = 3;
        /**
          <p>
          @attr description
           Padding to use at the top of the prefs content. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:borderTop
        */
        public static final int PreferenceFrameLayout_borderTop = 0;
        /** Attributes that can be used with a PreferenceFrameLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PreferenceFrameLayout_Layout_layout_removeBorders app.guchagucharr.guchagucharunrecorder:layout_removeBorders}</code></td><td> Padding to use at the top of the prefs content.</td></tr>
           </table>
           @see #PreferenceFrameLayout_Layout_layout_removeBorders
         */
        public static final int[] PreferenceFrameLayout_Layout = {
            0x7f010210
        };
        /**
          <p>
          @attr description
           Padding to use at the top of the prefs content. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_removeBorders
        */
        public static final int PreferenceFrameLayout_Layout_layout_removeBorders = 0;
        /**  Base attributes available to PreferenceGroup. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PreferenceGroup_orderingFromXml app.guchagucharr.guchagucharunrecorder:orderingFromXml}</code></td><td> Whether to order the Preference under this group as they appear in the XML file.</td></tr>
           </table>
           @see #PreferenceGroup_orderingFromXml
         */
        public static final int[] PreferenceGroup = {
            0x7f010369
        };
        /**
          <p>
          @attr description
           Whether to order the Preference under this group as they appear in the XML file.
             If this is false, the ordering will follow the Preference order attribute and
             default to alphabetic for those without the order attribute. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orderingFromXml
        */
        public static final int PreferenceGroup_orderingFromXml = 0;
        /**  Attribute for a header describing the item shown in the top-level list
         from which the selects the set of preference to dig in to. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PreferenceHeader_breadCrumbShortTitle app.guchagucharr.guchagucharunrecorder:breadCrumbShortTitle}</code></td><td> The short title for the bread crumb of this item.</td></tr>
           <tr><td><code>{@link #PreferenceHeader_breadCrumbTitle app.guchagucharr.guchagucharunrecorder:breadCrumbTitle}</code></td><td> The title for the bread crumb of this item.</td></tr>
           <tr><td><code>{@link #PreferenceHeader_fragment app.guchagucharr.guchagucharunrecorder:fragment}</code></td><td> The fragment that is displayed when the user selects this item.</td></tr>
           <tr><td><code>{@link #PreferenceHeader_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td> An icon for the item.</td></tr>
           <tr><td><code>{@link #PreferenceHeader_id app.guchagucharr.guchagucharunrecorder:id}</code></td><td> Identifier value for the header.</td></tr>
           <tr><td><code>{@link #PreferenceHeader_summary app.guchagucharr.guchagucharunrecorder:summary}</code></td><td> The summary for the item.</td></tr>
           <tr><td><code>{@link #PreferenceHeader_title app.guchagucharr.guchagucharunrecorder:title}</code></td><td> The title of the item that is shown to the user.</td></tr>
           </table>
           @see #PreferenceHeader_breadCrumbShortTitle
           @see #PreferenceHeader_breadCrumbTitle
           @see #PreferenceHeader_fragment
           @see #PreferenceHeader_icon
           @see #PreferenceHeader_id
           @see #PreferenceHeader_summary
           @see #PreferenceHeader_title
         */
        public static final int[] PreferenceHeader = {
            0x7f010162, 0x7f01035e, 0x7f01036a, 0x7f01036b,
            0x7f01036c, 0x7f01036d, 0x7f010405
        };
        /**
          <p>
          @attr description
           The short title for the bread crumb of this item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:breadCrumbShortTitle
        */
        public static final int PreferenceHeader_breadCrumbShortTitle = 4;
        /**
          <p>
          @attr description
           The title for the bread crumb of this item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:breadCrumbTitle
        */
        public static final int PreferenceHeader_breadCrumbTitle = 3;
        /**
          <p>
          @attr description
           The fragment that is displayed when the user selects this item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fragment
        */
        public static final int PreferenceHeader_fragment = 5;
        /**
          <p>
          @attr description
           An icon for the item. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int PreferenceHeader_icon = 6;
        /**
          <p>
          @attr description
           Identifier value for the header. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:id
        */
        public static final int PreferenceHeader_id = 0;
        /**
          <p>
          @attr description
           The summary for the item. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summary
        */
        public static final int PreferenceHeader_summary = 2;
        /**
          <p>
          @attr description
           The title of the item that is shown to the user. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:title
        */
        public static final int PreferenceHeader_title = 1;
        /** Attributes that can be used with a ProgressBar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ProgressBar_animationResolution app.guchagucharr.guchagucharunrecorder:animationResolution}</code></td><td> Timeout between frames of animation in milliseconds
             {@deprecated Not used by the framework.} </td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminate app.guchagucharr.guchagucharunrecorder:indeterminate}</code></td><td> Allows to enable the indeterminate mode.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateBehavior app.guchagucharr.guchagucharunrecorder:indeterminateBehavior}</code></td><td> Defines how the indeterminate mode should behave when the progress
        reaches max.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateDrawable app.guchagucharr.guchagucharunrecorder:indeterminateDrawable}</code></td><td> Drawable used for the indeterminate mode.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateDuration app.guchagucharr.guchagucharunrecorder:indeterminateDuration}</code></td><td> Duration of the indeterminate animation.</td></tr>
           <tr><td><code>{@link #ProgressBar_indeterminateOnly app.guchagucharr.guchagucharunrecorder:indeterminateOnly}</code></td><td> Restricts to ONLY indeterminate mode (state-keeping progress mode will not work).</td></tr>
           <tr><td><code>{@link #ProgressBar_interpolator app.guchagucharr.guchagucharunrecorder:interpolator}</code></td><td></td></tr>
           <tr><td><code>{@link #ProgressBar_max app.guchagucharr.guchagucharunrecorder:max}</code></td><td> Defines the maximum value the progress can take.</td></tr>
           <tr><td><code>{@link #ProgressBar_maxHeight app.guchagucharr.guchagucharunrecorder:maxHeight}</code></td><td> An optional argument to supply a maximum height for this view.</td></tr>
           <tr><td><code>{@link #ProgressBar_maxWidth app.guchagucharr.guchagucharunrecorder:maxWidth}</code></td><td> An optional argument to supply a maximum width for this view.</td></tr>
           <tr><td><code>{@link #ProgressBar_minHeight app.guchagucharr.guchagucharunrecorder:minHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #ProgressBar_minWidth app.guchagucharr.guchagucharunrecorder:minWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #ProgressBar_progress app.guchagucharr.guchagucharunrecorder:progress}</code></td><td> Defines the default progress value, between 0 and max.</td></tr>
           <tr><td><code>{@link #ProgressBar_progressDrawable app.guchagucharr.guchagucharunrecorder:progressDrawable}</code></td><td> Drawable used for the progress mode.</td></tr>
           <tr><td><code>{@link #ProgressBar_secondaryProgress app.guchagucharr.guchagucharunrecorder:secondaryProgress}</code></td><td> Defines the secondary progress value, between 0 and max.</td></tr>
           </table>
           @see #ProgressBar_animationResolution
           @see #ProgressBar_indeterminate
           @see #ProgressBar_indeterminateBehavior
           @see #ProgressBar_indeterminateDrawable
           @see #ProgressBar_indeterminateDuration
           @see #ProgressBar_indeterminateOnly
           @see #ProgressBar_interpolator
           @see #ProgressBar_max
           @see #ProgressBar_maxHeight
           @see #ProgressBar_maxWidth
           @see #ProgressBar_minHeight
           @see #ProgressBar_minWidth
           @see #ProgressBar_progress
           @see #ProgressBar_progressDrawable
           @see #ProgressBar_secondaryProgress
         */
        public static final int[] ProgressBar = {
            0x7f0101f1, 0x7f0101f2, 0x7f01021d, 0x7f01021e,
            0x7f01021f, 0x7f010220, 0x7f010221, 0x7f010222,
            0x7f010223, 0x7f010224, 0x7f010225, 0x7f010226,
            0x7f010227, 0x7f010228, 0x7f010229
        };
        /**
          <p>
          @attr description
           Timeout between frames of animation in milliseconds
             {@deprecated Not used by the framework.} 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animationResolution
        */
        @Deprecated
        public static final int ProgressBar_animationResolution = 14;
        /**
          <p>
          @attr description
           Allows to enable the indeterminate mode. In this mode the progress
         bar plays an infinite looping animation. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indeterminate
        */
        public static final int ProgressBar_indeterminate = 5;
        /**
          <p>
          @attr description
           Defines how the indeterminate mode should behave when the progress
        reaches max. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>repeat</code></td><td>1</td><td> Progress starts over from 0. </td></tr>
<tr><td><code>cycle</code></td><td>2</td><td> Progress keeps the current value and goes back to 0. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indeterminateBehavior
        */
        public static final int ProgressBar_indeterminateBehavior = 10;
        /**
          <p>
          @attr description
           Drawable used for the indeterminate mode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indeterminateDrawable
        */
        public static final int ProgressBar_indeterminateDrawable = 7;
        /**
          <p>
          @attr description
           Duration of the indeterminate animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indeterminateDuration
        */
        public static final int ProgressBar_indeterminateDuration = 9;
        /**
          <p>
          @attr description
           Restricts to ONLY indeterminate mode (state-keeping progress mode will not work). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:indeterminateOnly
        */
        public static final int ProgressBar_indeterminateOnly = 6;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#interpolator}
          attribute's value can be found in the {@link #ProgressBar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:interpolator
        */
        public static final int ProgressBar_interpolator = 13;
        /**
          <p>
          @attr description
           Defines the maximum value the progress can take. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:max
        */
        public static final int ProgressBar_max = 2;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum height for this view.
             See {see android.widget.ImageView#setMaxHeight} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxHeight
        */
        public static final int ProgressBar_maxHeight = 1;
        /**
          <p>
          @attr description
           An optional argument to supply a maximum width for this view.
             See {see android.widget.ImageView#setMaxWidth} for details. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxWidth
        */
        public static final int ProgressBar_maxWidth = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minHeight}
          attribute's value can be found in the {@link #ProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minHeight
        */
        public static final int ProgressBar_minHeight = 12;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minWidth}
          attribute's value can be found in the {@link #ProgressBar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minWidth
        */
        public static final int ProgressBar_minWidth = 11;
        /**
          <p>
          @attr description
           Defines the default progress value, between 0 and max. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progress
        */
        public static final int ProgressBar_progress = 3;
        /**
          <p>
          @attr description
           Drawable used for the progress mode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressDrawable
        */
        public static final int ProgressBar_progressDrawable = 8;
        /**
          <p>
          @attr description
           Defines the secondary progress value, between 0 and max. This progress is drawn between
             the primary progress and the background.  It can be ideal for media scenarios such as
             showing the buffering progress while the default progress shows the play progress. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:secondaryProgress
        */
        public static final int ProgressBar_secondaryProgress = 4;
        /** Attributes that can be used with a PropertyAnimator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PropertyAnimator_propertyName app.guchagucharr.guchagucharunrecorder:propertyName}</code></td><td> Name of the property being animated.</td></tr>
           </table>
           @see #PropertyAnimator_propertyName
         */
        public static final int[] PropertyAnimator = {
            0x7f01032e
        };
        /**
          <p>
          @attr description
           Name of the property being animated. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:propertyName
        */
        public static final int PropertyAnimator_propertyName = 0;
        /** Attributes that can be used with a QuickContactBadge.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #QuickContactBadge_quickContactWindowSize app.guchagucharr.guchagucharunrecorder:quickContactWindowSize}</code></td><td></td></tr>
           </table>
           @see #QuickContactBadge_quickContactWindowSize
         */
        public static final int[] QuickContactBadge = {
            0x7f01029e
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#quickContactWindowSize}
          attribute's value can be found in the {@link #QuickContactBadge} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>modeSmall</code></td><td>1</td><td></td></tr>
<tr><td><code>modeMedium</code></td><td>2</td><td></td></tr>
<tr><td><code>modeLarge</code></td><td>3</td><td></td></tr>
</table>
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactWindowSize
        */
        public static final int QuickContactBadge_quickContactWindowSize = 0;
        /** Attributes that can be used with a RadioGroup.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RadioGroup_checkedButton app.guchagucharr.guchagucharunrecorder:checkedButton}</code></td><td> The id of the child radio button that should be checked by default
             within this radio group.</td></tr>
           <tr><td><code>{@link #RadioGroup_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Should the radio group be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.</td></tr>
           </table>
           @see #RadioGroup_checkedButton
           @see #RadioGroup_orientation
         */
        public static final int[] RadioGroup = {
            0x7f01012b, 0x7f010232
        };
        /**
          <p>
          @attr description
           The id of the child radio button that should be checked by default
             within this radio group. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkedButton
        */
        public static final int RadioGroup_checkedButton = 1;
        /**
          <p>
          @attr description
           Should the radio group be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             vertical. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int RadioGroup_orientation = 0;
        /** Attributes that can be used with a RatingBar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RatingBar_isIndicator app.guchagucharr.guchagucharunrecorder:isIndicator}</code></td><td> Whether this rating bar is an indicator (and non-changeable by the user).</td></tr>
           <tr><td><code>{@link #RatingBar_numStars app.guchagucharr.guchagucharunrecorder:numStars}</code></td><td> The number of stars (or rating items) to show.</td></tr>
           <tr><td><code>{@link #RatingBar_rating app.guchagucharr.guchagucharunrecorder:rating}</code></td><td> The rating to set by default.</td></tr>
           <tr><td><code>{@link #RatingBar_stepSize app.guchagucharr.guchagucharunrecorder:stepSize}</code></td><td> The step size of the rating.</td></tr>
           </table>
           @see #RatingBar_isIndicator
           @see #RatingBar_numStars
           @see #RatingBar_rating
           @see #RatingBar_stepSize
         */
        public static final int[] RatingBar = {
            0x7f01022e, 0x7f01022f, 0x7f010230, 0x7f010231
        };
        /**
          <p>
          @attr description
           Whether this rating bar is an indicator (and non-changeable by the user). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isIndicator
        */
        public static final int RatingBar_isIndicator = 3;
        /**
          <p>
          @attr description
           The number of stars (or rating items) to show. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:numStars
        */
        public static final int RatingBar_numStars = 0;
        /**
          <p>
          @attr description
           The rating to set by default. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rating
        */
        public static final int RatingBar_rating = 1;
        /**
          <p>
          @attr description
           The step size of the rating. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stepSize
        */
        public static final int RatingBar_stepSize = 2;
        /**  Use <code>recognition-service</code> as the root tag of the XML resource that
         describes a {@link android.speech.RecognitionService}, which is reference from
         its {@link android.speech.RecognitionService#SERVICE_META_DATA} meta-data entry.
         Described here are the attributes that can be included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RecognitionService_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #RecognitionService_settingsActivity
         */
        public static final int[] RecognitionService = {
            0x7f0101b9
        };
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int RecognitionService_settingsActivity = 0;
        /** Attributes that can be used with a RelativeLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RelativeLayout_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.</td></tr>
           <tr><td><code>{@link #RelativeLayout_ignoreGravity app.guchagucharr.guchagucharunrecorder:ignoreGravity}</code></td><td> Indicates what view should not be affected by gravity.</td></tr>
           </table>
           @see #RelativeLayout_gravity
           @see #RelativeLayout_ignoreGravity
         */
        public static final int[] RelativeLayout = {
            0x7f010127, 0x7f0101fa
        };
        /**
          <p>
          @attr description
           Specifies how an object should position its content, on both the X and Y axes,
         within its own bounds.  


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int RelativeLayout_gravity = 0;
        /**
          <p>
          @attr description
           Indicates what view should not be affected by gravity. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ignoreGravity
        */
        public static final int RelativeLayout_ignoreGravity = 1;
        /** Attributes that can be used with a RelativeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_above app.guchagucharr.guchagucharunrecorder:layout_above}</code></td><td> Positions the bottom edge of this view above the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignBaseline app.guchagucharr.guchagucharunrecorder:layout_alignBaseline}</code></td><td> Positions the baseline of this view on the baseline of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignBottom app.guchagucharr.guchagucharunrecorder:layout_alignBottom}</code></td><td> Makes the bottom edge of this view match the bottom edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignEnd app.guchagucharr.guchagucharunrecorder:layout_alignEnd}</code></td><td> Makes the end edge of this view match the end edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignLeft app.guchagucharr.guchagucharunrecorder:layout_alignLeft}</code></td><td> Makes the left edge of this view match the left edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentBottom app.guchagucharr.guchagucharunrecorder:layout_alignParentBottom}</code></td><td> If true, makes the bottom edge of this view match the bottom edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentEnd app.guchagucharr.guchagucharunrecorder:layout_alignParentEnd}</code></td><td> If true, makes the end edge of this view match the end edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentLeft app.guchagucharr.guchagucharunrecorder:layout_alignParentLeft}</code></td><td> If true, makes the left edge of this view match the left edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentRight app.guchagucharr.guchagucharunrecorder:layout_alignParentRight}</code></td><td> If true, makes the right edge of this view match the right edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentStart app.guchagucharr.guchagucharunrecorder:layout_alignParentStart}</code></td><td> If true, makes the start edge of this view match the start edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignParentTop app.guchagucharr.guchagucharunrecorder:layout_alignParentTop}</code></td><td> If true, makes the top edge of this view match the top edge of the parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignRight app.guchagucharr.guchagucharunrecorder:layout_alignRight}</code></td><td> Makes the right edge of this view match the right edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignStart app.guchagucharr.guchagucharunrecorder:layout_alignStart}</code></td><td> Makes the start edge of this view match the start edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignTop app.guchagucharr.guchagucharunrecorder:layout_alignTop}</code></td><td> Makes the top edge of this view match the top edge of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_alignWithParentIfMissing app.guchagucharr.guchagucharunrecorder:layout_alignWithParentIfMissing}</code></td><td> If set to true, the parent will be used as the anchor when the anchor cannot be
             be found for layout_toLeftOf, layout_toRightOf, etc.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_below app.guchagucharr.guchagucharunrecorder:layout_below}</code></td><td> Positions the top edge of this view below the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_centerHorizontal app.guchagucharr.guchagucharunrecorder:layout_centerHorizontal}</code></td><td> If true, centers this child horizontally within its parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_centerInParent app.guchagucharr.guchagucharunrecorder:layout_centerInParent}</code></td><td> If true, centers this child horizontally and vertically within its parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_centerVertical app.guchagucharr.guchagucharunrecorder:layout_centerVertical}</code></td><td> If true, centers this child vertically within its parent.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_toEndOf app.guchagucharr.guchagucharunrecorder:layout_toEndOf}</code></td><td> Positions the start edge of this view to the end of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_toLeftOf app.guchagucharr.guchagucharunrecorder:layout_toLeftOf}</code></td><td> Positions the right edge of this view to the left of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_toRightOf app.guchagucharr.guchagucharunrecorder:layout_toRightOf}</code></td><td> Positions the left edge of this view to the right of the given anchor view ID.</td></tr>
           <tr><td><code>{@link #RelativeLayout_Layout_layout_toStartOf app.guchagucharr.guchagucharunrecorder:layout_toStartOf}</code></td><td> Positions the end edge of this view to the start of the given anchor view ID.</td></tr>
           </table>
           @see #RelativeLayout_Layout_layout_above
           @see #RelativeLayout_Layout_layout_alignBaseline
           @see #RelativeLayout_Layout_layout_alignBottom
           @see #RelativeLayout_Layout_layout_alignEnd
           @see #RelativeLayout_Layout_layout_alignLeft
           @see #RelativeLayout_Layout_layout_alignParentBottom
           @see #RelativeLayout_Layout_layout_alignParentEnd
           @see #RelativeLayout_Layout_layout_alignParentLeft
           @see #RelativeLayout_Layout_layout_alignParentRight
           @see #RelativeLayout_Layout_layout_alignParentStart
           @see #RelativeLayout_Layout_layout_alignParentTop
           @see #RelativeLayout_Layout_layout_alignRight
           @see #RelativeLayout_Layout_layout_alignStart
           @see #RelativeLayout_Layout_layout_alignTop
           @see #RelativeLayout_Layout_layout_alignWithParentIfMissing
           @see #RelativeLayout_Layout_layout_below
           @see #RelativeLayout_Layout_layout_centerHorizontal
           @see #RelativeLayout_Layout_layout_centerInParent
           @see #RelativeLayout_Layout_layout_centerVertical
           @see #RelativeLayout_Layout_layout_toEndOf
           @see #RelativeLayout_Layout_layout_toLeftOf
           @see #RelativeLayout_Layout_layout_toRightOf
           @see #RelativeLayout_Layout_layout_toStartOf
         */
        public static final int[] RelativeLayout_Layout = {
            0x7f0102a5, 0x7f0102a6, 0x7f0102a7, 0x7f0102a8,
            0x7f0102a9, 0x7f0102aa, 0x7f0102ab, 0x7f0102ac,
            0x7f0102ad, 0x7f0102ae, 0x7f0102af, 0x7f0102b0,
            0x7f0102b1, 0x7f0102b2, 0x7f0102b3, 0x7f0102b4,
            0x7f0102b5, 0x7f0102b6, 0x7f0102b7, 0x7f0102b8,
            0x7f0102b9, 0x7f0102ba, 0x7f0102bb
        };
        /**
          <p>
          @attr description
           Positions the bottom edge of this view above the given anchor view ID.
            Accommodates bottom margin of this view and top margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_above
        */
        public static final int RelativeLayout_Layout_layout_above = 2;
        /**
          <p>
          @attr description
           Positions the baseline of this view on the baseline of the given anchor view ID. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignBaseline
        */
        public static final int RelativeLayout_Layout_layout_alignBaseline = 4;
        /**
          <p>
          @attr description
           Makes the bottom edge of this view match the bottom edge of the given anchor view ID.
            Accommodates bottom margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignBottom
        */
        public static final int RelativeLayout_Layout_layout_alignBottom = 8;
        /**
          <p>
          @attr description
           Makes the end edge of this view match the end edge of the given anchor view ID.
            Accommodates end margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignEnd
        */
        public static final int RelativeLayout_Layout_layout_alignEnd = 20;
        /**
          <p>
          @attr description
           Makes the left edge of this view match the left edge of the given anchor view ID.
            Accommodates left margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignLeft
        */
        public static final int RelativeLayout_Layout_layout_alignLeft = 5;
        /**
          <p>
          @attr description
           If true, makes the bottom edge of this view match the bottom edge of the parent.
            Accommodates bottom margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignParentBottom
        */
        public static final int RelativeLayout_Layout_layout_alignParentBottom = 12;
        /**
          <p>
          @attr description
           If true, makes the end edge of this view match the end edge of the parent.
            Accommodates end margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignParentEnd
        */
        public static final int RelativeLayout_Layout_layout_alignParentEnd = 22;
        /**
          <p>
          @attr description
           If true, makes the left edge of this view match the left edge of the parent.
            Accommodates left margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignParentLeft
        */
        public static final int RelativeLayout_Layout_layout_alignParentLeft = 9;
        /**
          <p>
          @attr description
           If true, makes the right edge of this view match the right edge of the parent.
            Accommodates right margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignParentRight
        */
        public static final int RelativeLayout_Layout_layout_alignParentRight = 11;
        /**
          <p>
          @attr description
           If true, makes the start edge of this view match the start edge of the parent.
            Accommodates start margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignParentStart
        */
        public static final int RelativeLayout_Layout_layout_alignParentStart = 21;
        /**
          <p>
          @attr description
           If true, makes the top edge of this view match the top edge of the parent.
            Accommodates top margin. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignParentTop
        */
        public static final int RelativeLayout_Layout_layout_alignParentTop = 10;
        /**
          <p>
          @attr description
           Makes the right edge of this view match the right edge of the given anchor view ID.
            Accommodates right margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignRight
        */
        public static final int RelativeLayout_Layout_layout_alignRight = 7;
        /**
          <p>
          @attr description
           Makes the start edge of this view match the start edge of the given anchor view ID.
            Accommodates start margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignStart
        */
        public static final int RelativeLayout_Layout_layout_alignStart = 19;
        /**
          <p>
          @attr description
           Makes the top edge of this view match the top edge of the given anchor view ID.
            Accommodates top margin. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignTop
        */
        public static final int RelativeLayout_Layout_layout_alignTop = 6;
        /**
          <p>
          @attr description
           If set to true, the parent will be used as the anchor when the anchor cannot be
             be found for layout_toLeftOf, layout_toRightOf, etc. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_alignWithParentIfMissing
        */
        public static final int RelativeLayout_Layout_layout_alignWithParentIfMissing = 16;
        /**
          <p>
          @attr description
           Positions the top edge of this view below the given anchor view ID.
            Accommodates top margin of this view and bottom margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_below
        */
        public static final int RelativeLayout_Layout_layout_below = 3;
        /**
          <p>
          @attr description
           If true, centers this child horizontally within its parent. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_centerHorizontal
        */
        public static final int RelativeLayout_Layout_layout_centerHorizontal = 14;
        /**
          <p>
          @attr description
           If true, centers this child horizontally and vertically within its parent. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_centerInParent
        */
        public static final int RelativeLayout_Layout_layout_centerInParent = 13;
        /**
          <p>
          @attr description
           If true, centers this child vertically within its parent. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_centerVertical
        */
        public static final int RelativeLayout_Layout_layout_centerVertical = 15;
        /**
          <p>
          @attr description
           Positions the start edge of this view to the end of the given anchor view ID.
             Accommodates start margin of this view and end margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_toEndOf
        */
        public static final int RelativeLayout_Layout_layout_toEndOf = 18;
        /**
          <p>
          @attr description
           Positions the right edge of this view to the left of the given anchor view ID.
             Accommodates right margin of this view and left margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_toLeftOf
        */
        public static final int RelativeLayout_Layout_layout_toLeftOf = 0;
        /**
          <p>
          @attr description
           Positions the left edge of this view to the right of the given anchor view ID.
            Accommodates left margin of this view and right margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_toRightOf
        */
        public static final int RelativeLayout_Layout_layout_toRightOf = 1;
        /**
          <p>
          @attr description
           Positions the end edge of this view to the start of the given anchor view ID.
             Accommodates end margin of this view and start margin of anchor view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_toStartOf
        */
        public static final int RelativeLayout_Layout_layout_toStartOf = 17;
        /**  Base attributes available to RingtonePreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RingtonePreference_ringtoneType app.guchagucharr.guchagucharunrecorder:ringtoneType}</code></td><td> Which ringtone type(s) to show in the picker.</td></tr>
           <tr><td><code>{@link #RingtonePreference_showDefault app.guchagucharr.guchagucharunrecorder:showDefault}</code></td><td> Whether to show an item for a default sound.</td></tr>
           <tr><td><code>{@link #RingtonePreference_showSilent app.guchagucharr.guchagucharunrecorder:showSilent}</code></td><td> Whether to show an item for 'Silent'.</td></tr>
           </table>
           @see #RingtonePreference_ringtoneType
           @see #RingtonePreference_showDefault
           @see #RingtonePreference_showSilent
         */
        public static final int[] RingtonePreference = {
            0x7f01037f, 0x7f010380, 0x7f010381
        };
        /**
          <p>
          @attr description
           Which ringtone type(s) to show in the picker. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ringtone</code></td><td>1</td><td> Ringtones. </td></tr>
<tr><td><code>notification</code></td><td>2</td><td> Notification sounds. </td></tr>
<tr><td><code>alarm</code></td><td>4</td><td> Alarm sounds. </td></tr>
<tr><td><code>all</code></td><td>7</td><td> All available ringtone sounds. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ringtoneType
        */
        public static final int RingtonePreference_ringtoneType = 0;
        /**
          <p>
          @attr description
           Whether to show an item for a default sound. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:showDefault
        */
        public static final int RingtonePreference_showDefault = 1;
        /**
          <p>
          @attr description
           Whether to show an item for 'Silent'. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:showSilent
        */
        public static final int RingtonePreference_showSilent = 2;
        /**  attributes for internal rotary widget used in lock screen and phone app
      @hide 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RotarySelector_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Use "horizontal" or "vertical".</td></tr>
           </table>
           @see #RotarySelector_orientation
         */
        public static final int[] RotarySelector = {
            0x7f01012b
        };
        /**
          <p>
          @attr description
           Use "horizontal" or "vertical".  The default is horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int RotarySelector_orientation = 0;
        /** Attributes that can be used with a RotateAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RotateAnimation_fromDegrees app.guchagucharr.guchagucharunrecorder:fromDegrees}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateAnimation_pivotX app.guchagucharr.guchagucharunrecorder:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateAnimation_pivotY app.guchagucharr.guchagucharunrecorder:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateAnimation_toDegrees app.guchagucharr.guchagucharunrecorder:toDegrees}</code></td><td></td></tr>
           </table>
           @see #RotateAnimation_fromDegrees
           @see #RotateAnimation_pivotX
           @see #RotateAnimation_pivotY
           @see #RotateAnimation_toDegrees
         */
        public static final int[] RotateAnimation = {
            0x7f0102fb, 0x7f0102fc, 0x7f0102fd, 0x7f0102fe
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromDegrees}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromDegrees
        */
        public static final int RotateAnimation_fromDegrees = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotX}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotX
        */
        public static final int RotateAnimation_pivotX = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotY}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotY
        */
        public static final int RotateAnimation_pivotY = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toDegrees}
          attribute's value can be found in the {@link #RotateAnimation} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toDegrees
        */
        public static final int RotateAnimation_toDegrees = 1;
        /**  Drawable used to rotate another drawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RotateDrawable_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to use for the frame.</td></tr>
           <tr><td><code>{@link #RotateDrawable_fromDegrees app.guchagucharr.guchagucharunrecorder:fromDegrees}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_pivotX app.guchagucharr.guchagucharunrecorder:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_pivotY app.guchagucharr.guchagucharunrecorder:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_toDegrees app.guchagucharr.guchagucharunrecorder:toDegrees}</code></td><td></td></tr>
           <tr><td><code>{@link #RotateDrawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Provides initial visibility state of the drawable; the default
             value is false.</td></tr>
           </table>
           @see #RotateDrawable_drawable
           @see #RotateDrawable_fromDegrees
           @see #RotateDrawable_pivotX
           @see #RotateDrawable_pivotY
           @see #RotateDrawable_toDegrees
           @see #RotateDrawable_visible
         */
        public static final int[] RotateDrawable = {
            0x7f0102d5, 0x7f0102dd, 0x7f0102fb, 0x7f0102fc,
            0x7f0102fd, 0x7f0102fe
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to use for the frame.  If not
             given, the drawable must be defined by the first child tag. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int RotateDrawable_drawable = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromDegrees}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromDegrees
        */
        public static final int RotateDrawable_fromDegrees = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotX}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotX
        */
        public static final int RotateDrawable_pivotX = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotY}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotY
        */
        public static final int RotateDrawable_pivotY = 5;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toDegrees}
          attribute's value can be found in the {@link #RotateDrawable} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toDegrees
        */
        public static final int RotateDrawable_toDegrees = 3;
        /**
          <p>
          @attr description
           Provides initial visibility state of the drawable; the default
             value is false.  See
             {@link android.graphics.drawable.Drawable#setVisible}. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int RotateDrawable_visible = 0;
        /** Attributes that can be used with a ScaleAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ScaleAnimation_fromXScale app.guchagucharr.guchagucharunrecorder:fromXScale}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_fromYScale app.guchagucharr.guchagucharunrecorder:fromYScale}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_pivotX app.guchagucharr.guchagucharunrecorder:pivotX}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_pivotY app.guchagucharr.guchagucharunrecorder:pivotY}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_toXScale app.guchagucharr.guchagucharunrecorder:toXScale}</code></td><td></td></tr>
           <tr><td><code>{@link #ScaleAnimation_toYScale app.guchagucharr.guchagucharunrecorder:toYScale}</code></td><td></td></tr>
           </table>
           @see #ScaleAnimation_fromXScale
           @see #ScaleAnimation_fromYScale
           @see #ScaleAnimation_pivotX
           @see #ScaleAnimation_pivotY
           @see #ScaleAnimation_toXScale
           @see #ScaleAnimation_toYScale
         */
        public static final int[] ScaleAnimation = {
            0x7f0102fd, 0x7f0102fe, 0x7f010316, 0x7f010317,
            0x7f010318, 0x7f010319
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromXScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromXScale
        */
        public static final int ScaleAnimation_fromXScale = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromYScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromYScale
        */
        public static final int ScaleAnimation_fromYScale = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotX}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotX
        */
        public static final int ScaleAnimation_pivotX = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#pivotY}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:pivotY
        */
        public static final int ScaleAnimation_pivotY = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toXScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toXScale
        */
        public static final int ScaleAnimation_toXScale = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toYScale}
          attribute's value can be found in the {@link #ScaleAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toYScale
        */
        public static final int ScaleAnimation_toYScale = 5;
        /** Attributes that can be used with a ScaleDrawable.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ScaleDrawable_drawable app.guchagucharr.guchagucharunrecorder:drawable}</code></td><td> Reference to a drawable resource to draw with the specified scale.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_scaleGravity app.guchagucharr.guchagucharunrecorder:scaleGravity}</code></td><td> Specifies where the drawable is positioned after scaling.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_scaleHeight app.guchagucharr.guchagucharunrecorder:scaleHeight}</code></td><td> Scale height, expressed as a percentage of the drawable's bound.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_scaleWidth app.guchagucharr.guchagucharunrecorder:scaleWidth}</code></td><td> Scale width, expressed as a percentage of the drawable's bound.</td></tr>
           <tr><td><code>{@link #ScaleDrawable_useIntrinsicSizeAsMinimum app.guchagucharr.guchagucharunrecorder:useIntrinsicSizeAsMinimum}</code></td><td> Use the drawable's intrinsic width and height as minimum size values.</td></tr>
           </table>
           @see #ScaleDrawable_drawable
           @see #ScaleDrawable_scaleGravity
           @see #ScaleDrawable_scaleHeight
           @see #ScaleDrawable_scaleWidth
           @see #ScaleDrawable_useIntrinsicSizeAsMinimum
         */
        public static final int[] ScaleDrawable = {
            0x7f0102dd, 0x7f010308, 0x7f010309, 0x7f01030a,
            0x7f01030b
        };
        /**
          <p>
          @attr description
           Reference to a drawable resource to draw with the specified scale. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawable
        */
        public static final int ScaleDrawable_drawable = 0;
        /**
          <p>
          @attr description
           Specifies where the drawable is positioned after scaling. The default value is
             left. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scaleGravity
        */
        public static final int ScaleDrawable_scaleGravity = 3;
        /**
          <p>
          @attr description
           Scale height, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scaleHeight
        */
        public static final int ScaleDrawable_scaleHeight = 2;
        /**
          <p>
          @attr description
           Scale width, expressed as a percentage of the drawable's bound. The value's
             format is XX%. For instance: 100%, 12.5%, etc.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scaleWidth
        */
        public static final int ScaleDrawable_scaleWidth = 1;
        /**
          <p>
          @attr description
           Use the drawable's intrinsic width and height as minimum size values.
             Useful if the target drawable is a 9-patch or otherwise should not be scaled
             down beyond a minimum size. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:useIntrinsicSizeAsMinimum
        */
        public static final int ScaleDrawable_useIntrinsicSizeAsMinimum = 4;
        /** Attributes that can be used with a ScrollView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ScrollView_fillViewport app.guchagucharr.guchagucharunrecorder:fillViewport}</code></td><td> Defines whether the scrollview should stretch its content to fill the viewport.</td></tr>
           </table>
           @see #ScrollView_fillViewport
         */
        public static final int[] ScrollView = {
            0x7f010280
        };
        /**
          <p>
          @attr description
           Defines whether the scrollview should stretch its content to fill the viewport. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fillViewport
        */
        public static final int ScrollView_fillViewport = 0;
        /** Attributes that can be used with a SearchView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SearchView_iconifiedByDefault app.guchagucharr.guchagucharunrecorder:iconifiedByDefault}</code></td><td> The default state of the SearchView.</td></tr>
           <tr><td><code>{@link #SearchView_imeOptions app.guchagucharr.guchagucharunrecorder:imeOptions}</code></td><td> The IME options to set on the query text field.</td></tr>
           <tr><td><code>{@link #SearchView_inputType app.guchagucharr.guchagucharunrecorder:inputType}</code></td><td> The input type to set on the query text field.</td></tr>
           <tr><td><code>{@link #SearchView_maxWidth app.guchagucharr.guchagucharunrecorder:maxWidth}</code></td><td> An optional maximum width of the SearchView.</td></tr>
           <tr><td><code>{@link #SearchView_queryHint app.guchagucharr.guchagucharunrecorder:queryHint}</code></td><td> An optional query hint string to be displayed in the empty query field.</td></tr>
           </table>
           @see #SearchView_iconifiedByDefault
           @see #SearchView_imeOptions
           @see #SearchView_inputType
           @see #SearchView_maxWidth
           @see #SearchView_queryHint
         */
        public static final int[] SearchView = {
            0x7f010123, 0x7f010124, 0x7f0101f1, 0x7f0103dc,
            0x7f0103dd
        };
        /**
          <p>
          @attr description
           The default state of the SearchView. If true, it will be iconified when not in
             use and expanded when clicked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:iconifiedByDefault
        */
        public static final int SearchView_iconifiedByDefault = 3;
        /**
          <p>
          @attr description
           The IME options to set on the query text field. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td> The action key performs a "previous"
             operation, taking the user to the previous field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td> Used to request that the IME never go
             into fullscreen mode.  Applications need to be aware that the flag is not
             a guarantee, and not all IMEs will respect it.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td> Like flagNavigateNext, but
             specifies there is something interesting that a backward navigation
             can focus on.  If the user selects the IME's facility to backward
             navigate, this will show up in the application as an actionPrevious
             at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td> Used to specify that there is something
             interesting that a forward navigation can focus on. This is like using
             actionNext, except allows the IME to be multiline (with
             an enter key) as well as provide forward navigation.  Note that some
             IMEs may not be able to do this, especially when running on a small
             screen where there is little space.  In that case it does not need to
             present a UI for this option.  Like actionNext, if the
             user selects the IME's facility to forward navigate, this will show up
             in the application at
             {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td> Used to request that the IME should be capable of inputting ASCII
             characters.  The intention of this flag is to ensure that the user
             can type Roman alphabet characters in a {@link android.widget.TextView}
             used for, typically, account ID or password input.  It is expected that IMEs
             normally are able to input ASCII even without being told so (such IMEs
             already respect this flag in a sense), but there could be some cases they
             aren't when, for instance, only non-ASCII input languagaes like Arabic,
             Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
             aware that the flag is not a guarantee, and not all IMEs will respect it.
             However, it is strongly recommended for IME authors to respect this flag
             especially when their IME could end up with a state that has only non-ASCII
             input languages enabled.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeOptions
        */
        public static final int SearchView_imeOptions = 1;
        /**
          <p>
          @attr description
           The input type to set on the query text field. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inputType
        */
        public static final int SearchView_inputType = 0;
        /**
          <p>
          @attr description
           An optional maximum width of the SearchView. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxWidth
        */
        public static final int SearchView_maxWidth = 2;
        /**
          <p>
          @attr description
           An optional query hint string to be displayed in the empty query field. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:queryHint
        */
        public static final int SearchView_queryHint = 4;
        /**  Searchable activities and applications must provide search configuration information
        in an XML file, typically called searchable.xml.  This file is referenced in your manifest.
        For a more in-depth discussion of search configuration, please refer to
        {@link android.app.SearchManager}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Searchable_autoUrlDetect app.guchagucharr.guchagucharunrecorder:autoUrlDetect}</code></td><td> If provided and <code>true</code>, URLs entered in the search dialog while searching
             within this activity would be detected and treated as URLs (show a 'go' button in the
             keyboard and invoke the browser directly when user launches the URL instead of passing
             the URL to the activity).</td></tr>
           <tr><td><code>{@link #Searchable_hint app.guchagucharr.guchagucharunrecorder:hint}</code></td><td> If supplied, this string will be displayed as a hint to the user.</td></tr>
           <tr><td><code>{@link #Searchable_icon app.guchagucharr.guchagucharunrecorder:icon}</code></td><td><strong>This is deprecated.</td></tr>
           <tr><td><code>{@link #Searchable_imeOptions app.guchagucharr.guchagucharunrecorder:imeOptions}</code></td><td> Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.</td></tr>
           <tr><td><code>{@link #Searchable_includeInGlobalSearch app.guchagucharr.guchagucharunrecorder:includeInGlobalSearch}</code></td><td> If provided and <code>true</code>, this searchable activity will be
             included in any global lists of search targets.</td></tr>
           <tr><td><code>{@link #Searchable_inputType app.guchagucharr.guchagucharunrecorder:inputType}</code></td><td> The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.</td></tr>
           <tr><td><code>{@link #Searchable_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> This is the user-displayed name of the searchable activity.</td></tr>
           <tr><td><code>{@link #Searchable_queryAfterZeroResults app.guchagucharr.guchagucharunrecorder:queryAfterZeroResults}</code></td><td> If provided and <code>true</code>, this searchable activity will be invoked for all
             queries in a particular session.</td></tr>
           <tr><td><code>{@link #Searchable_searchButtonText app.guchagucharr.guchagucharunrecorder:searchButtonText}</code></td><td> If supplied, this string will be displayed as the text of the "Search" button.</td></tr>
           <tr><td><code>{@link #Searchable_searchMode app.guchagucharr.guchagucharunrecorder:searchMode}</code></td><td> Additional features are controlled by mode bits in this field.</td></tr>
           <tr><td><code>{@link #Searchable_searchSettingsDescription app.guchagucharr.guchagucharunrecorder:searchSettingsDescription}</code></td><td> If provided, this string will be used to describe the searchable item in the
             searchable items settings within system search settings.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestAuthority app.guchagucharr.guchagucharunrecorder:searchSuggestAuthority}</code></td><td> If provided, this is the trigger indicating that the searchable activity
            provides suggestions as well.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestIntentAction app.guchagucharr.guchagucharunrecorder:searchSuggestIntentAction}</code></td><td> If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the action field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestIntentData app.guchagucharr.guchagucharunrecorder:searchSuggestIntentData}</code></td><td> If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the data field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestPath app.guchagucharr.guchagucharunrecorder:searchSuggestPath}</code></td><td> If provided, this will be inserted in the suggestions query Uri, after the authority
            you have provide but before the standard suggestions path.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestSelection app.guchagucharr.guchagucharunrecorder:searchSuggestSelection}</code></td><td> If provided, suggestion queries will be passed into your query function
            as the <i>selection</i> parameter.</td></tr>
           <tr><td><code>{@link #Searchable_searchSuggestThreshold app.guchagucharr.guchagucharunrecorder:searchSuggestThreshold}</code></td><td> If provided, this is the minimum number of characters needed to trigger
             search suggestions.</td></tr>
           <tr><td><code>{@link #Searchable_voiceLanguage app.guchagucharr.guchagucharunrecorder:voiceLanguage}</code></td><td> If provided, this specifies the spoken language to be expected, and that it will be
             different than the one set in the {@link java.util.Locale#getDefault()}.</td></tr>
           <tr><td><code>{@link #Searchable_voiceLanguageModel app.guchagucharr.guchagucharunrecorder:voiceLanguageModel}</code></td><td> If provided, this specifies the language model that should be used by the
             voice recognition system.</td></tr>
           <tr><td><code>{@link #Searchable_voiceMaxResults app.guchagucharr.guchagucharunrecorder:voiceMaxResults}</code></td><td> If provided, enforces the maximum number of results to return, including the "best"
             result which will always be provided as the SEARCH intent's primary query.</td></tr>
           <tr><td><code>{@link #Searchable_voicePromptText app.guchagucharr.guchagucharunrecorder:voicePromptText}</code></td><td> If provided, this specifies a prompt that will be displayed during voice input.</td></tr>
           <tr><td><code>{@link #Searchable_voiceSearchMode app.guchagucharr.guchagucharunrecorder:voiceSearchMode}</code></td><td> Voice search features are controlled by mode bits in this field.</td></tr>
           </table>
           @see #Searchable_autoUrlDetect
           @see #Searchable_hint
           @see #Searchable_icon
           @see #Searchable_imeOptions
           @see #Searchable_includeInGlobalSearch
           @see #Searchable_inputType
           @see #Searchable_label
           @see #Searchable_queryAfterZeroResults
           @see #Searchable_searchButtonText
           @see #Searchable_searchMode
           @see #Searchable_searchSettingsDescription
           @see #Searchable_searchSuggestAuthority
           @see #Searchable_searchSuggestIntentAction
           @see #Searchable_searchSuggestIntentData
           @see #Searchable_searchSuggestPath
           @see #Searchable_searchSuggestSelection
           @see #Searchable_searchSuggestThreshold
           @see #Searchable_voiceLanguage
           @see #Searchable_voiceLanguageModel
           @see #Searchable_voiceMaxResults
           @see #Searchable_voicePromptText
           @see #Searchable_voiceSearchMode
         */
        public static final int[] Searchable = {
            0x7f010123, 0x7f010124, 0x7f010242, 0x7f010346,
            0x7f010347, 0x7f010348, 0x7f010349, 0x7f01034a,
            0x7f01034b, 0x7f01034c, 0x7f01034d, 0x7f01034e,
            0x7f01034f, 0x7f010350, 0x7f010351, 0x7f010352,
            0x7f010353, 0x7f010354, 0x7f010355, 0x7f010356,
            0x7f010404, 0x7f010405
        };
        /**
          <p>
          @attr description
           If provided and <code>true</code>, URLs entered in the search dialog while searching
             within this activity would be detected and treated as URLs (show a 'go' button in the
             keyboard and invoke the browser directly when user launches the URL instead of passing
             the URL to the activity). If set to <code>false</code> any URLs entered are treated as
             normal query text.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoUrlDetect
        */
        public static final int Searchable_autoUrlDetect = 19;
        /**
          <p>
          @attr description
           If supplied, this string will be displayed as a hint to the user.  <i>Optional
            attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hint
        */
        public static final int Searchable_hint = 2;
        /**
          <p>
          @attr description
          <strong>This is deprecated.</strong><br/>The default
              application icon is now always used, so this attribute is
              obsolete.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:icon
        */
        public static final int Searchable_icon = 21;
        /**
          <p>
          @attr description
           Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.  The constants
         here correspond to those defined by
         {@link android.view.inputmethod.EditorInfo#imeOptions}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td> The action key performs a "previous"
             operation, taking the user to the previous field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td> Used to request that the IME never go
             into fullscreen mode.  Applications need to be aware that the flag is not
             a guarantee, and not all IMEs will respect it.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td> Like flagNavigateNext, but
             specifies there is something interesting that a backward navigation
             can focus on.  If the user selects the IME's facility to backward
             navigate, this will show up in the application as an actionPrevious
             at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td> Used to specify that there is something
             interesting that a forward navigation can focus on. This is like using
             actionNext, except allows the IME to be multiline (with
             an enter key) as well as provide forward navigation.  Note that some
             IMEs may not be able to do this, especially when running on a small
             screen where there is little space.  In that case it does not need to
             present a UI for this option.  Like actionNext, if the
             user selects the IME's facility to forward navigate, this will show up
             in the application at
             {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td> Used to request that the IME should be capable of inputting ASCII
             characters.  The intention of this flag is to ensure that the user
             can type Roman alphabet characters in a {@link android.widget.TextView}
             used for, typically, account ID or password input.  It is expected that IMEs
             normally are able to input ASCII even without being told so (such IMEs
             already respect this flag in a sense), but there could be some cases they
             aren't when, for instance, only non-ASCII input languagaes like Arabic,
             Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
             aware that the flag is not a guarantee, and not all IMEs will respect it.
             However, it is strongly recommended for IME authors to respect this flag
             especially when their IME could end up with a state that has only non-ASCII
             input languages enabled.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeOptions
        */
        public static final int Searchable_imeOptions = 1;
        /**
          <p>
          @attr description
           If provided and <code>true</code>, this searchable activity will be
             included in any global lists of search targets.
             The default value is <code>false</code>. <i>Optional attribute.</i>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:includeInGlobalSearch
        */
        public static final int Searchable_includeInGlobalSearch = 16;
        /**
          <p>
          @attr description
           The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inputType
        */
        public static final int Searchable_inputType = 0;
        /**
          <p>
          @attr description
           This is the user-displayed name of the searchable activity.  <i>Required
            attribute.</i> 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int Searchable_label = 20;
        /**
          <p>
          @attr description
           If provided and <code>true</code>, this searchable activity will be invoked for all
             queries in a particular session. If set to <code>false</code> and the activity
             returned zero results for a query, it will not be invoked again in that session for
             supersets of that zero-results query. For example, if the activity returned zero
             results for "bo", it would not be queried again for "bob".
             The default value is <code>false</code>. <i>Optional attribute.</i>. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:queryAfterZeroResults
        */
        public static final int Searchable_queryAfterZeroResults = 17;
        /**
          <p>
          @attr description
           If supplied, this string will be displayed as the text of the "Search" button.
          <i>Optional attribute.</i>
          {@deprecated This will create a non-standard UI appearance, because the search bar UI is
                       changing to use only icons for its buttons.}


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchButtonText
        */
        @Deprecated
        public static final int Searchable_searchButtonText = 3;
        /**
          <p>
          @attr description
           Additional features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.  <i>Optional attribute.</i>
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showSearchLabelAsBadge</code></td><td>0x04</td><td> If set, this flag enables the display of the search target (label) within the
               search bar.  If neither bad mode is selected, no badge will be shown. </td></tr>
<tr><td><code>showSearchIconAsBadge</code></td><td>0x08</td><td><strong>This is deprecated.</strong><br/>The default
              application icon is now always used, so this option is
              obsolete.</td></tr>
<tr><td><code>queryRewriteFromData</code></td><td>0x10</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_INTENT_DATA to
               be considered as the text for suggestion query rewriting.  This should only
               be used when the values in SUGGEST_COLUMN_INTENT_DATA are suitable for user
               inspection and editing - typically, HTTP/HTTPS Uri's. </td></tr>
<tr><td><code>queryRewriteFromText</code></td><td>0x20</td><td> If set, this flag causes the suggestion column SUGGEST_COLUMN_TEXT_1 to
               be considered as the text for suggestion query rewriting.  This should be used
               for suggestions in which no query text is provided and the SUGGEST_COLUMN_INTENT_DATA
               values are not suitable for user inspection and editing. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchMode
        */
        public static final int Searchable_searchMode = 4;
        /**
          <p>
          @attr description
           If provided, this string will be used to describe the searchable item in the
             searchable items settings within system search settings. <i>Optional
             attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSettingsDescription
        */
        public static final int Searchable_searchSettingsDescription = 18;
        /**
          <p>
          @attr description
           If provided, this is the trigger indicating that the searchable activity
            provides suggestions as well.  The value must be a fully-qualified content provider
            authority (e.g. "com.example.android.apis.SuggestionProvider") and should match the
            "android:authorities" tag in your content provider's manifest entry.  <i>Optional
            attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSuggestAuthority
        */
        public static final int Searchable_searchSuggestAuthority = 10;
        /**
          <p>
          @attr description
           If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the action field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSuggestIntentAction
        */
        public static final int Searchable_searchSuggestIntentAction = 13;
        /**
          <p>
          @attr description
           If provided, and not overridden by an action in the selected suggestion, this
            string will be placed in the data field of the {@link android.content.Intent Intent}
            when the user clicks a suggestion.  <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSuggestIntentData
        */
        public static final int Searchable_searchSuggestIntentData = 14;
        /**
          <p>
          @attr description
           If provided, this will be inserted in the suggestions query Uri, after the authority
            you have provide but before the standard suggestions path. <i>Optional attribute.</i>
            


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSuggestPath
        */
        public static final int Searchable_searchSuggestPath = 11;
        /**
          <p>
          @attr description
           If provided, suggestion queries will be passed into your query function
            as the <i>selection</i> parameter.  Typically this will be a WHERE clause for your
            database, and will contain a single question mark, which represents the actual query
            string that has been typed by the user.  If not provided, then the user query text
            will be appended to the query Uri (after an additional "/".)  <i>Optional
            attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSuggestSelection
        */
        public static final int Searchable_searchSuggestSelection = 12;
        /**
          <p>
          @attr description
           If provided, this is the minimum number of characters needed to trigger
             search suggestions. The default value is 0. <i>Optional attribute.</i> 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchSuggestThreshold
        */
        public static final int Searchable_searchSuggestThreshold = 15;
        /**
          <p>
          @attr description
           If provided, this specifies the spoken language to be expected, and that it will be
             different than the one set in the {@link java.util.Locale#getDefault()}. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:voiceLanguage
        */
        public static final int Searchable_voiceLanguage = 8;
        /**
          <p>
          @attr description
           If provided, this specifies the language model that should be used by the
             voice recognition system.  See
             {@link android.speech.RecognizerIntent#EXTRA_LANGUAGE_MODEL } for more information.
             If not provided, the default value
             {@link android.speech.RecognizerIntent#LANGUAGE_MODEL_FREE_FORM } will be used. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:voiceLanguageModel
        */
        public static final int Searchable_voiceLanguageModel = 6;
        /**
          <p>
          @attr description
           If provided, enforces the maximum number of results to return, including the "best"
             result which will always be provided as the SEARCH intent's primary query.  Must be one
             or greater.  If not provided, the recognizer will choose how many results to return.
             


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:voiceMaxResults
        */
        public static final int Searchable_voiceMaxResults = 9;
        /**
          <p>
          @attr description
           If provided, this specifies a prompt that will be displayed during voice input. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:voicePromptText
        */
        public static final int Searchable_voicePromptText = 7;
        /**
          <p>
          @attr description
           Voice search features are controlled by mode bits in this field.  Omitting
            this field, or setting to zero, provides default behavior.
            If showVoiceSearchButton is set, then launchWebSearch or launchRecognizer must
            also be set.  <i>Optional attribute.</i>
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>showVoiceSearchButton</code></td><td>0x01</td><td> If set, display a voice search button.  This only takes effect if voice search is
               available on the device. </td></tr>
<tr><td><code>launchWebSearch</code></td><td>0x02</td><td> If set, the voice search button will take the user directly to a built-in
               voice web search activity.  Most applications will not use this flag, as it
               will take the user away from the activity in which search was invoked. </td></tr>
<tr><td><code>launchRecognizer</code></td><td>0x04</td><td> If set, the voice search button will take the user directly to a built-in
               voice recording activity.  This activity will prompt the user to speak,
               transcribe the spoken text, and forward the resulting query
               text to the searchable activity, just as if the user had typed it into
               the search UI and clicked the search button. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:voiceSearchMode
        */
        public static final int Searchable_voiceSearchMode = 5;
        /**  In order to process special action keys during search, you must define them using
            one or more "ActionKey" elements in your Searchable metadata.  For a more in-depth
            discussion of action code handling, please refer to {@link android.app.SearchManager}.
    
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SearchableActionKey_keycode app.guchagucharr.guchagucharunrecorder:keycode}</code></td><td> This attribute denotes the action key you wish to respond to.</td></tr>
           <tr><td><code>{@link #SearchableActionKey_queryActionMsg app.guchagucharr.guchagucharunrecorder:queryActionMsg}</code></td><td> If you wish to handle an action key during normal search query entry, you
            must define an action string here.</td></tr>
           <tr><td><code>{@link #SearchableActionKey_suggestActionMsg app.guchagucharr.guchagucharunrecorder:suggestActionMsg}</code></td><td> If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, there are two ways to handle this.</td></tr>
           <tr><td><code>{@link #SearchableActionKey_suggestActionMsgColumn app.guchagucharr.guchagucharunrecorder:suggestActionMsgColumn}</code></td><td> If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, but you do not wish to enable this action key for every suggestion,
            then you can use this attribute to control it on a suggestion-by-suggestion basis.</td></tr>
           </table>
           @see #SearchableActionKey_keycode
           @see #SearchableActionKey_queryActionMsg
           @see #SearchableActionKey_suggestActionMsg
           @see #SearchableActionKey_suggestActionMsgColumn
         */
        public static final int[] SearchableActionKey = {
            0x7f01012d, 0x7f010357, 0x7f010358, 0x7f010359
        };
        /**
          <p>
          @attr description
           This attribute denotes the action key you wish to respond to.  Note that not
            all action keys are actually supported using this mechanism, as many of them are
            used for typing, navigation, or system functions.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the key code, use
            {@link android.content.Intent#getIntExtra getIntExtra(SearchManager.ACTION_KEY)}.
            <p>Note, in addition to the keycode, you must also provide one or more of the action
            specifier attributes.  <i>Required attribute.</i> 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>KEYCODE_UNKNOWN</code></td><td>0</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_LEFT</code></td><td>1</td><td></td></tr>
<tr><td><code>KEYCODE_SOFT_RIGHT</code></td><td>2</td><td></td></tr>
<tr><td><code>KEYCODE_HOME</code></td><td>3</td><td></td></tr>
<tr><td><code>KEYCODE_BACK</code></td><td>4</td><td></td></tr>
<tr><td><code>KEYCODE_CALL</code></td><td>5</td><td></td></tr>
<tr><td><code>KEYCODE_ENDCALL</code></td><td>6</td><td></td></tr>
<tr><td><code>KEYCODE_0</code></td><td>7</td><td></td></tr>
<tr><td><code>KEYCODE_1</code></td><td>8</td><td></td></tr>
<tr><td><code>KEYCODE_2</code></td><td>9</td><td></td></tr>
<tr><td><code>KEYCODE_3</code></td><td>10</td><td></td></tr>
<tr><td><code>KEYCODE_4</code></td><td>11</td><td></td></tr>
<tr><td><code>KEYCODE_5</code></td><td>12</td><td></td></tr>
<tr><td><code>KEYCODE_6</code></td><td>13</td><td></td></tr>
<tr><td><code>KEYCODE_7</code></td><td>14</td><td></td></tr>
<tr><td><code>KEYCODE_8</code></td><td>15</td><td></td></tr>
<tr><td><code>KEYCODE_9</code></td><td>16</td><td></td></tr>
<tr><td><code>KEYCODE_STAR</code></td><td>17</td><td></td></tr>
<tr><td><code>KEYCODE_POUND</code></td><td>18</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_UP</code></td><td>19</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_DOWN</code></td><td>20</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_LEFT</code></td><td>21</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_RIGHT</code></td><td>22</td><td></td></tr>
<tr><td><code>KEYCODE_DPAD_CENTER</code></td><td>23</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_UP</code></td><td>24</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_DOWN</code></td><td>25</td><td></td></tr>
<tr><td><code>KEYCODE_POWER</code></td><td>26</td><td></td></tr>
<tr><td><code>KEYCODE_CAMERA</code></td><td>27</td><td></td></tr>
<tr><td><code>KEYCODE_CLEAR</code></td><td>28</td><td></td></tr>
<tr><td><code>KEYCODE_A</code></td><td>29</td><td></td></tr>
<tr><td><code>KEYCODE_B</code></td><td>30</td><td></td></tr>
<tr><td><code>KEYCODE_C</code></td><td>31</td><td></td></tr>
<tr><td><code>KEYCODE_D</code></td><td>32</td><td></td></tr>
<tr><td><code>KEYCODE_E</code></td><td>33</td><td></td></tr>
<tr><td><code>KEYCODE_F</code></td><td>34</td><td></td></tr>
<tr><td><code>KEYCODE_G</code></td><td>35</td><td></td></tr>
<tr><td><code>KEYCODE_H</code></td><td>36</td><td></td></tr>
<tr><td><code>KEYCODE_I</code></td><td>37</td><td></td></tr>
<tr><td><code>KEYCODE_J</code></td><td>38</td><td></td></tr>
<tr><td><code>KEYCODE_K</code></td><td>39</td><td></td></tr>
<tr><td><code>KEYCODE_L</code></td><td>40</td><td></td></tr>
<tr><td><code>KEYCODE_M</code></td><td>41</td><td></td></tr>
<tr><td><code>KEYCODE_N</code></td><td>42</td><td></td></tr>
<tr><td><code>KEYCODE_O</code></td><td>43</td><td></td></tr>
<tr><td><code>KEYCODE_P</code></td><td>44</td><td></td></tr>
<tr><td><code>KEYCODE_Q</code></td><td>45</td><td></td></tr>
<tr><td><code>KEYCODE_R</code></td><td>46</td><td></td></tr>
<tr><td><code>KEYCODE_S</code></td><td>47</td><td></td></tr>
<tr><td><code>KEYCODE_T</code></td><td>48</td><td></td></tr>
<tr><td><code>KEYCODE_U</code></td><td>49</td><td></td></tr>
<tr><td><code>KEYCODE_V</code></td><td>50</td><td></td></tr>
<tr><td><code>KEYCODE_W</code></td><td>51</td><td></td></tr>
<tr><td><code>KEYCODE_X</code></td><td>52</td><td></td></tr>
<tr><td><code>KEYCODE_Y</code></td><td>53</td><td></td></tr>
<tr><td><code>KEYCODE_Z</code></td><td>54</td><td></td></tr>
<tr><td><code>KEYCODE_COMMA</code></td><td>55</td><td></td></tr>
<tr><td><code>KEYCODE_PERIOD</code></td><td>56</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_LEFT</code></td><td>57</td><td></td></tr>
<tr><td><code>KEYCODE_ALT_RIGHT</code></td><td>58</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_LEFT</code></td><td>59</td><td></td></tr>
<tr><td><code>KEYCODE_SHIFT_RIGHT</code></td><td>60</td><td></td></tr>
<tr><td><code>KEYCODE_TAB</code></td><td>61</td><td></td></tr>
<tr><td><code>KEYCODE_SPACE</code></td><td>62</td><td></td></tr>
<tr><td><code>KEYCODE_SYM</code></td><td>63</td><td></td></tr>
<tr><td><code>KEYCODE_EXPLORER</code></td><td>64</td><td></td></tr>
<tr><td><code>KEYCODE_ENVELOPE</code></td><td>65</td><td></td></tr>
<tr><td><code>KEYCODE_ENTER</code></td><td>66</td><td></td></tr>
<tr><td><code>KEYCODE_DEL</code></td><td>67</td><td></td></tr>
<tr><td><code>KEYCODE_GRAVE</code></td><td>68</td><td></td></tr>
<tr><td><code>KEYCODE_MINUS</code></td><td>69</td><td></td></tr>
<tr><td><code>KEYCODE_EQUALS</code></td><td>70</td><td></td></tr>
<tr><td><code>KEYCODE_LEFT_BRACKET</code></td><td>71</td><td></td></tr>
<tr><td><code>KEYCODE_RIGHT_BRACKET</code></td><td>72</td><td></td></tr>
<tr><td><code>KEYCODE_BACKSLASH</code></td><td>73</td><td></td></tr>
<tr><td><code>KEYCODE_SEMICOLON</code></td><td>74</td><td></td></tr>
<tr><td><code>KEYCODE_APOSTROPHE</code></td><td>75</td><td></td></tr>
<tr><td><code>KEYCODE_SLASH</code></td><td>76</td><td></td></tr>
<tr><td><code>KEYCODE_AT</code></td><td>77</td><td></td></tr>
<tr><td><code>KEYCODE_NUM</code></td><td>78</td><td></td></tr>
<tr><td><code>KEYCODE_HEADSETHOOK</code></td><td>79</td><td></td></tr>
<tr><td><code>KEYCODE_FOCUS</code></td><td>80</td><td></td></tr>
<tr><td><code>KEYCODE_PLUS</code></td><td>81</td><td></td></tr>
<tr><td><code>KEYCODE_MENU</code></td><td>82</td><td></td></tr>
<tr><td><code>KEYCODE_NOTIFICATION</code></td><td>83</td><td></td></tr>
<tr><td><code>KEYCODE_SEARCH</code></td><td>84</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PLAY_PAUSE</code></td><td>85</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_STOP</code></td><td>86</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_NEXT</code></td><td>87</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PREVIOUS</code></td><td>88</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_REWIND</code></td><td>89</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_FAST_FORWARD</code></td><td>90</td><td></td></tr>
<tr><td><code>KEYCODE_MUTE</code></td><td>91</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_UP</code></td><td>92</td><td></td></tr>
<tr><td><code>KEYCODE_PAGE_DOWN</code></td><td>93</td><td></td></tr>
<tr><td><code>KEYCODE_PICTSYMBOLS</code></td><td>94</td><td></td></tr>
<tr><td><code>KEYCODE_SWITCH_CHARSET</code></td><td>95</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_A</code></td><td>96</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_B</code></td><td>97</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_C</code></td><td>98</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_X</code></td><td>99</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Y</code></td><td>100</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_Z</code></td><td>101</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L1</code></td><td>102</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R1</code></td><td>103</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_L2</code></td><td>104</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_R2</code></td><td>105</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBL</code></td><td>106</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_THUMBR</code></td><td>107</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_START</code></td><td>108</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_SELECT</code></td><td>109</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_MODE</code></td><td>110</td><td></td></tr>
<tr><td><code>KEYCODE_ESCAPE</code></td><td>111</td><td></td></tr>
<tr><td><code>KEYCODE_FORWARD_DEL</code></td><td>112</td><td></td></tr>
<tr><td><code>KEYCODE_CTRL_LEFT</code></td><td>113</td><td></td></tr>
<tr><td><code>KEYCODE_CTRL_RIGHT</code></td><td>114</td><td></td></tr>
<tr><td><code>KEYCODE_CAPS_LOCK</code></td><td>115</td><td></td></tr>
<tr><td><code>KEYCODE_SCROLL_LOCK</code></td><td>116</td><td></td></tr>
<tr><td><code>KEYCODE_META_LEFT</code></td><td>117</td><td></td></tr>
<tr><td><code>KEYCODE_META_RIGHT</code></td><td>118</td><td></td></tr>
<tr><td><code>KEYCODE_FUNCTION</code></td><td>119</td><td></td></tr>
<tr><td><code>KEYCODE_SYSRQ</code></td><td>120</td><td></td></tr>
<tr><td><code>KEYCODE_BREAK</code></td><td>121</td><td></td></tr>
<tr><td><code>KEYCODE_MOVE_HOME</code></td><td>122</td><td></td></tr>
<tr><td><code>KEYCODE_MOVE_END</code></td><td>123</td><td></td></tr>
<tr><td><code>KEYCODE_INSERT</code></td><td>124</td><td></td></tr>
<tr><td><code>KEYCODE_FORWARD</code></td><td>125</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PLAY</code></td><td>126</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_PAUSE</code></td><td>127</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_CLOSE</code></td><td>128</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_EJECT</code></td><td>129</td><td></td></tr>
<tr><td><code>KEYCODE_MEDIA_RECORD</code></td><td>130</td><td></td></tr>
<tr><td><code>KEYCODE_F1</code></td><td>131</td><td></td></tr>
<tr><td><code>KEYCODE_F2</code></td><td>132</td><td></td></tr>
<tr><td><code>KEYCODE_F3</code></td><td>133</td><td></td></tr>
<tr><td><code>KEYCODE_F4</code></td><td>134</td><td></td></tr>
<tr><td><code>KEYCODE_F5</code></td><td>135</td><td></td></tr>
<tr><td><code>KEYCODE_F6</code></td><td>136</td><td></td></tr>
<tr><td><code>KEYCODE_F7</code></td><td>137</td><td></td></tr>
<tr><td><code>KEYCODE_F8</code></td><td>138</td><td></td></tr>
<tr><td><code>KEYCODE_F9</code></td><td>139</td><td></td></tr>
<tr><td><code>KEYCODE_F10</code></td><td>140</td><td></td></tr>
<tr><td><code>KEYCODE_F11</code></td><td>141</td><td></td></tr>
<tr><td><code>KEYCODE_F12</code></td><td>142</td><td></td></tr>
<tr><td><code>KEYCODE_NUM_LOCK</code></td><td>143</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_0</code></td><td>144</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_1</code></td><td>145</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_2</code></td><td>146</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_3</code></td><td>147</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_4</code></td><td>148</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_5</code></td><td>149</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_6</code></td><td>150</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_7</code></td><td>151</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_8</code></td><td>152</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_9</code></td><td>153</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_DIVIDE</code></td><td>154</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_MULTIPLY</code></td><td>155</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_SUBTRACT</code></td><td>156</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_ADD</code></td><td>157</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_DOT</code></td><td>158</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_COMMA</code></td><td>159</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_ENTER</code></td><td>160</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_EQUALS</code></td><td>161</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_LEFT_PAREN</code></td><td>162</td><td></td></tr>
<tr><td><code>KEYCODE_NUMPAD_RIGHT_PAREN</code></td><td>163</td><td></td></tr>
<tr><td><code>KEYCODE_VOLUME_MUTE</code></td><td>164</td><td></td></tr>
<tr><td><code>KEYCODE_INFO</code></td><td>165</td><td></td></tr>
<tr><td><code>KEYCODE_CHANNEL_UP</code></td><td>166</td><td></td></tr>
<tr><td><code>KEYCODE_CHANNEL_DOWN</code></td><td>167</td><td></td></tr>
<tr><td><code>KEYCODE_ZOOM_IN</code></td><td>168</td><td></td></tr>
<tr><td><code>KEYCODE_ZOOM_OUT</code></td><td>169</td><td></td></tr>
<tr><td><code>KEYCODE_TV</code></td><td>170</td><td></td></tr>
<tr><td><code>KEYCODE_WINDOW</code></td><td>171</td><td></td></tr>
<tr><td><code>KEYCODE_GUIDE</code></td><td>172</td><td></td></tr>
<tr><td><code>KEYCODE_DVR</code></td><td>173</td><td></td></tr>
<tr><td><code>KEYCODE_BOOKMARK</code></td><td>174</td><td></td></tr>
<tr><td><code>KEYCODE_CAPTIONS</code></td><td>175</td><td></td></tr>
<tr><td><code>KEYCODE_SETTINGS</code></td><td>176</td><td></td></tr>
<tr><td><code>KEYCODE_TV_POWER</code></td><td>177</td><td></td></tr>
<tr><td><code>KEYCODE_TV_INPUT</code></td><td>178</td><td></td></tr>
<tr><td><code>KEYCODE_STB_POWER</code></td><td>179</td><td></td></tr>
<tr><td><code>KEYCODE_STB_INPUT</code></td><td>180</td><td></td></tr>
<tr><td><code>KEYCODE_AVR_POWER</code></td><td>181</td><td></td></tr>
<tr><td><code>KEYCODE_AVR_INPUT</code></td><td>182</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_GRED</code></td><td>183</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_GREEN</code></td><td>184</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_YELLOW</code></td><td>185</td><td></td></tr>
<tr><td><code>KEYCODE_PROG_BLUE</code></td><td>186</td><td></td></tr>
<tr><td><code>KEYCODE_APP_SWITCH</code></td><td>187</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_1</code></td><td>188</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_2</code></td><td>189</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_3</code></td><td>190</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_4</code></td><td>191</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_5</code></td><td>192</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_6</code></td><td>193</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_7</code></td><td>194</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_8</code></td><td>195</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_9</code></td><td>196</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_10</code></td><td>197</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_11</code></td><td>198</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_12</code></td><td>199</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_13</code></td><td>200</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_14</code></td><td>201</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_15</code></td><td>202</td><td></td></tr>
<tr><td><code>KEYCODE_BUTTON_16</code></td><td>203</td><td></td></tr>
<tr><td><code>KEYCODE_LANGUAGE_SWITCH</code></td><td>204</td><td></td></tr>
<tr><td><code>KEYCODE_MANNER_MODE</code></td><td>205</td><td></td></tr>
<tr><td><code>KEYCODE_3D_MODE</code></td><td>206</td><td></td></tr>
<tr><td><code>KEYCODE_CONTACTS</code></td><td>207</td><td></td></tr>
<tr><td><code>KEYCODE_CALENDAR</code></td><td>208</td><td></td></tr>
<tr><td><code>KEYCODE_MUSIC</code></td><td>209</td><td></td></tr>
<tr><td><code>KEYCODE_CALCULATOR</code></td><td>210</td><td></td></tr>
<tr><td><code>KEYCODE_ZENKAKU_HANKAKU</code></td><td>211</td><td></td></tr>
<tr><td><code>KEYCODE_EISU</code></td><td>212</td><td></td></tr>
<tr><td><code>KEYCODE_MUHENKAN</code></td><td>213</td><td></td></tr>
<tr><td><code>KEYCODE_HENKAN</code></td><td>214</td><td></td></tr>
<tr><td><code>KEYCODE_KATAKANA_HIRAGANA</code></td><td>215</td><td></td></tr>
<tr><td><code>KEYCODE_YEN</code></td><td>216</td><td></td></tr>
<tr><td><code>KEYCODE_RO</code></td><td>217</td><td></td></tr>
<tr><td><code>KEYCODE_KANA</code></td><td>218</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keycode
        */
        public static final int SearchableActionKey_keycode = 0;
        /**
          <p>
          @attr description
           If you wish to handle an action key during normal search query entry, you
            must define an action string here.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:queryActionMsg
        */
        public static final int SearchableActionKey_queryActionMsg = 1;
        /**
          <p>
          @attr description
           If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, there are two ways to handle this.  If <i>all</i> of your suggestions
            can handle the action key, you can simply define the action message using this
            attribute.  This will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to your
            searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra getStringExtra(SearchManager.ACTION_MSG)}.
            <i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:suggestActionMsg
        */
        public static final int SearchableActionKey_suggestActionMsg = 2;
        /**
          <p>
          @attr description
           If you wish to handle an action key while a suggestion is being displayed <i>and
            selected</i>, but you do not wish to enable this action key for every suggestion,
            then you can use this attribute to control it on a suggestion-by-suggestion basis.
            First, you must define a column (and name it here) where your suggestions will include
            the action string.  Then, in your content provider, you must provide this column, and
            when desired, provide data in this column.
            The search manager will look at your suggestion cursor, using the string
            provided here in order to select a column, and will use that to select a string from
            the cursor.  That string will be added to the
            {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} intent that is passed to
            your searchable activity.  To examine the string, use
            {@link android.content.Intent#getStringExtra
            getStringExtra(SearchManager.ACTION_MSG)}.  <i>If the data does not exist for the
            selection suggestion, the action key will be ignored.</i><i>Optional attribute.</i> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:suggestActionMsgColumn
        */
        public static final int SearchableActionKey_suggestActionMsgColumn = 3;
        /** Attributes that can be used with a SeekBar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SeekBar_thumb app.guchagucharr.guchagucharunrecorder:thumb}</code></td><td> Draws the thumb on a seekbar.</td></tr>
           <tr><td><code>{@link #SeekBar_thumbOffset app.guchagucharr.guchagucharunrecorder:thumbOffset}</code></td><td> An offset for the thumb that allows it to extend out of the range of the track.</td></tr>
           </table>
           @see #SeekBar_thumb
           @see #SeekBar_thumbOffset
         */
        public static final int[] SeekBar = {
            0x7f01022a, 0x7f01022b
        };
        /**
          <p>
          @attr description
           Draws the thumb on a seekbar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thumb
        */
        public static final int SeekBar_thumb = 0;
        /**
          <p>
          @attr description
           An offset for the thumb that allows it to extend out of the range of the track. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thumbOffset
        */
        public static final int SeekBar_thumbOffset = 1;
        /** Attributes that can be used with a SelectionModeDrawables.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SelectionModeDrawables_actionModeCopyDrawable app.guchagucharr.guchagucharunrecorder:actionModeCopyDrawable}</code></td><td> Drawable to use for the Copy action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #SelectionModeDrawables_actionModeCutDrawable app.guchagucharr.guchagucharunrecorder:actionModeCutDrawable}</code></td><td> Drawable to use for the Cut action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #SelectionModeDrawables_actionModePasteDrawable app.guchagucharr.guchagucharunrecorder:actionModePasteDrawable}</code></td><td> Drawable to use for the Paste action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #SelectionModeDrawables_actionModeSelectAllDrawable app.guchagucharr.guchagucharunrecorder:actionModeSelectAllDrawable}</code></td><td> Drawable to use for the Select all action button in Contextual Action Bar </td></tr>
           </table>
           @see #SelectionModeDrawables_actionModeCopyDrawable
           @see #SelectionModeDrawables_actionModeCutDrawable
           @see #SelectionModeDrawables_actionModePasteDrawable
           @see #SelectionModeDrawables_actionModeSelectAllDrawable
         */
        public static final int[] SelectionModeDrawables = {
            0x7f0100dc, 0x7f0100dd, 0x7f0100de, 0x7f0100df
        };
        /**
          <p>
          @attr description
           Drawable to use for the Copy action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeCopyDrawable
        */
        public static final int SelectionModeDrawables_actionModeCopyDrawable = 1;
        /**
          <p>
          @attr description
           Drawable to use for the Cut action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeCutDrawable
        */
        public static final int SelectionModeDrawables_actionModeCutDrawable = 0;
        /**
          <p>
          @attr description
           Drawable to use for the Paste action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModePasteDrawable
        */
        public static final int SelectionModeDrawables_actionModePasteDrawable = 2;
        /**
          <p>
          @attr description
           Drawable to use for the Select all action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeSelectAllDrawable
        */
        public static final int SelectionModeDrawables_actionModeSelectAllDrawable = 3;
        /**  Drawable used to draw shapes. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ShapeDrawable_color app.guchagucharr.guchagucharunrecorder:color}</code></td><td> Defines the color of the shape.</td></tr>
           <tr><td><code>{@link #ShapeDrawable_dither app.guchagucharr.guchagucharunrecorder:dither}</code></td><td> Enables or disables dithering.</td></tr>
           <tr><td><code>{@link #ShapeDrawable_height app.guchagucharr.guchagucharunrecorder:height}</code></td><td> Defines the height of the shape.</td></tr>
           <tr><td><code>{@link #ShapeDrawable_width app.guchagucharr.guchagucharunrecorder:width}</code></td><td> Defines the width of the shape.</td></tr>
           </table>
           @see #ShapeDrawable_color
           @see #ShapeDrawable_dither
           @see #ShapeDrawable_height
           @see #ShapeDrawable_width
         */
        public static final int[] ShapeDrawable = {
            0x7f010247, 0x7f01024b, 0x7f0102d8, 0x7f0102ec
        };
        /**
          <p>
          @attr description
           Defines the color of the shape. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:color
        */
        public static final int ShapeDrawable_color = 3;
        /**
          <p>
          @attr description
           Enables or disables dithering. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dither
        */
        public static final int ShapeDrawable_dither = 2;
        /**
          <p>
          @attr description
           Defines the height of the shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:height
        */
        public static final int ShapeDrawable_height = 0;
        /**
          <p>
          @attr description
           Defines the width of the shape. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:width
        */
        public static final int ShapeDrawable_width = 1;
        /**  Defines the padding of a ShapeDrawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_bottom app.guchagucharr.guchagucharunrecorder:bottom}</code></td><td> Bottom padding.</td></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_left app.guchagucharr.guchagucharunrecorder:left}</code></td><td> Left padding.</td></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_right app.guchagucharr.guchagucharunrecorder:right}</code></td><td> Right padding.</td></tr>
           <tr><td><code>{@link #ShapeDrawablePadding_top app.guchagucharr.guchagucharunrecorder:top}</code></td><td> Top padding.</td></tr>
           </table>
           @see #ShapeDrawablePadding_bottom
           @see #ShapeDrawablePadding_left
           @see #ShapeDrawablePadding_right
           @see #ShapeDrawablePadding_top
         */
        public static final int[] ShapeDrawablePadding = {
            0x7f0102f4, 0x7f0102f5, 0x7f0102f6, 0x7f0102f7
        };
        /**
          <p>
          @attr description
           Bottom padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bottom
        */
        public static final int ShapeDrawablePadding_bottom = 3;
        /**
          <p>
          @attr description
           Left padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:left
        */
        public static final int ShapeDrawablePadding_left = 0;
        /**
          <p>
          @attr description
           Right padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:right
        */
        public static final int ShapeDrawablePadding_right = 2;
        /**
          <p>
          @attr description
           Top padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:top
        */
        public static final int ShapeDrawablePadding_top = 1;
        /** Attributes that can be used with a SizeAdaptiveLayout.
         */
        public static final int[] SizeAdaptiveLayout = {
            
        };
        /** Attributes that can be used with a SizeAdaptiveLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SizeAdaptiveLayout_Layout_layout_maxHeight app.guchagucharr.guchagucharunrecorder:layout_maxHeight}</code></td><td> The maximum valid height for this item.</td></tr>
           <tr><td><code>{@link #SizeAdaptiveLayout_Layout_layout_minHeight app.guchagucharr.guchagucharunrecorder:layout_minHeight}</code></td><td> The minimum valid height for this item.</td></tr>
           </table>
           @see #SizeAdaptiveLayout_Layout_layout_maxHeight
           @see #SizeAdaptiveLayout_Layout_layout_minHeight
         */
        public static final int[] SizeAdaptiveLayout_Layout = {
            0x7f0103cd, 0x7f0103ce
        };
        /**
          <p>
          @attr description
           The maximum valid height for this item. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unbounded</code></td><td>-1</td><td> Indicates that the view may be resized arbitrarily large. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_maxHeight
        */
        public static final int SizeAdaptiveLayout_Layout_layout_maxHeight = 0;
        /**
          <p>
          @attr description
           The minimum valid height for this item. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_minHeight
        */
        public static final int SizeAdaptiveLayout_Layout_layout_minHeight = 1;
        /** Attributes that can be used with a SlidingChallengeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingChallengeLayout_Layout_layout_childType app.guchagucharr.guchagucharunrecorder:layout_childType}</code></td><td> Some child types have special behavior.</td></tr>
           <tr><td><code>{@link #SlidingChallengeLayout_Layout_layout_maxHeight app.guchagucharr.guchagucharunrecorder:layout_maxHeight}</code></td><td> The maximum valid height for this item.</td></tr>
           </table>
           @see #SlidingChallengeLayout_Layout_layout_childType
           @see #SlidingChallengeLayout_Layout_layout_maxHeight
         */
        public static final int[] SlidingChallengeLayout_Layout = {
            0x7f0103cd, 0x7f0103fe
        };
        /**
          <p>
          @attr description
           Some child types have special behavior. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_childType
        */
        public static final int SlidingChallengeLayout_Layout_layout_childType = 1;
        /**
          <p>
          @attr description
           The maximum valid height for this item. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unbounded</code></td><td>-1</td><td> Indicates that the view may be resized arbitrarily large. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_maxHeight
        */
        public static final int SlidingChallengeLayout_Layout_layout_maxHeight = 0;
        /**  SlidingDrawer specific attributes. These attributes are used to configure
         a SlidingDrawer from XML. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingDrawer_allowSingleTap app.guchagucharr.guchagucharunrecorder:allowSingleTap}</code></td><td> Indicates whether the drawer can be opened/closed by a single tap
             on the handle.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_animateOnClick app.guchagucharr.guchagucharunrecorder:animateOnClick}</code></td><td> Indicates whether the drawer should be opened/closed with an animation
             when the user clicks the handle.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_bottomOffset app.guchagucharr.guchagucharunrecorder:bottomOffset}</code></td><td> Extra offset for the handle at the bottom of the SlidingDrawer.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_content app.guchagucharr.guchagucharunrecorder:content}</code></td><td> Identifier for the child that represents the drawer's content.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_handle app.guchagucharr.guchagucharunrecorder:handle}</code></td><td> Identifier for the child that represents the drawer's handle.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Orientation of the SlidingDrawer.</td></tr>
           <tr><td><code>{@link #SlidingDrawer_topOffset app.guchagucharr.guchagucharunrecorder:topOffset}</code></td><td> Extra offset for the handle at the top of the SlidingDrawer.</td></tr>
           </table>
           @see #SlidingDrawer_allowSingleTap
           @see #SlidingDrawer_animateOnClick
           @see #SlidingDrawer_bottomOffset
           @see #SlidingDrawer_content
           @see #SlidingDrawer_handle
           @see #SlidingDrawer_orientation
           @see #SlidingDrawer_topOffset
         */
        public static final int[] SlidingDrawer = {
            0x7f01012b, 0x7f01028d, 0x7f01028e, 0x7f01028f,
            0x7f010290, 0x7f010291, 0x7f010292
        };
        /**
          <p>
          @attr description
           Indicates whether the drawer can be opened/closed by a single tap
             on the handle.  (If false, the user must drag or fling, or click
             using the trackball, to open/close the drawer.)  Default is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowSingleTap
        */
        public static final int SlidingDrawer_allowSingleTap = 5;
        /**
          <p>
          @attr description
           Indicates whether the drawer should be opened/closed with an animation
             when the user clicks the handle. Default is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animateOnClick
        */
        public static final int SlidingDrawer_animateOnClick = 6;
        /**
          <p>
          @attr description
           Extra offset for the handle at the bottom of the SlidingDrawer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bottomOffset
        */
        public static final int SlidingDrawer_bottomOffset = 3;
        /**
          <p>
          @attr description
           Identifier for the child that represents the drawer's content. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:content
        */
        public static final int SlidingDrawer_content = 2;
        /**
          <p>
          @attr description
           Identifier for the child that represents the drawer's handle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:handle
        */
        public static final int SlidingDrawer_handle = 1;
        /**
          <p>
          @attr description
           Orientation of the SlidingDrawer. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int SlidingDrawer_orientation = 0;
        /**
          <p>
          @attr description
           Extra offset for the handle at the top of the SlidingDrawer. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:topOffset
        */
        public static final int SlidingDrawer_topOffset = 4;
        /** Attributes that can be used with a SlidingTab.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingTab_orientation app.guchagucharr.guchagucharunrecorder:orientation}</code></td><td> Use "horizontal" for a row, "vertical" for a column.</td></tr>
           </table>
           @see #SlidingTab_orientation
         */
        public static final int[] SlidingTab = {
            0x7f01012b
        };
        /**
          <p>
          @attr description
           Use "horizontal" for a row, "vertical" for a column.  The default is horizontal. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:orientation
        */
        public static final int SlidingTab_orientation = 0;
        /**  Use <code>spell-checker</code> as the root tag of the XML resource that
         describes an
         {@link android.service.textservice.SpellCheckerService} service, which is
         referenced from its
         {@link android.view.textservice.SpellCheckerSession#SERVICE_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SpellChecker_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> The name of the spell checker.</td></tr>
           <tr><td><code>{@link #SpellChecker_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #SpellChecker_label
           @see #SpellChecker_settingsActivity
         */
        public static final int[] SpellChecker = {
            0x7f0101b9, 0x7f010404
        };
        /**
          <p>
          @attr description
           The name of the spell checker. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int SpellChecker_label = 1;
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int SpellChecker_settingsActivity = 0;
        /**  This is the subtype of the spell checker. Subtype can describe locales (e.g. en_US, fr_FR...) 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SpellChecker_Subtype_label app.guchagucharr.guchagucharunrecorder:label}</code></td><td> The name of the subtype.</td></tr>
           <tr><td><code>{@link #SpellChecker_Subtype_subtypeExtraValue app.guchagucharr.guchagucharunrecorder:subtypeExtraValue}</code></td><td> The extra value of the subtype.</td></tr>
           <tr><td><code>{@link #SpellChecker_Subtype_subtypeLocale app.guchagucharr.guchagucharunrecorder:subtypeLocale}</code></td><td> The locale of the subtype.</td></tr>
           </table>
           @see #SpellChecker_Subtype_label
           @see #SpellChecker_Subtype_subtypeExtraValue
           @see #SpellChecker_Subtype_subtypeLocale
         */
        public static final int[] SpellChecker_Subtype = {
            0x7f0101c1, 0x7f0101c2, 0x7f010404
        };
        /**
          <p>
          @attr description
           The name of the subtype. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:label
        */
        public static final int SpellChecker_Subtype_label = 2;
        /**
          <p>
          @attr description
           The extra value of the subtype. This string can be any string and will be passed to
             the SpellChecker.  


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:subtypeExtraValue
        */
        public static final int SpellChecker_Subtype_subtypeExtraValue = 1;
        /**
          <p>
          @attr description
           The locale of the subtype. This string should be a locale (e.g. en_US, fr_FR...)
             This is also used by the framework to know the supported locales
             of the spell checker.  


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:subtypeLocale
        */
        public static final int SpellChecker_Subtype_subtypeLocale = 0;
        /** Attributes that can be used with a Spinner.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Spinner_disableChildrenWhenDisabled app.guchagucharr.guchagucharunrecorder:disableChildrenWhenDisabled}</code></td><td> Whether this spinner should mark child views as enabled/disabled when
             the spinner itself is enabled/disabled.</td></tr>
           <tr><td><code>{@link #Spinner_dropDownHorizontalOffset app.guchagucharr.guchagucharunrecorder:dropDownHorizontalOffset}</code></td><td> Horizontal offset from the spinner widget for positioning the dropdown
             in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_dropDownSelector app.guchagucharr.guchagucharunrecorder:dropDownSelector}</code></td><td> List selector to use for spinnerMode="dropdown" display.</td></tr>
           <tr><td><code>{@link #Spinner_dropDownVerticalOffset app.guchagucharr.guchagucharunrecorder:dropDownVerticalOffset}</code></td><td> Vertical offset from the spinner widget for positioning the dropdown in
             spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_dropDownWidth app.guchagucharr.guchagucharunrecorder:dropDownWidth}</code></td><td> Width of the dropdown in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Gravity setting for positioning the currently selected item.</td></tr>
           <tr><td><code>{@link #Spinner_popupBackground app.guchagucharr.guchagucharunrecorder:popupBackground}</code></td><td> Background drawable to use for the dropdown in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_popupPromptView app.guchagucharr.guchagucharunrecorder:popupPromptView}</code></td><td> Reference to a layout to use for displaying a prompt in the dropdown for
             spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_prompt app.guchagucharr.guchagucharunrecorder:prompt}</code></td><td> The prompt to display when the spinner's dialog is shown.</td></tr>
           <tr><td><code>{@link #Spinner_spinnerMode app.guchagucharr.guchagucharunrecorder:spinnerMode}</code></td><td> Display mode for spinner options.</td></tr>
           </table>
           @see #Spinner_disableChildrenWhenDisabled
           @see #Spinner_dropDownHorizontalOffset
           @see #Spinner_dropDownSelector
           @see #Spinner_dropDownVerticalOffset
           @see #Spinner_dropDownWidth
           @see #Spinner_gravity
           @see #Spinner_popupBackground
           @see #Spinner_popupPromptView
           @see #Spinner_prompt
           @see #Spinner_spinnerMode
         */
        public static final int[] Spinner = {
            0x7f010127, 0x7f010272, 0x7f010273, 0x7f010274,
            0x7f010276, 0x7f010278, 0x7f010281, 0x7f010282,
            0x7f010283, 0x7f010284
        };
        /**
          <p>
          @attr description
           Whether this spinner should mark child views as enabled/disabled when
             the spinner itself is enabled/disabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:disableChildrenWhenDisabled
        */
        public static final int Spinner_disableChildrenWhenDisabled = 9;
        /**
          <p>
          @attr description
           Horizontal offset from the spinner widget for positioning the dropdown
             in spinnerMode="dropdown". 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownHorizontalOffset
        */
        public static final int Spinner_dropDownHorizontalOffset = 3;
        /**
          <p>
          @attr description
           List selector to use for spinnerMode="dropdown" display. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownSelector
        */
        public static final int Spinner_dropDownSelector = 1;
        /**
          <p>
          @attr description
           Vertical offset from the spinner widget for positioning the dropdown in
             spinnerMode="dropdown". 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownVerticalOffset
        */
        public static final int Spinner_dropDownVerticalOffset = 2;
        /**
          <p>
          @attr description
           Width of the dropdown in spinnerMode="dropdown". 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The dropdown should fill the width of the screen.
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The dropdown should fit the width of the screen.
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The dropdown should fit the width of its anchor. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownWidth
        */
        public static final int Spinner_dropDownWidth = 4;
        /**
          <p>
          @attr description
           Gravity setting for positioning the currently selected item. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int Spinner_gravity = 0;
        /**
          <p>
          @attr description
           Background drawable to use for the dropdown in spinnerMode="dropdown". 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupBackground
        */
        public static final int Spinner_popupBackground = 5;
        /**
          <p>
          @attr description
           Reference to a layout to use for displaying a prompt in the dropdown for
             spinnerMode="dropdown". This layout must contain a TextView with the id
             @android:id/text1 to be populated with the prompt text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupPromptView
        */
        public static final int Spinner_popupPromptView = 8;
        /**
          <p>
          @attr description
           The prompt to display when the spinner's dialog is shown. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:prompt
        */
        public static final int Spinner_prompt = 6;
        /**
          <p>
          @attr description
           Display mode for spinner options. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>dialog</code></td><td>0</td><td> Spinner options will be presented to the user as a dialog window. </td></tr>
<tr><td><code>dropdown</code></td><td>1</td><td> Spinner options will be presented to the user as an inline dropdown
                 anchored to the spinner widget itself. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:spinnerMode
        */
        public static final int Spinner_spinnerMode = 7;
        /** Attributes that can be used with a StackView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #StackView_clickColor app.guchagucharr.guchagucharunrecorder:clickColor}</code></td><td> Color of the outline of click feedback.</td></tr>
           <tr><td><code>{@link #StackView_resOutColor app.guchagucharr.guchagucharunrecorder:resOutColor}</code></td><td> Color of the res-out outline.</td></tr>
           </table>
           @see #StackView_clickColor
           @see #StackView_resOutColor
         */
        public static final int[] StackView = {
            0x7f01022c, 0x7f01022d
        };
        /**
          <p>
          @attr description
           Color of the outline of click feedback. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:clickColor
        */
        public static final int StackView_clickColor = 1;
        /**
          <p>
          @attr description
           Color of the res-out outline. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:resOutColor
        */
        public static final int StackView_resOutColor = 0;
        /**  Drawable used to render several states. Each state is represented by
         a child drawable. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #StateListDrawable_constantSize app.guchagucharr.guchagucharunrecorder:constantSize}</code></td><td> If true, the drawable's reported internal size will remain
             constant as the state changes; the size is the maximum of all
             of the states.</td></tr>
           <tr><td><code>{@link #StateListDrawable_dither app.guchagucharr.guchagucharunrecorder:dither}</code></td><td> Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen).</td></tr>
           <tr><td><code>{@link #StateListDrawable_enterFadeDuration app.guchagucharr.guchagucharunrecorder:enterFadeDuration}</code></td><td> Amount of time (in milliseconds) to fade in a new state drawable.</td></tr>
           <tr><td><code>{@link #StateListDrawable_exitFadeDuration app.guchagucharr.guchagucharunrecorder:exitFadeDuration}</code></td><td> Amount of time (in milliseconds) to fade out an old state drawable.</td></tr>
           <tr><td><code>{@link #StateListDrawable_variablePadding app.guchagucharr.guchagucharunrecorder:variablePadding}</code></td><td> If true, allows the drawable's padding to change based on the
             current state that is selected.</td></tr>
           <tr><td><code>{@link #StateListDrawable_visible app.guchagucharr.guchagucharunrecorder:visible}</code></td><td> Indicates whether the drawable should be initially visible.</td></tr>
           </table>
           @see #StateListDrawable_constantSize
           @see #StateListDrawable_dither
           @see #StateListDrawable_enterFadeDuration
           @see #StateListDrawable_exitFadeDuration
           @see #StateListDrawable_variablePadding
           @see #StateListDrawable_visible
         */
        public static final int[] StateListDrawable = {
            0x7f0102d5, 0x7f0102d6, 0x7f0102d7, 0x7f0102d8,
            0x7f0102d9, 0x7f0102da
        };
        /**
          <p>
          @attr description
           If true, the drawable's reported internal size will remain
             constant as the state changes; the size is the maximum of all
             of the states.  If false, the size will vary based on the
             current state. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:constantSize
        */
        public static final int StateListDrawable_constantSize = 2;
        /**
          <p>
          @attr description
           Enables or disables dithering of the bitmap if the bitmap does not have the
             same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
             an RGB 565 screen). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dither
        */
        public static final int StateListDrawable_dither = 3;
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) to fade in a new state drawable. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enterFadeDuration
        */
        public static final int StateListDrawable_enterFadeDuration = 4;
        /**
          <p>
          @attr description
           Amount of time (in milliseconds) to fade out an old state drawable. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:exitFadeDuration
        */
        public static final int StateListDrawable_exitFadeDuration = 5;
        /**
          <p>
          @attr description
           If true, allows the drawable's padding to change based on the
             current state that is selected.  If false, the padding will
             stay the same (based on the maximum padding of all the states).
             Enabling this feature requires that the owner of the drawable
             deal with performing layout when the state changes, which is
             often not supported. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:variablePadding
        */
        public static final int StateListDrawable_variablePadding = 1;
        /**
          <p>
          @attr description
           Indicates whether the drawable should be initially visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visible
        */
        public static final int StateListDrawable_visible = 0;
        /** Attributes that can be used with a Storage.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Storage_allowMassStorage app.guchagucharr.guchagucharunrecorder:allowMassStorage}</code></td><td> true if the storage can be shared via USB mass storage </td></tr>
           <tr><td><code>{@link #Storage_emulated app.guchagucharr.guchagucharunrecorder:emulated}</code></td><td> true if the storage is emulated via the FUSE sdcard daemon </td></tr>
           <tr><td><code>{@link #Storage_maxFileSize app.guchagucharr.guchagucharunrecorder:maxFileSize}</code></td><td> maximum file size for the volume in megabytes, zero or unspecified if it is unbounded </td></tr>
           <tr><td><code>{@link #Storage_mountPoint app.guchagucharr.guchagucharunrecorder:mountPoint}</code></td><td> path to mount point for the storage </td></tr>
           <tr><td><code>{@link #Storage_mtpReserve app.guchagucharr.guchagucharunrecorder:mtpReserve}</code></td><td> number of megabytes of storage MTP should reserve for free storage
             (used for emulated storage that is shared with system's data partition) </td></tr>
           <tr><td><code>{@link #Storage_primary app.guchagucharr.guchagucharunrecorder:primary}</code></td><td> true if the storage is the primary external storage </td></tr>
           <tr><td><code>{@link #Storage_removable app.guchagucharr.guchagucharunrecorder:removable}</code></td><td> true if the storage is removable </td></tr>
           <tr><td><code>{@link #Storage_storageDescription app.guchagucharr.guchagucharunrecorder:storageDescription}</code></td><td> user visible description of the storage </td></tr>
           </table>
           @see #Storage_allowMassStorage
           @see #Storage_emulated
           @see #Storage_maxFileSize
           @see #Storage_mountPoint
           @see #Storage_mtpReserve
           @see #Storage_primary
           @see #Storage_removable
           @see #Storage_storageDescription
         */
        public static final int[] Storage = {
            0x7f0103ea, 0x7f0103eb, 0x7f0103ec, 0x7f0103ed,
            0x7f0103ee, 0x7f0103ef, 0x7f0103f0, 0x7f0103f1
        };
        /**
          <p>
          @attr description
           true if the storage can be shared via USB mass storage 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowMassStorage
        */
        public static final int Storage_allowMassStorage = 6;
        /**
          <p>
          @attr description
           true if the storage is emulated via the FUSE sdcard daemon 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:emulated
        */
        public static final int Storage_emulated = 4;
        /**
          <p>
          @attr description
           maximum file size for the volume in megabytes, zero or unspecified if it is unbounded 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxFileSize
        */
        public static final int Storage_maxFileSize = 7;
        /**
          <p>
          @attr description
           path to mount point for the storage 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mountPoint
        */
        public static final int Storage_mountPoint = 0;
        /**
          <p>
          @attr description
           number of megabytes of storage MTP should reserve for free storage
             (used for emulated storage that is shared with system's data partition) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mtpReserve
        */
        public static final int Storage_mtpReserve = 5;
        /**
          <p>
          @attr description
           true if the storage is the primary external storage 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:primary
        */
        public static final int Storage_primary = 2;
        /**
          <p>
          @attr description
           true if the storage is removable 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:removable
        */
        public static final int Storage_removable = 3;
        /**
          <p>
          @attr description
           user visible description of the storage 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:storageDescription
        */
        public static final int Storage_storageDescription = 1;
        /** Attributes that can be used with a SuggestionSpan.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuggestionSpan_textUnderlineColor app.guchagucharr.guchagucharunrecorder:textUnderlineColor}</code></td><td>  The underline color </td></tr>
           <tr><td><code>{@link #SuggestionSpan_textUnderlineThickness app.guchagucharr.guchagucharunrecorder:textUnderlineThickness}</code></td><td>  The underline thickness </td></tr>
           </table>
           @see #SuggestionSpan_textUnderlineColor
           @see #SuggestionSpan_textUnderlineThickness
         */
        public static final int[] SuggestionSpan = {
            0x7f010041, 0x7f010042
        };
        /**
          <p>
          @attr description
            The underline color 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textUnderlineColor
        */
        public static final int SuggestionSpan_textUnderlineColor = 0;
        /**
          <p>
          @attr description
            The underline thickness 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textUnderlineThickness
        */
        public static final int SuggestionSpan_textUnderlineThickness = 1;
        /** Attributes that can be used with a Switch.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Switch_switchMinWidth app.guchagucharr.guchagucharunrecorder:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #Switch_switchPadding app.guchagucharr.guchagucharunrecorder:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #Switch_switchTextAppearance app.guchagucharr.guchagucharunrecorder:switchTextAppearance}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #Switch_textOff app.guchagucharr.guchagucharunrecorder:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #Switch_textOn app.guchagucharr.guchagucharunrecorder:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #Switch_thumb app.guchagucharr.guchagucharunrecorder:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #Switch_thumbTextPadding app.guchagucharr.guchagucharunrecorder:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #Switch_track app.guchagucharr.guchagucharunrecorder:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           </table>
           @see #Switch_switchMinWidth
           @see #Switch_switchPadding
           @see #Switch_switchTextAppearance
           @see #Switch_textOff
           @see #Switch_textOn
           @see #Switch_thumb
           @see #Switch_thumbTextPadding
           @see #Switch_track
         */
        public static final int[] Switch = {
            0x7f0101f8, 0x7f0101f9, 0x7f01022a, 0x7f0103de,
            0x7f0103df, 0x7f0103e0, 0x7f0103e1, 0x7f0103e2
        };
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchMinWidth
        */
        public static final int Switch_switchMinWidth = 6;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchPadding
        */
        public static final int Switch_switchPadding = 7;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchTextAppearance
        */
        public static final int Switch_switchTextAppearance = 5;
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textOff
        */
        public static final int Switch_textOff = 1;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textOn
        */
        public static final int Switch_textOn = 0;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thumb
        */
        public static final int Switch_thumb = 2;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thumbTextPadding
        */
        public static final int Switch_thumbTextPadding = 4;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:track
        */
        public static final int Switch_track = 3;
        /** Attributes that can be used with a SwitchPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SwitchPreference_disableDependentsState app.guchagucharr.guchagucharunrecorder:disableDependentsState}</code></td><td> The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
           <tr><td><code>{@link #SwitchPreference_summaryOff app.guchagucharr.guchagucharunrecorder:summaryOff}</code></td><td> The summary for the Preference in a PreferenceActivity screen when the
             SwitchPreference is unchecked.</td></tr>
           <tr><td><code>{@link #SwitchPreference_summaryOn app.guchagucharr.guchagucharunrecorder:summaryOn}</code></td><td> The summary for the Preference in a PreferenceActivity screen when the
             SwitchPreference is checked.</td></tr>
           <tr><td><code>{@link #SwitchPreference_switchTextOff app.guchagucharr.guchagucharunrecorder:switchTextOff}</code></td><td> The text used on the switch itself when in the "off" state.</td></tr>
           <tr><td><code>{@link #SwitchPreference_switchTextOn app.guchagucharr.guchagucharunrecorder:switchTextOn}</code></td><td> The text used on the switch itself when in the "on" state.</td></tr>
           </table>
           @see #SwitchPreference_disableDependentsState
           @see #SwitchPreference_summaryOff
           @see #SwitchPreference_summaryOn
           @see #SwitchPreference_switchTextOff
           @see #SwitchPreference_switchTextOn
         */
        public static final int[] SwitchPreference = {
            0x7f010375, 0x7f010376, 0x7f010377, 0x7f0103f2,
            0x7f0103f3
        };
        /**
          <p>
          @attr description
           The state (true for on, or false for off) that causes dependents to be disabled. By default,
             dependents will be disabled when this is unchecked, so the value of this preference is false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:disableDependentsState
        */
        public static final int SwitchPreference_disableDependentsState = 2;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen when the
             SwitchPreference is unchecked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summaryOff
        */
        public static final int SwitchPreference_summaryOff = 1;
        /**
          <p>
          @attr description
           The summary for the Preference in a PreferenceActivity screen when the
             SwitchPreference is checked. If separate on/off summaries are not
             needed, the summary attribute can be used instead. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:summaryOn
        */
        public static final int SwitchPreference_summaryOn = 0;
        /**
          <p>
          @attr description
           The text used on the switch itself when in the "off" state.
             This should be a very SHORT string, as it appears in a small space. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchTextOff
        */
        public static final int SwitchPreference_switchTextOff = 4;
        /**
          <p>
          @attr description
           The text used on the switch itself when in the "on" state.
             This should be a very SHORT string, as it appears in a small space. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchTextOn
        */
        public static final int SwitchPreference_switchTextOn = 3;
        /**  Use <code>account-authenticator</code> as the root tag of the XML resource that
         describes an account authenticator.
     
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SyncAdapter_accountType app.guchagucharr.guchagucharunrecorder:accountType}</code></td><td> The account type this authenticator handles.</td></tr>
           <tr><td><code>{@link #SyncAdapter_allowParallelSyncs app.guchagucharr.guchagucharunrecorder:allowParallelSyncs}</code></td><td> Set to true to tell the SyncManager that this SyncAdapter supports
             multiple simultaneous syncs for the same account type and authority.</td></tr>
           <tr><td><code>{@link #SyncAdapter_contentAuthority app.guchagucharr.guchagucharunrecorder:contentAuthority}</code></td><td> the authority of a content provider.</td></tr>
           <tr><td><code>{@link #SyncAdapter_isAlwaysSyncable app.guchagucharr.guchagucharunrecorder:isAlwaysSyncable}</code></td><td> Set to true to tell the SyncManager to automatically call setIsSyncable(.</td></tr>
           <tr><td><code>{@link #SyncAdapter_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> If provided, specifies the action of the settings
             activity for this SyncAdapter.</td></tr>
           <tr><td><code>{@link #SyncAdapter_supportsUploading app.guchagucharr.guchagucharunrecorder:supportsUploading}</code></td><td></td></tr>
           <tr><td><code>{@link #SyncAdapter_userVisible app.guchagucharr.guchagucharunrecorder:userVisible}</code></td><td></td></tr>
           </table>
           @see #SyncAdapter_accountType
           @see #SyncAdapter_allowParallelSyncs
           @see #SyncAdapter_contentAuthority
           @see #SyncAdapter_isAlwaysSyncable
           @see #SyncAdapter_settingsActivity
           @see #SyncAdapter_supportsUploading
           @see #SyncAdapter_userVisible
         */
        public static final int[] SyncAdapter = {
            0x7f0101b9, 0x7f0103af, 0x7f0103b3, 0x7f0103b4,
            0x7f0103b5, 0x7f0103b6, 0x7f0103b7
        };
        /**
          <p>
          @attr description
           The account type this authenticator handles. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accountType
        */
        public static final int SyncAdapter_accountType = 1;
        /**
          <p>
          @attr description
           Set to true to tell the SyncManager that this SyncAdapter supports
             multiple simultaneous syncs for the same account type and authority.
             Otherwise the SyncManager will be sure not to issue a start sync request
             to this SyncAdapter if the SyncAdapter is already syncing another account.
             Defaults to false.
             


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:allowParallelSyncs
        */
        public static final int SyncAdapter_allowParallelSyncs = 5;
        /**
          <p>
          @attr description
           the authority of a content provider. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:contentAuthority
        */
        public static final int SyncAdapter_contentAuthority = 2;
        /**
          <p>
          @attr description
           Set to true to tell the SyncManager to automatically call setIsSyncable(..., ..., 1)
             for the SyncAdapter instead of issuaing an initialization sync to the SyncAdapter.
             Defaults to false.
             


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isAlwaysSyncable
        */
        public static final int SyncAdapter_isAlwaysSyncable = 6;
        /**
          <p>
          @attr description
           If provided, specifies the action of the settings
             activity for this SyncAdapter.
             


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int SyncAdapter_settingsActivity = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#supportsUploading}
          attribute's value can be found in the {@link #SyncAdapter} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:supportsUploading
        */
        public static final int SyncAdapter_supportsUploading = 4;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#userVisible}
          attribute's value can be found in the {@link #SyncAdapter} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:userVisible
        */
        public static final int SyncAdapter_userVisible = 3;
        /** Attributes that can be used with a TabWidget.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TabWidget_divider app.guchagucharr.guchagucharunrecorder:divider}</code></td><td> Drawable used to draw the divider between tabs.</td></tr>
           <tr><td><code>{@link #TabWidget_tabLayout app.guchagucharr.guchagucharunrecorder:tabLayout}</code></td><td> Layout used to organize each tab's content.</td></tr>
           <tr><td><code>{@link #TabWidget_tabStripEnabled app.guchagucharr.guchagucharunrecorder:tabStripEnabled}</code></td><td> Determines whether the strip under the tab indicators is drawn or not.</td></tr>
           <tr><td><code>{@link #TabWidget_tabStripLeft app.guchagucharr.guchagucharunrecorder:tabStripLeft}</code></td><td> Drawable used to draw the left part of the strip underneath the tabs.</td></tr>
           <tr><td><code>{@link #TabWidget_tabStripRight app.guchagucharr.guchagucharunrecorder:tabStripRight}</code></td><td> Drawable used to draw the right part of the strip underneath the tabs.</td></tr>
           </table>
           @see #TabWidget_divider
           @see #TabWidget_tabLayout
           @see #TabWidget_tabStripEnabled
           @see #TabWidget_tabStripLeft
           @see #TabWidget_tabStripRight
         */
        public static final int[] TabWidget = {
            0x7f010206, 0x7f010238, 0x7f010239, 0x7f01023a,
            0x7f01023b
        };
        /**
          <p>
          @attr description
           Drawable used to draw the divider between tabs. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:divider
        */
        public static final int TabWidget_divider = 0;
        /**
          <p>
          @attr description
           Layout used to organize each tab's content. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tabLayout
        */
        public static final int TabWidget_tabLayout = 4;
        /**
          <p>
          @attr description
           Determines whether the strip under the tab indicators is drawn or not. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tabStripEnabled
        */
        public static final int TabWidget_tabStripEnabled = 1;
        /**
          <p>
          @attr description
           Drawable used to draw the left part of the strip underneath the tabs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tabStripLeft
        */
        public static final int TabWidget_tabStripLeft = 2;
        /**
          <p>
          @attr description
           Drawable used to draw the right part of the strip underneath the tabs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tabStripRight
        */
        public static final int TabWidget_tabStripRight = 3;
        /** Attributes that can be used with a TableLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TableLayout_collapseColumns app.guchagucharr.guchagucharunrecorder:collapseColumns}</code></td><td> The zero-based index of the columns to collapse.</td></tr>
           <tr><td><code>{@link #TableLayout_shrinkColumns app.guchagucharr.guchagucharunrecorder:shrinkColumns}</code></td><td> The zero-based index of the columns to shrink.</td></tr>
           <tr><td><code>{@link #TableLayout_stretchColumns app.guchagucharr.guchagucharunrecorder:stretchColumns}</code></td><td> The zero-based index of the columns to stretch.</td></tr>
           </table>
           @see #TableLayout_collapseColumns
           @see #TableLayout_shrinkColumns
           @see #TableLayout_stretchColumns
         */
        public static final int[] TableLayout = {
            0x7f010233, 0x7f010234, 0x7f010235
        };
        /**
          <p>
          @attr description
           The zero-based index of the columns to collapse. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:collapseColumns
        */
        public static final int TableLayout_collapseColumns = 2;
        /**
          <p>
          @attr description
           The zero-based index of the columns to shrink. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can shrink all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shrinkColumns
        */
        public static final int TableLayout_shrinkColumns = 1;
        /**
          <p>
          @attr description
           The zero-based index of the columns to stretch. The column indices
             must be separated by a comma: 1, 2, 5. Illegal and duplicate
             indices are ignored. You can stretch all columns by using the
             value "*" instead. Note that a column can be marked stretchable
             and shrinkable at the same time. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stretchColumns
        */
        public static final int TableLayout_stretchColumns = 0;
        /** Attributes that can be used with a TableRow.
         */
        public static final int[] TableRow = {
            
        };
        /** Attributes that can be used with a TableRow_Cell.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TableRow_Cell_layout_column app.guchagucharr.guchagucharunrecorder:layout_column}</code></td><td> The index of the column in which this child should be.</td></tr>
           <tr><td><code>{@link #TableRow_Cell_layout_span app.guchagucharr.guchagucharunrecorder:layout_span}</code></td><td> Defines how many columns this child should span.</td></tr>
           </table>
           @see #TableRow_Cell_layout_column
           @see #TableRow_Cell_layout_span
         */
        public static final int[] TableRow_Cell = {
            0x7f010236, 0x7f010237
        };
        /**
          <p>
          @attr description
           The index of the column in which this child should be. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_column
        */
        public static final int TableRow_Cell_layout_column = 0;
        /**
          <p>
          @attr description
           Defines how many columns this child should span.  Must be >= 1.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_span
        */
        public static final int TableRow_Cell_layout_span = 1;
        /** Attributes that can be used with a TextAppearance.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextAppearance_fontFamily app.guchagucharr.guchagucharunrecorder:fontFamily}</code></td><td> Font family (named by string) for the text.</td></tr>
           <tr><td><code>{@link #TextAppearance_textAllCaps app.guchagucharr.guchagucharunrecorder:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColor app.guchagucharr.guchagucharunrecorder:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColorHighlight app.guchagucharr.guchagucharunrecorder:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColorHint app.guchagucharr.guchagucharunrecorder:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #TextAppearance_textColorLink app.guchagucharr.guchagucharunrecorder:textColorLink}</code></td><td> Color of the links.</td></tr>
           <tr><td><code>{@link #TextAppearance_textSize app.guchagucharr.guchagucharunrecorder:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #TextAppearance_textStyle app.guchagucharr.guchagucharunrecorder:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #TextAppearance_typeface app.guchagucharr.guchagucharunrecorder:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #TextAppearance_fontFamily
           @see #TextAppearance_textAllCaps
           @see #TextAppearance_textColor
           @see #TextAppearance_textColorHighlight
           @see #TextAppearance_textColorHint
           @see #TextAppearance_textColorLink
           @see #TextAppearance_textSize
           @see #TextAppearance_textStyle
           @see #TextAppearance_typeface
         */
        public static final int[] TextAppearance = {
            0x7f010118, 0x7f010119, 0x7f01011a, 0x7f01011b,
            0x7f01011c, 0x7f01011d, 0x7f01011e, 0x7f01011f,
            0x7f01023c
        };
        /**
          <p>
          @attr description
           Font family (named by string) for the text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fontFamily
        */
        public static final int TextAppearance_fontFamily = 1;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAllCaps
        */
        public static final int TextAppearance_textAllCaps = 8;
        /**
          <p>
          @attr description
           Text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColor
        */
        public static final int TextAppearance_textColor = 4;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorHighlight
        */
        public static final int TextAppearance_textColorHighlight = 5;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorHint
        */
        public static final int TextAppearance_textColorHint = 6;
        /**
          <p>
          @attr description
           Color of the links. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorLink
        */
        public static final int TextAppearance_textColorLink = 7;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSize
        */
        public static final int TextAppearance_textSize = 0;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textStyle
        */
        public static final int TextAppearance_textStyle = 3;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:typeface
        */
        public static final int TextAppearance_typeface = 2;
        /** Attributes that can be used with a TextClock.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextClock_format12Hour app.guchagucharr.guchagucharunrecorder:format12Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode.</td></tr>
           <tr><td><code>{@link #TextClock_format24Hour app.guchagucharr.guchagucharunrecorder:format24Hour}</code></td><td> Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode.</td></tr>
           <tr><td><code>{@link #TextClock_timeZone app.guchagucharr.guchagucharunrecorder:timeZone}</code></td><td> Specifies the time zone to use.</td></tr>
           </table>
           @see #TextClock_format12Hour
           @see #TextClock_format24Hour
           @see #TextClock_timeZone
         */
        public static final int[] TextClock = {
            0x7f01023d, 0x7f01023e, 0x7f01023f
        };
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 12-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "h:mm aa". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:format12Hour
        */
        public static final int TextClock_format12Hour = 0;
        /**
          <p>
          @attr description
           Specifies the formatting pattern used to show the time and/or date
             in 24-hour mode. Please refer to {@link android.text.format.DateFormat}
             for a complete description of accepted formatting patterns.
             The default pattern is "k:mm". 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:format24Hour
        */
        public static final int TextClock_format24Hour = 1;
        /**
          <p>
          @attr description
           Specifies the time zone to use. When this attribute is specified, the
             TextClock will ignore the time zone of the system. To use the user's
             time zone, do not specify this attribute. The default value is the
             user's time zone. Please refer to {@link java.util.TimeZone} for more
             information about time zone ids. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:timeZone
        */
        public static final int TextClock_timeZone = 2;
        /** Attributes that can be used with a TextSwitcher.
         */
        public static final int[] TextSwitcher = {
            
        };
        /**  Use <code>tts-engine</code> as the root tag of the XML resource that
         describes a text to speech engine implemented as a subclass of
         {@link android.speech.tts.TextToSpeechService}.

         The XML resource must be referenced from its
         {@link android.speech.tts.TextToSpeech.Engine#SERVICE_META_DATA} meta-data
         entry. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextToSpeechEngine_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           </table>
           @see #TextToSpeechEngine_settingsActivity
         */
        public static final int[] TextToSpeechEngine = {
            0x7f0101b9
        };
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int TextToSpeechEngine_settingsActivity = 0;
        /** Attributes that can be used with a TextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextView_autoLink app.guchagucharr.guchagucharunrecorder:autoLink}</code></td><td> Controls whether links such as urls and email addresses are
         automatically found and converted to clickable links.</td></tr>
           <tr><td><code>{@link #TextView_autoText app.guchagucharr.guchagucharunrecorder:autoText}</code></td><td> If set, specifies that this TextView has a textual input method
             and automatically corrects some common spelling errors.</td></tr>
           <tr><td><code>{@link #TextView_bufferType app.guchagucharr.guchagucharunrecorder:bufferType}</code></td><td> Determines the minimum type that getText() will return.</td></tr>
           <tr><td><code>{@link #TextView_capitalize app.guchagucharr.guchagucharunrecorder:capitalize}</code></td><td> If set, specifies that this TextView has a textual input method
             and should automatically capitalize what the user types.</td></tr>
           <tr><td><code>{@link #TextView_cursorVisible app.guchagucharr.guchagucharunrecorder:cursorVisible}</code></td><td> Makes the cursor visible (the default) or invisible.</td></tr>
           <tr><td><code>{@link #TextView_digits app.guchagucharr.guchagucharunrecorder:digits}</code></td><td> If set, specifies that this TextView has a numeric input method
             and that these specific characters are the ones that it will
             accept.</td></tr>
           <tr><td><code>{@link #TextView_drawableBottom app.guchagucharr.guchagucharunrecorder:drawableBottom}</code></td><td> The drawable to be drawn below the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableEnd app.guchagucharr.guchagucharunrecorder:drawableEnd}</code></td><td> The drawable to be drawn to the end of the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableLeft app.guchagucharr.guchagucharunrecorder:drawableLeft}</code></td><td> The drawable to be drawn to the left of the text.</td></tr>
           <tr><td><code>{@link #TextView_drawablePadding app.guchagucharr.guchagucharunrecorder:drawablePadding}</code></td><td> The padding between the drawables and the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableRight app.guchagucharr.guchagucharunrecorder:drawableRight}</code></td><td> The drawable to be drawn to the right of the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableStart app.guchagucharr.guchagucharunrecorder:drawableStart}</code></td><td> The drawable to be drawn to the start of the text.</td></tr>
           <tr><td><code>{@link #TextView_drawableTop app.guchagucharr.guchagucharunrecorder:drawableTop}</code></td><td> The drawable to be drawn above the text.</td></tr>
           <tr><td><code>{@link #TextView_editable app.guchagucharr.guchagucharunrecorder:editable}</code></td><td> If set, specifies that this TextView has an input method.</td></tr>
           <tr><td><code>{@link #TextView_editorExtras app.guchagucharr.guchagucharunrecorder:editorExtras}</code></td><td> Reference to an
             {@link android.R.styleable#InputExtras &lt;input-extras&gt;}
             XML resource containing additional data to
             supply to an input method, which is private to the implementation
             of the input method.</td></tr>
           <tr><td><code>{@link #TextView_ellipsize app.guchagucharr.guchagucharunrecorder:ellipsize}</code></td><td> If set, causes words that are longer than the view is wide
             to be ellipsized instead of broken in the middle.</td></tr>
           <tr><td><code>{@link #TextView_ems app.guchagucharr.guchagucharunrecorder:ems}</code></td><td> Makes the TextView be exactly this many ems wide.</td></tr>
           <tr><td><code>{@link #TextView_enabled app.guchagucharr.guchagucharunrecorder:enabled}</code></td><td> Specifies whether the widget is enabled.</td></tr>
           <tr><td><code>{@link #TextView_fontFamily app.guchagucharr.guchagucharunrecorder:fontFamily}</code></td><td> Font family (named by string) for the text.</td></tr>
           <tr><td><code>{@link #TextView_freezesText app.guchagucharr.guchagucharunrecorder:freezesText}</code></td><td> If set, the text view will include its current complete text
             inside of its frozen icicle in addition to meta-data such as
             the current cursor position.</td></tr>
           <tr><td><code>{@link #TextView_gravity app.guchagucharr.guchagucharunrecorder:gravity}</code></td><td> Specifies how to align the text by the view's x- and/or y-axis
             when the text is smaller than the view.</td></tr>
           <tr><td><code>{@link #TextView_height app.guchagucharr.guchagucharunrecorder:height}</code></td><td> Makes the TextView be exactly this many pixels tall.</td></tr>
           <tr><td><code>{@link #TextView_hint app.guchagucharr.guchagucharunrecorder:hint}</code></td><td> Hint text to display when the text is empty.</td></tr>
           <tr><td><code>{@link #TextView_imeActionId app.guchagucharr.guchagucharunrecorder:imeActionId}</code></td><td> Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #TextView_imeActionLabel app.guchagucharr.guchagucharunrecorder:imeActionLabel}</code></td><td> Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view.</td></tr>
           <tr><td><code>{@link #TextView_imeOptions app.guchagucharr.guchagucharunrecorder:imeOptions}</code></td><td> Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.</td></tr>
           <tr><td><code>{@link #TextView_includeFontPadding app.guchagucharr.guchagucharunrecorder:includeFontPadding}</code></td><td> Leave enough room for ascenders and descenders instead of
             using the font ascent and descent strictly.</td></tr>
           <tr><td><code>{@link #TextView_inputMethod app.guchagucharr.guchagucharunrecorder:inputMethod}</code></td><td> If set, specifies that this TextView should use the specified
             input method (specified by fully-qualified class name).</td></tr>
           <tr><td><code>{@link #TextView_inputType app.guchagucharr.guchagucharunrecorder:inputType}</code></td><td> The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.</td></tr>
           <tr><td><code>{@link #TextView_lineSpacingExtra app.guchagucharr.guchagucharunrecorder:lineSpacingExtra}</code></td><td> Extra spacing between lines of text.</td></tr>
           <tr><td><code>{@link #TextView_lineSpacingMultiplier app.guchagucharr.guchagucharunrecorder:lineSpacingMultiplier}</code></td><td> Extra spacing between lines of text, as a multiplier.</td></tr>
           <tr><td><code>{@link #TextView_lines app.guchagucharr.guchagucharunrecorder:lines}</code></td><td> Makes the TextView be exactly this many lines tall.</td></tr>
           <tr><td><code>{@link #TextView_linksClickable app.guchagucharr.guchagucharunrecorder:linksClickable}</code></td><td> If set to false, keeps the movement method from being set
             to the link movement method even if autoLink causes links
             to be found.</td></tr>
           <tr><td><code>{@link #TextView_marqueeRepeatLimit app.guchagucharr.guchagucharunrecorder:marqueeRepeatLimit}</code></td><td> The number of times to repeat the marquee animation.</td></tr>
           <tr><td><code>{@link #TextView_maxEms app.guchagucharr.guchagucharunrecorder:maxEms}</code></td><td> Makes the TextView be at most this many ems wide.</td></tr>
           <tr><td><code>{@link #TextView_maxHeight app.guchagucharr.guchagucharunrecorder:maxHeight}</code></td><td> Makes the TextView be at most this many pixels tall.</td></tr>
           <tr><td><code>{@link #TextView_maxLength app.guchagucharr.guchagucharunrecorder:maxLength}</code></td><td> Set an input filter to constrain the text length to the
             specified number.</td></tr>
           <tr><td><code>{@link #TextView_maxLines app.guchagucharr.guchagucharunrecorder:maxLines}</code></td><td> Makes the TextView be at most this many lines tall.</td></tr>
           <tr><td><code>{@link #TextView_maxWidth app.guchagucharr.guchagucharunrecorder:maxWidth}</code></td><td> Makes the TextView be at most this many pixels wide.</td></tr>
           <tr><td><code>{@link #TextView_minEms app.guchagucharr.guchagucharunrecorder:minEms}</code></td><td> Makes the TextView be at least this many ems wide.</td></tr>
           <tr><td><code>{@link #TextView_minHeight app.guchagucharr.guchagucharunrecorder:minHeight}</code></td><td> Makes the TextView be at least this many pixels tall.</td></tr>
           <tr><td><code>{@link #TextView_minLines app.guchagucharr.guchagucharunrecorder:minLines}</code></td><td> Makes the TextView be at least this many lines tall.</td></tr>
           <tr><td><code>{@link #TextView_minWidth app.guchagucharr.guchagucharunrecorder:minWidth}</code></td><td> Makes the TextView be at least this many pixels wide.</td></tr>
           <tr><td><code>{@link #TextView_numeric app.guchagucharr.guchagucharunrecorder:numeric}</code></td><td> If set, specifies that this TextView has a numeric input method.</td></tr>
           <tr><td><code>{@link #TextView_password app.guchagucharr.guchagucharunrecorder:password}</code></td><td> Whether the characters of the field are displayed as
             password dots instead of themselves.</td></tr>
           <tr><td><code>{@link #TextView_phoneNumber app.guchagucharr.guchagucharunrecorder:phoneNumber}</code></td><td> If set, specifies that this TextView has a phone number input
             method.</td></tr>
           <tr><td><code>{@link #TextView_privateImeOptions app.guchagucharr.guchagucharunrecorder:privateImeOptions}</code></td><td> An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.</td></tr>
           <tr><td><code>{@link #TextView_scrollHorizontally app.guchagucharr.guchagucharunrecorder:scrollHorizontally}</code></td><td> Whether the text is allowed to be wider than the view (and
             therefore can be scrolled horizontally).</td></tr>
           <tr><td><code>{@link #TextView_selectAllOnFocus app.guchagucharr.guchagucharunrecorder:selectAllOnFocus}</code></td><td> If the text is selectable, select it all when the view takes
             focus.</td></tr>
           <tr><td><code>{@link #TextView_shadowColor app.guchagucharr.guchagucharunrecorder:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #TextView_shadowDx app.guchagucharr.guchagucharunrecorder:shadowDx}</code></td><td> Horizontal offset of the shadow.</td></tr>
           <tr><td><code>{@link #TextView_shadowDy app.guchagucharr.guchagucharunrecorder:shadowDy}</code></td><td> Vertical offset of the shadow.</td></tr>
           <tr><td><code>{@link #TextView_shadowRadius app.guchagucharr.guchagucharunrecorder:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #TextView_singleLine app.guchagucharr.guchagucharunrecorder:singleLine}</code></td><td> Constrains the text to a single horizontally scrolling line
             instead of letting it wrap onto multiple lines, and advances
             focus instead of inserting a newline when you press the
             enter key.</td></tr>
           <tr><td><code>{@link #TextView_text app.guchagucharr.guchagucharunrecorder:text}</code></td><td> Text to display.</td></tr>
           <tr><td><code>{@link #TextView_textAllCaps app.guchagucharr.guchagucharunrecorder:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           <tr><td><code>{@link #TextView_textAppearance app.guchagucharr.guchagucharunrecorder:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #TextView_textColor app.guchagucharr.guchagucharunrecorder:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #TextView_textColorHighlight app.guchagucharr.guchagucharunrecorder:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #TextView_textColorHint app.guchagucharr.guchagucharunrecorder:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #TextView_textColorLink app.guchagucharr.guchagucharunrecorder:textColorLink}</code></td><td> Text color for links.</td></tr>
           <tr><td><code>{@link #TextView_textCursorDrawable app.guchagucharr.guchagucharunrecorder:textCursorDrawable}</code></td><td> Reference to a drawable that will be drawn under the insertion cursor.</td></tr>
           <tr><td><code>{@link #TextView_textEditNoPasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditNoPasteWindowLayout}</code></td><td> Variation of textEditPasteWindowLayout displayed when the clipboard is empty.</td></tr>
           <tr><td><code>{@link #TextView_textEditPasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditPasteWindowLayout}</code></td><td> The layout of the view that is displayed on top of the cursor to paste inside a
             TextEdit field.</td></tr>
           <tr><td><code>{@link #TextView_textEditSideNoPasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditSideNoPasteWindowLayout}</code></td><td> Variation of textEditSidePasteWindowLayout displayed when the clipboard is empty.</td></tr>
           <tr><td><code>{@link #TextView_textEditSidePasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditSidePasteWindowLayout}</code></td><td> Used instead of textEditPasteWindowLayout when the window is moved on the side of the
             insertion cursor because it would be clipped if it were positioned on top.</td></tr>
           <tr><td><code>{@link #TextView_textEditSuggestionItemLayout app.guchagucharr.guchagucharunrecorder:textEditSuggestionItemLayout}</code></td><td> Layout of the TextView item that will populate the suggestion popup window.</td></tr>
           <tr><td><code>{@link #TextView_textIsSelectable app.guchagucharr.guchagucharunrecorder:textIsSelectable}</code></td><td> Indicates that the content of a non-editable text can be selected.</td></tr>
           <tr><td><code>{@link #TextView_textScaleX app.guchagucharr.guchagucharunrecorder:textScaleX}</code></td><td> Sets the horizontal scaling factor for the text.</td></tr>
           <tr><td><code>{@link #TextView_textSelectHandle app.guchagucharr.guchagucharunrecorder:textSelectHandle}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text.</td></tr>
           <tr><td><code>{@link #TextView_textSelectHandleLeft app.guchagucharr.guchagucharunrecorder:textSelectHandleLeft}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region.</td></tr>
           <tr><td><code>{@link #TextView_textSelectHandleRight app.guchagucharr.guchagucharunrecorder:textSelectHandleRight}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region.</td></tr>
           <tr><td><code>{@link #TextView_textSize app.guchagucharr.guchagucharunrecorder:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #TextView_textStyle app.guchagucharr.guchagucharunrecorder:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #TextView_typeface app.guchagucharr.guchagucharunrecorder:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           <tr><td><code>{@link #TextView_width app.guchagucharr.guchagucharunrecorder:width}</code></td><td> Makes the TextView be exactly this many pixels wide.</td></tr>
           </table>
           @see #TextView_autoLink
           @see #TextView_autoText
           @see #TextView_bufferType
           @see #TextView_capitalize
           @see #TextView_cursorVisible
           @see #TextView_digits
           @see #TextView_drawableBottom
           @see #TextView_drawableEnd
           @see #TextView_drawableLeft
           @see #TextView_drawablePadding
           @see #TextView_drawableRight
           @see #TextView_drawableStart
           @see #TextView_drawableTop
           @see #TextView_editable
           @see #TextView_editorExtras
           @see #TextView_ellipsize
           @see #TextView_ems
           @see #TextView_enabled
           @see #TextView_fontFamily
           @see #TextView_freezesText
           @see #TextView_gravity
           @see #TextView_height
           @see #TextView_hint
           @see #TextView_imeActionId
           @see #TextView_imeActionLabel
           @see #TextView_imeOptions
           @see #TextView_includeFontPadding
           @see #TextView_inputMethod
           @see #TextView_inputType
           @see #TextView_lineSpacingExtra
           @see #TextView_lineSpacingMultiplier
           @see #TextView_lines
           @see #TextView_linksClickable
           @see #TextView_marqueeRepeatLimit
           @see #TextView_maxEms
           @see #TextView_maxHeight
           @see #TextView_maxLength
           @see #TextView_maxLines
           @see #TextView_maxWidth
           @see #TextView_minEms
           @see #TextView_minHeight
           @see #TextView_minLines
           @see #TextView_minWidth
           @see #TextView_numeric
           @see #TextView_password
           @see #TextView_phoneNumber
           @see #TextView_privateImeOptions
           @see #TextView_scrollHorizontally
           @see #TextView_selectAllOnFocus
           @see #TextView_shadowColor
           @see #TextView_shadowDx
           @see #TextView_shadowDy
           @see #TextView_shadowRadius
           @see #TextView_singleLine
           @see #TextView_text
           @see #TextView_textAllCaps
           @see #TextView_textAppearance
           @see #TextView_textColor
           @see #TextView_textColorHighlight
           @see #TextView_textColorHint
           @see #TextView_textColorLink
           @see #TextView_textCursorDrawable
           @see #TextView_textEditNoPasteWindowLayout
           @see #TextView_textEditPasteWindowLayout
           @see #TextView_textEditSideNoPasteWindowLayout
           @see #TextView_textEditSidePasteWindowLayout
           @see #TextView_textEditSuggestionItemLayout
           @see #TextView_textIsSelectable
           @see #TextView_textScaleX
           @see #TextView_textSelectHandle
           @see #TextView_textSelectHandleLeft
           @see #TextView_textSelectHandleRight
           @see #TextView_textSize
           @see #TextView_textStyle
           @see #TextView_typeface
           @see #TextView_width
         */
        public static final int[] TextView = {
            0x7f01001f, 0x7f0100f1, 0x7f0100f2, 0x7f0100f3,
            0x7f0100f4, 0x7f0100f5, 0x7f0100f6, 0x7f0100f7,
            0x7f0100f8, 0x7f010118, 0x7f010119, 0x7f01011a,
            0x7f01011b, 0x7f01011c, 0x7f01011d, 0x7f01011e,
            0x7f01011f, 0x7f010120, 0x7f010121, 0x7f010122,
            0x7f010123, 0x7f010124, 0x7f010127, 0x7f010128,
            0x7f0101f1, 0x7f0101f2, 0x7f010226, 0x7f010227,
            0x7f01023c, 0x7f010240, 0x7f010241, 0x7f010242,
            0x7f010243, 0x7f010244, 0x7f010245, 0x7f010246,
            0x7f010247, 0x7f010248, 0x7f010249, 0x7f01024a,
            0x7f01024b, 0x7f01024c, 0x7f01024d, 0x7f01024e,
            0x7f01024f, 0x7f010250, 0x7f010251, 0x7f010252,
            0x7f010253, 0x7f010254, 0x7f010255, 0x7f010256,
            0x7f010257, 0x7f010258, 0x7f010259, 0x7f01025a,
            0x7f01025b, 0x7f01025c, 0x7f01025d, 0x7f01025e,
            0x7f01025f, 0x7f010260, 0x7f010261, 0x7f010262,
            0x7f010263, 0x7f010264, 0x7f010265, 0x7f010266,
            0x7f010267, 0x7f010268, 0x7f010269, 0x7f01026a,
            0x7f01026b, 0x7f01026c, 0x7f01026d, 0x7f01026e
        };
        /**
          <p>
          @attr description
           Controls whether links such as urls and email addresses are
         automatically found and converted to clickable links.  The default
         value is "none", disabling this feature. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00</td><td> Match no patterns (default). </td></tr>
<tr><td><code>web</code></td><td>0x01</td><td> Match Web URLs. </td></tr>
<tr><td><code>email</code></td><td>0x02</td><td> Match email addresses. </td></tr>
<tr><td><code>phone</code></td><td>0x04</td><td> Match phone numbers. </td></tr>
<tr><td><code>map</code></td><td>0x08</td><td> Match map addresses. </td></tr>
<tr><td><code>all</code></td><td>0x0f</td><td> Match all patterns (equivalent to web|email|phone|map). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoLink
        */
        public static final int TextView_autoLink = 23;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a textual input method
             and automatically corrects some common spelling errors.
             The default is "false".
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoText
        */
        @Deprecated
        public static final int TextView_autoText = 59;
        /**
          <p>
          @attr description
           Determines the minimum type that getText() will return.
             The default is "normal".
             Note that EditText and LogTextBox always return Editable,
             even if you specify something less powerful here. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Can return any CharSequence, possibly a
             Spanned one if the source text was Spanned. </td></tr>
<tr><td><code>spannable</code></td><td>1</td><td> Can only return Spannable. </td></tr>
<tr><td><code>editable</code></td><td>2</td><td> Can only return Spannable and Editable. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:bufferType
        */
        public static final int TextView_bufferType = 29;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a textual input method
             and should automatically capitalize what the user types.
             The default is "none".
             {@deprecated Use inputType instead.} 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't automatically capitalize anything. </td></tr>
<tr><td><code>sentences</code></td><td>1</td><td> Capitalize the first word of each sentence. </td></tr>
<tr><td><code>words</code></td><td>2</td><td> Capitalize the first letter of every word. </td></tr>
<tr><td><code>characters</code></td><td>3</td><td> Capitalize every character. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:capitalize
        */
        @Deprecated
        public static final int TextView_capitalize = 58;
        /**
          <p>
          @attr description
           Makes the cursor visible (the default) or invisible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:cursorVisible
        */
        public static final int TextView_cursorVisible = 33;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a numeric input method
             and that these specific characters are the ones that it will
             accept.
             If this is set, numeric is implied to be true.
             The default is false. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:digits
        */
        public static final int TextView_digits = 55;
        /**
          <p>
          @attr description
           The drawable to be drawn below the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableBottom
        */
        public static final int TextView_drawableBottom = 63;
        /**
          <p>
          @attr description
           The drawable to be drawn to the end of the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableEnd
        */
        public static final int TextView_drawableEnd = 67;
        /**
          <p>
          @attr description
           The drawable to be drawn to the left of the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableLeft
        */
        public static final int TextView_drawableLeft = 64;
        /**
          <p>
          @attr description
           The padding between the drawables and the text. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawablePadding
        */
        public static final int TextView_drawablePadding = 68;
        /**
          <p>
          @attr description
           The drawable to be drawn to the right of the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableRight
        */
        public static final int TextView_drawableRight = 65;
        /**
          <p>
          @attr description
           The drawable to be drawn to the start of the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableStart
        */
        public static final int TextView_drawableStart = 66;
        /**
          <p>
          @attr description
           The drawable to be drawn above the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawableTop
        */
        public static final int TextView_drawableTop = 62;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has an input method.
             It will be a textual one unless it has otherwise been specified.
             For TextView, this is false by default.  For EditText, it is
             true by default.
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:editable
        */
        @Deprecated
        public static final int TextView_editable = 60;
        /**
          <p>
          @attr description
           Reference to an
             {@link android.R.styleable#InputExtras &lt;input-extras&gt;}
             XML resource containing additional data to
             supply to an input method, which is private to the implementation
             of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#extras
             EditorInfo.extras} field when the input
             method is connected. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:editorExtras
        */
        public static final int TextView_editorExtras = 75;
        /**
          <p>
          @attr description
           If set, causes words that are longer than the view is wide
             to be ellipsized instead of broken in the middle.
             You will often also want to set scrollHorizontally or singleLine
             as well so that the text as a whole is also constrained to
             a single line instead of still allowed to be broken onto
             multiple lines. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>start</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>3</td><td></td></tr>
<tr><td><code>marquee</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ellipsize
        */
        public static final int TextView_ellipsize = 19;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many ems wide. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ems
        */
        public static final int TextView_ems = 39;
        /**
          <p>
          @attr description
           Specifies whether the widget is enabled. The interpretation of the enabled state varies by subclass.
             For example, a non-enabled EditText prevents the user from editing the contained text, and
             a non-enabled Button prevents the user from tapping the button.
             The appearance of enabled and non-enabled widgets may differ, if the drawables referenced
             from evaluating state_enabled differ. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:enabled
        */
        public static final int TextView_enabled = 45;
        /**
          <p>
          @attr description
           Font family (named by string) for the text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fontFamily
        */
        public static final int TextView_fontFamily = 10;
        /**
          <p>
          @attr description
           If set, the text view will include its current complete text
             inside of its frozen icicle in addition to meta-data such as
             the current cursor position.  By default this is disabled;
             it can be useful when the contents of a text view is not stored
             in a persistent place such as a content provider. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:freezesText
        */
        public static final int TextView_freezesText = 61;
        /**
          <p>
          @attr description
           Specifies how to align the text by the view's x- and/or y-axis
             when the text is smaller than the view. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gravity
        */
        public static final int TextView_gravity = 22;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels tall.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:height
        */
        public static final int TextView_height = 36;
        /**
          <p>
          @attr description
           Hint text to display when the text is empty. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hint
        */
        public static final int TextView_hint = 31;
        /**
          <p>
          @attr description
           Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionId EditorInfo.actionId}
             used when an input method is connected to the text view. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeActionId
        */
        public static final int TextView_imeActionId = 74;
        /**
          <p>
          @attr description
           Supply a value for
             {@link android.view.inputmethod.EditorInfo#actionLabel EditorInfo.actionLabel}
             used when an input method is connected to the text view. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeActionLabel
        */
        public static final int TextView_imeActionLabel = 73;
        /**
          <p>
          @attr description
           Additional features you can enable in an IME associated with an editor
         to improve the integration with your application.  The constants
         here correspond to those defined by
         {@link android.view.inputmethod.EditorInfo#imeOptions}. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0x00000000</td><td> There are no special semantics associated with this editor. </td></tr>
<tr><td><code>actionUnspecified</code></td><td>0x00000000</td><td> There is no specific action associated with this editor, let the
             editor come up with its own if it can.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_NULL}. </td></tr>
<tr><td><code>actionNone</code></td><td>0x00000001</td><td> This editor has no action associated with it.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NONE}. </td></tr>
<tr><td><code>actionGo</code></td><td>0x00000002</td><td> The action key performs a "go"
             operation to take the user to the target of the text they typed.
             Typically used, for example, when entering a URL.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_GO}. </td></tr>
<tr><td><code>actionSearch</code></td><td>0x00000003</td><td> The action key performs a "search"
             operation, taking the user to the results of searching for the text
             the have typed (in whatever context is appropriate).
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEARCH}. </td></tr>
<tr><td><code>actionSend</code></td><td>0x00000004</td><td> The action key performs a "send"
             operation, delivering the text to its target.  This is typically used
             when composing a message.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_SEND}. </td></tr>
<tr><td><code>actionNext</code></td><td>0x00000005</td><td> The action key performs a "next"
             operation, taking the user to the next field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_NEXT}. </td></tr>
<tr><td><code>actionDone</code></td><td>0x00000006</td><td> The action key performs a "done"
             operation, closing the soft input method.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_DONE}. </td></tr>
<tr><td><code>actionPrevious</code></td><td>0x00000007</td><td> The action key performs a "previous"
             operation, taking the user to the previous field that will accept text.
             Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_ACTION_PREVIOUS}. </td></tr>
<tr><td><code>flagNoFullscreen</code></td><td>0x2000000</td><td> Used to request that the IME never go
             into fullscreen mode.  Applications need to be aware that the flag is not
             a guarantee, and not all IMEs will respect it.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigatePrevious</code></td><td>0x4000000</td><td> Like flagNavigateNext, but
             specifies there is something interesting that a backward navigation
             can focus on.  If the user selects the IME's facility to backward
             navigate, this will show up in the application as an actionPrevious
             at {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_FULLSCREEN}. </td></tr>
<tr><td><code>flagNavigateNext</code></td><td>0x8000000</td><td> Used to specify that there is something
             interesting that a forward navigation can focus on. This is like using
             actionNext, except allows the IME to be multiline (with
             an enter key) as well as provide forward navigation.  Note that some
             IMEs may not be able to do this, especially when running on a small
             screen where there is little space.  In that case it does not need to
             present a UI for this option.  Like actionNext, if the
             user selects the IME's facility to forward navigate, this will show up
             in the application at
             {@link android.view.inputmethod.InputConnection#performEditorAction(int)
             InputConnection.performEditorAction(int)}.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NAVIGATE_NEXT}. </td></tr>
<tr><td><code>flagNoExtractUi</code></td><td>0x10000000</td><td> Used to specify that the IME does not need
             to show its extracted text UI.  For input methods that may be fullscreen,
             often when in landscape mode, this allows them to be smaller and let part
             of the application be shown behind.  Though there will likely be limited
             access to the application available from the user, it can make the
             experience of a (mostly) fullscreen IME less jarring.  Note that when
             this flag is specified the IME may <em>not</em> be set up to be able
             to display text, so it should only be used in situations where this is
             not needed.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_EXTRACT_UI}. </td></tr>
<tr><td><code>flagNoAccessoryAction</code></td><td>0x20000000</td><td> Used in conjunction with a custom action, this indicates that the
             action should not be available as an accessory button when the
             input method is full-screen.
             Note that by setting this flag, there can be cases where the action
             is simply never available to the user.  Setting this generally means
             that you think showing text being edited is more important than the
             action you have supplied.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ACCESSORY_ACTION}. </td></tr>
<tr><td><code>flagNoEnterAction</code></td><td>0x40000000</td><td> Used in conjunction with a custom action,
             this indicates that the action should not be available in-line as
             a replacement for the "enter" key.  Typically this is
             because the action has such a significant impact or is not recoverable
             enough that accidentally hitting it should be avoided, such as sending
             a message.    Note that {@link android.widget.TextView} will
             automatically set this flag for you on multi-line text views.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_NO_ENTER_ACTION}. </td></tr>
<tr><td><code>flagForceAscii</code></td><td>0x80000000</td><td> Used to request that the IME should be capable of inputting ASCII
             characters.  The intention of this flag is to ensure that the user
             can type Roman alphabet characters in a {@link android.widget.TextView}
             used for, typically, account ID or password input.  It is expected that IMEs
             normally are able to input ASCII even without being told so (such IMEs
             already respect this flag in a sense), but there could be some cases they
             aren't when, for instance, only non-ASCII input languagaes like Arabic,
             Greek, Hebrew, Russian are enabled in the IME.  Applications need to be
             aware that the flag is not a guarantee, and not all IMEs will respect it.
             However, it is strongly recommended for IME authors to respect this flag
             especially when their IME could end up with a state that has only non-ASCII
             input languages enabled.
             <p>Corresponds to
             {@link android.view.inputmethod.EditorInfo#IME_FLAG_FORCE_ASCII}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imeOptions
        */
        public static final int TextView_imeOptions = 21;
        /**
          <p>
          @attr description
           Leave enough room for ascenders and descenders instead of
             using the font ascent and descent strictly.  (Normally true). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:includeFontPadding
        */
        public static final int TextView_includeFontPadding = 47;
        /**
          <p>
          @attr description
           If set, specifies that this TextView should use the specified
             input method (specified by fully-qualified class name).
             {@deprecated Use inputType instead.} 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inputMethod
        */
        @Deprecated
        public static final int TextView_inputMethod = 57;
        /**
          <p>
          @attr description
           The type of data being placed in a text field, used to help an
         input method decide how to let the user enter text.  The constants
         here correspond to those defined by
         {@link android.text.InputType}.  Generally you can select
         a single value, though some can be combined together as
         indicated.  Setting this attribute to anything besides
         <var>none</var> also implies that the text is editable. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> There is no content type.  The text is not editable. </td></tr>
<tr><td><code>text</code></td><td>0x00000001</td><td> Just plain old text.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL}. </td></tr>
<tr><td><code>textCapCharacters</code></td><td>0x00001001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of all characters.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_CHARACTERS}. </td></tr>
<tr><td><code>textCapWords</code></td><td>0x00002001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every word.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_WORDS}. </td></tr>
<tr><td><code>textCapSentences</code></td><td>0x00004001</td><td> Can be combined with <var>text</var> and its variations to
             request capitalization of the first character of every sentence.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_CAP_SENTENCES}. </td></tr>
<tr><td><code>textAutoCorrect</code></td><td>0x00008001</td><td> Can be combined with <var>text</var> and its variations to
             request auto-correction of text being input.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_CORRECT}. </td></tr>
<tr><td><code>textAutoComplete</code></td><td>0x00010001</td><td> Can be combined with <var>text</var> and its variations to
             specify that this field will be doing its own auto-completion and
             talking with the input method appropriately.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_AUTO_COMPLETE}. </td></tr>
<tr><td><code>textMultiLine</code></td><td>0x00020001</td><td> Can be combined with <var>text</var> and its variations to
             allow multiple lines of text in the field.  If this flag is not set,
             the text field will be constrained to a single line.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_MULTI_LINE}. </td></tr>
<tr><td><code>textImeMultiLine</code></td><td>0x00040001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that though the regular text view should not be multiple
             lines, the IME should provide multiple lines if it can.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_IME_MULTI_LINE}. </td></tr>
<tr><td><code>textNoSuggestions</code></td><td>0x00080001</td><td> Can be combined with <var>text</var> and its variations to
             indicate that the IME should not show any
             dictionary-based word suggestions.  Corresponds to
             {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS}. </td></tr>
<tr><td><code>textUri</code></td><td>0x00000011</td><td> Text that will be used as a URI.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_URI}. </td></tr>
<tr><td><code>textEmailAddress</code></td><td>0x00000021</td><td> Text that will be used as an e-mail address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textEmailSubject</code></td><td>0x00000031</td><td> Text that is being supplied as the subject of an e-mail.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT}. </td></tr>
<tr><td><code>textShortMessage</code></td><td>0x00000041</td><td> Text that is the content of a short message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE}. </td></tr>
<tr><td><code>textLongMessage</code></td><td>0x00000051</td><td> Text that is the content of a long message.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE}. </td></tr>
<tr><td><code>textPersonName</code></td><td>0x00000061</td><td> Text that is the name of a person.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PERSON_NAME}. </td></tr>
<tr><td><code>textPostalAddress</code></td><td>0x00000071</td><td> Text that is being supplied as a postal mailing address.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_POSTAL_ADDRESS}. </td></tr>
<tr><td><code>textPassword</code></td><td>0x00000081</td><td> Text that is a password.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>textVisiblePassword</code></td><td>0x00000091</td><td> Text that is a password that should be visible.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_VISIBLE_PASSWORD}. </td></tr>
<tr><td><code>textWebEditText</code></td><td>0x000000a1</td><td> Text that is being supplied as text in a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}. </td></tr>
<tr><td><code>textFilter</code></td><td>0x000000b1</td><td> Text that is filtering some other data.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_FILTER}. </td></tr>
<tr><td><code>textPhonetic</code></td><td>0x000000c1</td><td> Text that is for phonetic pronunciation, such as a phonetic name
             field in a contact entry.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_PHONETIC}. </td></tr>
<tr><td><code>textWebEmailAddress</code></td><td>0x000000d1</td><td> Text that will be used as an e-mail address on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS}. </td></tr>
<tr><td><code>textWebPassword</code></td><td>0x000000e1</td><td> Text that will be used as a password on a web form.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_TEXT} |
             {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_PASSWORD}. </td></tr>
<tr><td><code>number</code></td><td>0x00000002</td><td> A numeric only field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_NORMAL}. </td></tr>
<tr><td><code>numberSigned</code></td><td>0x00001002</td><td> Can be combined with <var>number</var> and its other options to
             allow a signed number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_SIGNED}. </td></tr>
<tr><td><code>numberDecimal</code></td><td>0x00002002</td><td> Can be combined with <var>number</var> and its other options to
             allow a decimal (fractional) number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_FLAG_DECIMAL}. </td></tr>
<tr><td><code>numberPassword</code></td><td>0x00000012</td><td> A numeric password field.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_NUMBER} |
             {@link android.text.InputType#TYPE_NUMBER_VARIATION_PASSWORD}. </td></tr>
<tr><td><code>phone</code></td><td>0x00000003</td><td> For entering a phone number.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_PHONE}. </td></tr>
<tr><td><code>datetime</code></td><td>0x00000004</td><td> For entering a date and time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_NORMAL}. </td></tr>
<tr><td><code>date</code></td><td>0x00000014</td><td> For entering a date.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_DATE}. </td></tr>
<tr><td><code>time</code></td><td>0x00000024</td><td> For entering a time.  Corresponds to
             {@link android.text.InputType#TYPE_CLASS_DATETIME} |
             {@link android.text.InputType#TYPE_DATETIME_VARIATION_TIME}. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inputType
        */
        public static final int TextView_inputType = 20;
        /**
          <p>
          @attr description
           Extra spacing between lines of text. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:lineSpacingExtra
        */
        public static final int TextView_lineSpacingExtra = 69;
        /**
          <p>
          @attr description
           Extra spacing between lines of text, as a multiplier. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:lineSpacingMultiplier
        */
        public static final int TextView_lineSpacingMultiplier = 70;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many lines tall. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:lines
        */
        public static final int TextView_lines = 35;
        /**
          <p>
          @attr description
           If set to false, keeps the movement method from being set
             to the link movement method even if autoLink causes links
             to be found. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:linksClickable
        */
        public static final int TextView_linksClickable = 53;
        /**
          <p>
          @attr description
           The number of times to repeat the marquee animation. Only applied if the
             TextView has marquee enabled. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>marquee_forever</code></td><td>-1</td><td> Indicates that marquee should repeat indefinitely. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:marqueeRepeatLimit
        */
        public static final int TextView_marqueeRepeatLimit = 71;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many ems wide. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxEms
        */
        public static final int TextView_maxEms = 38;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many pixels tall. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxHeight
        */
        public static final int TextView_maxHeight = 25;
        /**
          <p>
          @attr description
           Set an input filter to constrain the text length to the
             specified number. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxLength
        */
        public static final int TextView_maxLength = 48;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many lines tall.

        When used on an editable text, the <code>inputType</code> attribute's value must be
        combined with the <code>textMultiLine</code> flag for the maxLines attribute to apply. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxLines
        */
        public static final int TextView_maxLines = 34;
        /**
          <p>
          @attr description
           Makes the TextView be at most this many pixels wide. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:maxWidth
        */
        public static final int TextView_maxWidth = 24;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many ems wide. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minEms
        */
        public static final int TextView_minEms = 41;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many pixels tall. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minHeight
        */
        public static final int TextView_minHeight = 27;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many lines tall.

        When used on an editable text, the <code>inputType</code> attribute's value must be
        combined with the <code>textMultiLine</code> flag for the minLines attribute to apply. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minLines
        */
        public static final int TextView_minLines = 37;
        /**
          <p>
          @attr description
           Makes the TextView be at least this many pixels wide. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minWidth
        */
        public static final int TextView_minWidth = 26;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a numeric input method.
             The default is false.
             {@deprecated Use inputType instead.} 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>integer</code></td><td>0x01</td><td> Input is numeric. </td></tr>
<tr><td><code>signed</code></td><td>0x03</td><td> Input is numeric, with sign allowed. </td></tr>
<tr><td><code>decimal</code></td><td>0x05</td><td> Input is numeric, with decimals allowed. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:numeric
        */
        @Deprecated
        public static final int TextView_numeric = 54;
        /**
          <p>
          @attr description
           Whether the characters of the field are displayed as
             password dots instead of themselves.
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:password
        */
        @Deprecated
        public static final int TextView_password = 43;
        /**
          <p>
          @attr description
           If set, specifies that this TextView has a phone number input
             method. The default is false.
             {@deprecated Use inputType instead.} 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:phoneNumber
        */
        @Deprecated
        public static final int TextView_phoneNumber = 56;
        /**
          <p>
          @attr description
           An addition content type description to supply to the input
             method attached to the text view, which is private to the
             implementation of the input method.  This simply fills in
             the {@link android.view.inputmethod.EditorInfo#privateImeOptions
             EditorInfo.privateImeOptions} field when the input
             method is connected. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:privateImeOptions
        */
        public static final int TextView_privateImeOptions = 72;
        /**
          <p>
          @attr description
           Whether the text is allowed to be wider than the view (and
             therefore can be scrolled horizontally). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollHorizontally
        */
        public static final int TextView_scrollHorizontally = 42;
        /**
          <p>
          @attr description
           If the text is selectable, select it all when the view takes
             focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectAllOnFocus
        */
        public static final int TextView_selectAllOnFocus = 46;
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shadowColor
        */
        public static final int TextView_shadowColor = 49;
        /**
          <p>
          @attr description
           Horizontal offset of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shadowDx
        */
        public static final int TextView_shadowDx = 50;
        /**
          <p>
          @attr description
           Vertical offset of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shadowDy
        */
        public static final int TextView_shadowDy = 51;
        /**
          <p>
          @attr description
           Radius of the shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:shadowRadius
        */
        public static final int TextView_shadowRadius = 52;
        /**
          <p>
          @attr description
           Constrains the text to a single horizontally scrolling line
             instead of letting it wrap onto multiple lines, and advances
             focus instead of inserting a newline when you press the
             enter key.

             The default value is false (multi-line wrapped text mode) for non-editable text, but if
             you specify any value for inputType, the default is true (single-line input field mode).

             {@deprecated This attribute is deprecated. Use <code>maxLines</code> instead to change
             the layout of a static text, and use the <code>textMultiLine</code> flag in the
             inputType attribute instead for editable text views (if both singleLine and inputType
             are supplied, the inputType flags will override the value of singleLine). } 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:singleLine
        */
        @Deprecated
        public static final int TextView_singleLine = 44;
        /**
          <p>
          @attr description
           Text to display. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:text
        */
        public static final int TextView_text = 30;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAllCaps
        */
        public static final int TextView_textAllCaps = 28;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearance
        */
        public static final int TextView_textAppearance = 0;
        /**
          <p>
          @attr description
           Text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColor
        */
        public static final int TextView_textColor = 13;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorHighlight
        */
        public static final int TextView_textColorHighlight = 14;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorHint
        */
        public static final int TextView_textColorHint = 15;
        /**
          <p>
          @attr description
           Text color for links. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorLink
        */
        public static final int TextView_textColorLink = 16;
        /**
          <p>
          @attr description
           Reference to a drawable that will be drawn under the insertion cursor. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textCursorDrawable
        */
        public static final int TextView_textCursorDrawable = 17;
        /**
          <p>
          @attr description
           Variation of textEditPasteWindowLayout displayed when the clipboard is empty. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditNoPasteWindowLayout
        */
        public static final int TextView_textEditNoPasteWindowLayout = 5;
        /**
          <p>
          @attr description
           The layout of the view that is displayed on top of the cursor to paste inside a
             TextEdit field. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditPasteWindowLayout
        */
        public static final int TextView_textEditPasteWindowLayout = 4;
        /**
          <p>
          @attr description
           Variation of textEditSidePasteWindowLayout displayed when the clipboard is empty. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditSideNoPasteWindowLayout
        */
        public static final int TextView_textEditSideNoPasteWindowLayout = 7;
        /**
          <p>
          @attr description
           Used instead of textEditPasteWindowLayout when the window is moved on the side of the
             insertion cursor because it would be clipped if it were positioned on top. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditSidePasteWindowLayout
        */
        public static final int TextView_textEditSidePasteWindowLayout = 6;
        /**
          <p>
          @attr description
           Layout of the TextView item that will populate the suggestion popup window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditSuggestionItemLayout
        */
        public static final int TextView_textEditSuggestionItemLayout = 8;
        /**
          <p>
          @attr description
           Indicates that the content of a non-editable text can be selected. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textIsSelectable
        */
        public static final int TextView_textIsSelectable = 18;
        /**
          <p>
          @attr description
           Sets the horizontal scaling factor for the text. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textScaleX
        */
        public static final int TextView_textScaleX = 32;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandle
        */
        public static final int TextView_textSelectHandle = 3;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandleLeft
        */
        public static final int TextView_textSelectHandleLeft = 1;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandleRight
        */
        public static final int TextView_textSelectHandleRight = 2;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSize
        */
        public static final int TextView_textSize = 9;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textStyle
        */
        public static final int TextView_textStyle = 12;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:typeface
        */
        public static final int TextView_typeface = 11;
        /**
          <p>
          @attr description
           Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:width
        */
        public static final int TextView_width = 40;
        /** Attributes that can be used with a TextViewAppearance.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextViewAppearance_textAppearance app.guchagucharr.guchagucharunrecorder:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           </table>
           @see #TextViewAppearance_textAppearance
         */
        public static final int[] TextViewAppearance = {
            0x7f01001f
        };
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearance
        */
        public static final int TextViewAppearance_textAppearance = 0;
        /** Attributes that can be used with a TextViewMultiLineBackgroundState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextViewMultiLineBackgroundState_state_multiline app.guchagucharr.guchagucharunrecorder:state_multiline}</code></td><td> State identifier indicating a TextView has a multi-line layout.</td></tr>
           </table>
           @see #TextViewMultiLineBackgroundState_state_multiline
         */
        public static final int[] TextViewMultiLineBackgroundState = {
            0x7f010345
        };
        /**
          <p>
          @attr description
           State identifier indicating a TextView has a multi-line layout. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_multiline
        */
        public static final int TextViewMultiLineBackgroundState_state_multiline = 0;
        /**  These are the standard attributes that make up a complete theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Theme_absListViewStyle app.guchagucharr.guchagucharunrecorder:absListViewStyle}</code></td><td> Default AbsListView style.</td></tr>
           <tr><td><code>{@link #Theme_accessibilityFocusedDrawable app.guchagucharr.guchagucharunrecorder:accessibilityFocusedDrawable}</code></td><td> The drawable for accessibility focused views.</td></tr>
           <tr><td><code>{@link #Theme_actionBarDivider app.guchagucharr.guchagucharunrecorder:actionBarDivider}</code></td><td> Custom divider drawable to use for elements in the action bar.</td></tr>
           <tr><td><code>{@link #Theme_actionBarItemBackground app.guchagucharr.guchagucharunrecorder:actionBarItemBackground}</code></td><td> Custom item state list drawable background for action bar items.</td></tr>
           <tr><td><code>{@link #Theme_actionBarSize app.guchagucharr.guchagucharunrecorder:actionBarSize}</code></td><td> Size of the Action Bar, including the contextual
             bar used to present Action Modes.</td></tr>
           <tr><td><code>{@link #Theme_actionBarSplitStyle app.guchagucharr.guchagucharunrecorder:actionBarSplitStyle}</code></td><td> Reference to a style for the split Action Bar.</td></tr>
           <tr><td><code>{@link #Theme_actionBarStyle app.guchagucharr.guchagucharunrecorder:actionBarStyle}</code></td><td> Reference to a style for the Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionBarTabBarStyle app.guchagucharr.guchagucharunrecorder:actionBarTabBarStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionBarTabStyle app.guchagucharr.guchagucharunrecorder:actionBarTabStyle}</code></td><td> Default style for tabs within an action bar </td></tr>
           <tr><td><code>{@link #Theme_actionBarTabTextStyle app.guchagucharr.guchagucharunrecorder:actionBarTabTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionBarWidgetTheme app.guchagucharr.guchagucharunrecorder:actionBarWidgetTheme}</code></td><td> Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar.</td></tr>
           <tr><td><code>{@link #Theme_actionButtonStyle app.guchagucharr.guchagucharunrecorder:actionButtonStyle}</code></td><td> Default action button style.</td></tr>
           <tr><td><code>{@link #Theme_actionDropDownStyle app.guchagucharr.guchagucharunrecorder:actionDropDownStyle}</code></td><td> Default ActionBar dropdown style.</td></tr>
           <tr><td><code>{@link #Theme_actionMenuTextAppearance app.guchagucharr.guchagucharunrecorder:actionMenuTextAppearance}</code></td><td> TextAppearance style that will be applied to text that
             appears within action menu items.</td></tr>
           <tr><td><code>{@link #Theme_actionMenuTextColor app.guchagucharr.guchagucharunrecorder:actionMenuTextColor}</code></td><td> Color for text that appears within action menu items.</td></tr>
           <tr><td><code>{@link #Theme_actionModeBackground app.guchagucharr.guchagucharunrecorder:actionModeBackground}</code></td><td> Background drawable to use for action mode UI </td></tr>
           <tr><td><code>{@link #Theme_actionModeCloseButtonStyle app.guchagucharr.guchagucharunrecorder:actionModeCloseButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionModeCloseDrawable app.guchagucharr.guchagucharunrecorder:actionModeCloseDrawable}</code></td><td> Drawable to use for the close action mode button </td></tr>
           <tr><td><code>{@link #Theme_actionModeCopyDrawable app.guchagucharr.guchagucharunrecorder:actionModeCopyDrawable}</code></td><td> Drawable to use for the Copy action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeCutDrawable app.guchagucharr.guchagucharunrecorder:actionModeCutDrawable}</code></td><td> Drawable to use for the Cut action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeFindDrawable app.guchagucharr.guchagucharunrecorder:actionModeFindDrawable}</code></td><td> Drawable to use for the Find action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #Theme_actionModePasteDrawable app.guchagucharr.guchagucharunrecorder:actionModePasteDrawable}</code></td><td> Drawable to use for the Paste action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModePopupWindowStyle app.guchagucharr.guchagucharunrecorder:actionModePopupWindowStyle}</code></td><td> PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
           <tr><td><code>{@link #Theme_actionModeSelectAllDrawable app.guchagucharr.guchagucharunrecorder:actionModeSelectAllDrawable}</code></td><td> Drawable to use for the Select all action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeShareDrawable app.guchagucharr.guchagucharunrecorder:actionModeShareDrawable}</code></td><td> Drawable to use for the Share action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #Theme_actionModeSplitBackground app.guchagucharr.guchagucharunrecorder:actionModeSplitBackground}</code></td><td> Background drawable to use for action mode UI in the lower split bar </td></tr>
           <tr><td><code>{@link #Theme_actionModeStyle app.guchagucharr.guchagucharunrecorder:actionModeStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_actionModeWebSearchDrawable app.guchagucharr.guchagucharunrecorder:actionModeWebSearchDrawable}</code></td><td> Drawable to use for the Web Search action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #Theme_actionOverflowButtonStyle app.guchagucharr.guchagucharunrecorder:actionOverflowButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_activatedBackgroundIndicator app.guchagucharr.guchagucharunrecorder:activatedBackgroundIndicator}</code></td><td> Drawable used as a background for activated items.</td></tr>
           <tr><td><code>{@link #Theme_activityChooserViewStyle app.guchagucharr.guchagucharunrecorder:activityChooserViewStyle}</code></td><td> Default ActivityChooserView style.</td></tr>
           <tr><td><code>{@link #Theme_alertDialogButtonGroupStyle app.guchagucharr.guchagucharunrecorder:alertDialogButtonGroupStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_alertDialogCenterButtons app.guchagucharr.guchagucharunrecorder:alertDialogCenterButtons}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_alertDialogIcon app.guchagucharr.guchagucharunrecorder:alertDialogIcon}</code></td><td> Icon drawable to use for alerts </td></tr>
           <tr><td><code>{@link #Theme_alertDialogStyle app.guchagucharr.guchagucharunrecorder:alertDialogStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_alertDialogTheme app.guchagucharr.guchagucharunrecorder:alertDialogTheme}</code></td><td> Theme to use for alert dialogs spawned from this theme.</td></tr>
           <tr><td><code>{@link #Theme_autoCompleteTextViewStyle app.guchagucharr.guchagucharunrecorder:autoCompleteTextViewStyle}</code></td><td> Default AutoCompleteTextView style.</td></tr>
           <tr><td><code>{@link #Theme_backgroundDimAmount app.guchagucharr.guchagucharunrecorder:backgroundDimAmount}</code></td><td> Default background dim amount when a menu, dialog, or something similar pops up.</td></tr>
           <tr><td><code>{@link #Theme_backgroundDimEnabled app.guchagucharr.guchagucharunrecorder:backgroundDimEnabled}</code></td><td> Control whether dimming behind the window is enabled.</td></tr>
           <tr><td><code>{@link #Theme_borderlessButtonStyle app.guchagucharr.guchagucharunrecorder:borderlessButtonStyle}</code></td><td> Style for buttons without an explicit border, often used in groups.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyle app.guchagucharr.guchagucharunrecorder:buttonStyle}</code></td><td> Normal Button style.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleInset app.guchagucharr.guchagucharunrecorder:buttonStyleInset}</code></td><td> Button style to inset into an EditText.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleSmall app.guchagucharr.guchagucharunrecorder:buttonStyleSmall}</code></td><td> Small Button style.</td></tr>
           <tr><td><code>{@link #Theme_buttonStyleToggle app.guchagucharr.guchagucharunrecorder:buttonStyleToggle}</code></td><td> ToggleButton style.</td></tr>
           <tr><td><code>{@link #Theme_candidatesTextStyleSpans app.guchagucharr.guchagucharunrecorder:candidatesTextStyleSpans}</code></td><td> A styled string, specifying the style to be used for showing
             inline candidate text when composing with an input method.</td></tr>
           <tr><td><code>{@link #Theme_checkBoxPreferenceStyle app.guchagucharr.guchagucharunrecorder:checkBoxPreferenceStyle}</code></td><td> Default style for CheckBoxPreference.</td></tr>
           <tr><td><code>{@link #Theme_checkboxStyle app.guchagucharr.guchagucharunrecorder:checkboxStyle}</code></td><td> Default Checkbox style.</td></tr>
           <tr><td><code>{@link #Theme_checkedTextViewStyle app.guchagucharr.guchagucharunrecorder:checkedTextViewStyle}</code></td><td> Default CheckedTextView style.</td></tr>
           <tr><td><code>{@link #Theme_colorActivatedHighlight app.guchagucharr.guchagucharunrecorder:colorActivatedHighlight}</code></td><td> Default highlight color for items that are
             activated.</td></tr>
           <tr><td><code>{@link #Theme_colorBackground app.guchagucharr.guchagucharunrecorder:colorBackground}</code></td><td> Color that matches (as closely as possible) the window background.</td></tr>
           <tr><td><code>{@link #Theme_colorBackgroundCacheHint app.guchagucharr.guchagucharunrecorder:colorBackgroundCacheHint}</code></td><td> This is a hint for a solid color that can be used for caching
             rendered views.</td></tr>
           <tr><td><code>{@link #Theme_colorFocusedHighlight app.guchagucharr.guchagucharunrecorder:colorFocusedHighlight}</code></td><td> Default highlight color for items that are
             focused.</td></tr>
           <tr><td><code>{@link #Theme_colorForeground app.guchagucharr.guchagucharunrecorder:colorForeground}</code></td><td> Default color of foreground imagery.</td></tr>
           <tr><td><code>{@link #Theme_colorForegroundInverse app.guchagucharr.guchagucharunrecorder:colorForegroundInverse}</code></td><td> Default color of foreground imagery on an inverted background.</td></tr>
           <tr><td><code>{@link #Theme_colorLongPressedHighlight app.guchagucharr.guchagucharunrecorder:colorLongPressedHighlight}</code></td><td> Default highlight color for items that are long-pressed.</td></tr>
           <tr><td><code>{@link #Theme_colorMultiSelectHighlight app.guchagucharr.guchagucharunrecorder:colorMultiSelectHighlight}</code></td><td> Default highlight color for items in multiple selection
             mode.</td></tr>
           <tr><td><code>{@link #Theme_colorPressedHighlight app.guchagucharr.guchagucharunrecorder:colorPressedHighlight}</code></td><td> Default highlight color for items that are pressed.</td></tr>
           <tr><td><code>{@link #Theme_datePickerStyle app.guchagucharr.guchagucharunrecorder:datePickerStyle}</code></td><td> The DatePicker style.</td></tr>
           <tr><td><code>{@link #Theme_detailsElementBackground app.guchagucharr.guchagucharunrecorder:detailsElementBackground}</code></td><td> Background that can be used behind parts of a UI that provide
             details on data the user is selecting.</td></tr>
           <tr><td><code>{@link #Theme_dialogCustomTitleDecorLayout app.guchagucharr.guchagucharunrecorder:dialogCustomTitleDecorLayout}</code></td><td> Window decor layout to use in dialog mode with custom titles </td></tr>
           <tr><td><code>{@link #Theme_dialogPreferenceStyle app.guchagucharr.guchagucharunrecorder:dialogPreferenceStyle}</code></td><td> Default style for DialogPreference.</td></tr>
           <tr><td><code>{@link #Theme_dialogTheme app.guchagucharr.guchagucharunrecorder:dialogTheme}</code></td><td> Theme to use for dialogs spawned from this theme.</td></tr>
           <tr><td><code>{@link #Theme_dialogTitleDecorLayout app.guchagucharr.guchagucharunrecorder:dialogTitleDecorLayout}</code></td><td> Window decor layout to use in dialog mode with title only </td></tr>
           <tr><td><code>{@link #Theme_dialogTitleIconsDecorLayout app.guchagucharr.guchagucharunrecorder:dialogTitleIconsDecorLayout}</code></td><td> Window decor layout to use in dialog mode with icons </td></tr>
           <tr><td><code>{@link #Theme_disabledAlpha app.guchagucharr.guchagucharunrecorder:disabledAlpha}</code></td><td> Default disabled alpha for widgets that set enabled/disabled alpha programmatically.</td></tr>
           <tr><td><code>{@link #Theme_dividerHorizontal app.guchagucharr.guchagucharunrecorder:dividerHorizontal}</code></td><td> Drawable to use for generic horizontal dividers.</td></tr>
           <tr><td><code>{@link #Theme_dividerVertical app.guchagucharr.guchagucharunrecorder:dividerVertical}</code></td><td> Drawable to use for generic vertical dividers.</td></tr>
           <tr><td><code>{@link #Theme_dropDownHintAppearance app.guchagucharr.guchagucharunrecorder:dropDownHintAppearance}</code></td><td> Default style for drop down hints.</td></tr>
           <tr><td><code>{@link #Theme_dropDownItemStyle app.guchagucharr.guchagucharunrecorder:dropDownItemStyle}</code></td><td> Default style for drop down items.</td></tr>
           <tr><td><code>{@link #Theme_dropDownListViewStyle app.guchagucharr.guchagucharunrecorder:dropDownListViewStyle}</code></td><td> Default ListView style for drop downs.</td></tr>
           <tr><td><code>{@link #Theme_dropDownSpinnerStyle app.guchagucharr.guchagucharunrecorder:dropDownSpinnerStyle}</code></td><td> Default dropdown Spinner style.</td></tr>
           <tr><td><code>{@link #Theme_dropdownListPreferredItemHeight app.guchagucharr.guchagucharunrecorder:dropdownListPreferredItemHeight}</code></td><td> The preferred item height for dropdown lists.</td></tr>
           <tr><td><code>{@link #Theme_editTextBackground app.guchagucharr.guchagucharunrecorder:editTextBackground}</code></td><td> EditText background drawable.</td></tr>
           <tr><td><code>{@link #Theme_editTextColor app.guchagucharr.guchagucharunrecorder:editTextColor}</code></td><td> EditText text foreground color.</td></tr>
           <tr><td><code>{@link #Theme_editTextPreferenceStyle app.guchagucharr.guchagucharunrecorder:editTextPreferenceStyle}</code></td><td> Default style for EditTextPreference.</td></tr>
           <tr><td><code>{@link #Theme_editTextStyle app.guchagucharr.guchagucharunrecorder:editTextStyle}</code></td><td> Default EditText style.</td></tr>
           <tr><td><code>{@link #Theme_errorMessageAboveBackground app.guchagucharr.guchagucharunrecorder:errorMessageAboveBackground}</code></td><td> Background used instead of errorMessageBackground when the popup has to be above.</td></tr>
           <tr><td><code>{@link #Theme_errorMessageBackground app.guchagucharr.guchagucharunrecorder:errorMessageBackground}</code></td><td> Popup text displayed in TextView when setError is used.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredChildIndicatorLeft app.guchagucharr.guchagucharunrecorder:expandableListPreferredChildIndicatorLeft}</code></td><td> The preferred left bound for an expandable list child's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredChildIndicatorRight app.guchagucharr.guchagucharunrecorder:expandableListPreferredChildIndicatorRight}</code></td><td> The preferred right bound for an expandable list child's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredChildPaddingLeft app.guchagucharr.guchagucharunrecorder:expandableListPreferredChildPaddingLeft}</code></td><td> The preferred left padding for an expandable list item that is a child.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredItemIndicatorLeft app.guchagucharr.guchagucharunrecorder:expandableListPreferredItemIndicatorLeft}</code></td><td> The preferred left bound for an expandable list item's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredItemIndicatorRight app.guchagucharr.guchagucharunrecorder:expandableListPreferredItemIndicatorRight}</code></td><td> The preferred right bound for an expandable list item's indicator.</td></tr>
           <tr><td><code>{@link #Theme_expandableListPreferredItemPaddingLeft app.guchagucharr.guchagucharunrecorder:expandableListPreferredItemPaddingLeft}</code></td><td> The preferred left padding for an expandable list item (for child-specific layouts,
             use expandableListPreferredChildPaddingLeft).</td></tr>
           <tr><td><code>{@link #Theme_expandableListViewStyle app.guchagucharr.guchagucharunrecorder:expandableListViewStyle}</code></td><td> Default ExpandableListView style.</td></tr>
           <tr><td><code>{@link #Theme_expandableListViewWhiteStyle app.guchagucharr.guchagucharunrecorder:expandableListViewWhiteStyle}</code></td><td> ExpandableListView with white background.</td></tr>
           <tr><td><code>{@link #Theme_fastScrollOverlayPosition app.guchagucharr.guchagucharunrecorder:fastScrollOverlayPosition}</code></td><td> Position of the fast scroll index overlay window.</td></tr>
           <tr><td><code>{@link #Theme_fastScrollPreviewBackgroundLeft app.guchagucharr.guchagucharunrecorder:fastScrollPreviewBackgroundLeft}</code></td><td> Drawable to use as the fast scroll index preview window background
             when shown on the left.</td></tr>
           <tr><td><code>{@link #Theme_fastScrollPreviewBackgroundRight app.guchagucharr.guchagucharunrecorder:fastScrollPreviewBackgroundRight}</code></td><td> Drawable to use as the fast scroll index preview window background
             when shown on the right.</td></tr>
           <tr><td><code>{@link #Theme_fastScrollTextColor app.guchagucharr.guchagucharunrecorder:fastScrollTextColor}</code></td><td> Text color for the fast scroll index overlay.</td></tr>
           <tr><td><code>{@link #Theme_fastScrollThumbDrawable app.guchagucharr.guchagucharunrecorder:fastScrollThumbDrawable}</code></td><td> Drawable to use as the fast scroll thumb.</td></tr>
           <tr><td><code>{@link #Theme_fastScrollTrackDrawable app.guchagucharr.guchagucharunrecorder:fastScrollTrackDrawable}</code></td><td> Drawable to use as the track for the fast scroll thumb.</td></tr>
           <tr><td><code>{@link #Theme_findOnPageNextDrawable app.guchagucharr.guchagucharunrecorder:findOnPageNextDrawable}</code></td><td> Drawable for WebView find-on-page dialogue's "next" button.</td></tr>
           <tr><td><code>{@link #Theme_findOnPagePreviousDrawable app.guchagucharr.guchagucharunrecorder:findOnPagePreviousDrawable}</code></td><td> Drawable for WebView find-on-page dialogue's "previous" button.</td></tr>
           <tr><td><code>{@link #Theme_galleryItemBackground app.guchagucharr.guchagucharunrecorder:galleryItemBackground}</code></td><td> The preferred background for gallery items.</td></tr>
           <tr><td><code>{@link #Theme_galleryStyle app.guchagucharr.guchagucharunrecorder:galleryStyle}</code></td><td> Default Gallery style.</td></tr>
           <tr><td><code>{@link #Theme_gestureOverlayViewStyle app.guchagucharr.guchagucharunrecorder:gestureOverlayViewStyle}</code></td><td> Default GestureOverlayView style.</td></tr>
           <tr><td><code>{@link #Theme_gridViewStyle app.guchagucharr.guchagucharunrecorder:gridViewStyle}</code></td><td> Default GridView style.</td></tr>
           <tr><td><code>{@link #Theme_homeAsUpIndicator app.guchagucharr.guchagucharunrecorder:homeAsUpIndicator}</code></td><td> Specifies a drawable to use for the 'home as up' indicator.</td></tr>
           <tr><td><code>{@link #Theme_horizontalScrollViewStyle app.guchagucharr.guchagucharunrecorder:horizontalScrollViewStyle}</code></td><td> Default HorizontalScrollView style.</td></tr>
           <tr><td><code>{@link #Theme_imageButtonStyle app.guchagucharr.guchagucharunrecorder:imageButtonStyle}</code></td><td> The style resource to use for an ImageButton.</td></tr>
           <tr><td><code>{@link #Theme_imageWellStyle app.guchagucharr.guchagucharunrecorder:imageWellStyle}</code></td><td> The style resource to use for an ImageButton that is an image well.</td></tr>
           <tr><td><code>{@link #Theme_listChoiceBackgroundIndicator app.guchagucharr.guchagucharunrecorder:listChoiceBackgroundIndicator}</code></td><td> Drawable used as a background for selected list items.</td></tr>
           <tr><td><code>{@link #Theme_listChoiceIndicatorMultiple app.guchagucharr.guchagucharunrecorder:listChoiceIndicatorMultiple}</code></td><td> Drawable to use for multiple choice indicators.</td></tr>
           <tr><td><code>{@link #Theme_listChoiceIndicatorSingle app.guchagucharr.guchagucharunrecorder:listChoiceIndicatorSingle}</code></td><td> Drawable to use for single choice indicators.</td></tr>
           <tr><td><code>{@link #Theme_listDivider app.guchagucharr.guchagucharunrecorder:listDivider}</code></td><td> The drawable for the list divider.</td></tr>
           <tr><td><code>{@link #Theme_listDividerAlertDialog app.guchagucharr.guchagucharunrecorder:listDividerAlertDialog}</code></td><td> The list divider used in alert dialogs.</td></tr>
           <tr><td><code>{@link #Theme_listPopupWindowStyle app.guchagucharr.guchagucharunrecorder:listPopupWindowStyle}</code></td><td> Default ListPopupWindow style.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeight app.guchagucharr.guchagucharunrecorder:listPreferredItemHeight}</code></td><td> The preferred list item height.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeightLarge app.guchagucharr.guchagucharunrecorder:listPreferredItemHeightLarge}</code></td><td> A larger, more robust list item height.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemHeightSmall app.guchagucharr.guchagucharunrecorder:listPreferredItemHeightSmall}</code></td><td> A smaller, sleeker list item height.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemPaddingEnd app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingEnd}</code></td><td> The preferred padding along the end edge of list items.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemPaddingLeft app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingLeft}</code></td><td> The preferred padding along the left edge of list items.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemPaddingRight app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingRight}</code></td><td> The preferred padding along the right edge of list items.</td></tr>
           <tr><td><code>{@link #Theme_listPreferredItemPaddingStart app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingStart}</code></td><td> The preferred padding along the start edge of list items.</td></tr>
           <tr><td><code>{@link #Theme_listSeparatorTextViewStyle app.guchagucharr.guchagucharunrecorder:listSeparatorTextViewStyle}</code></td><td> TextView style for list separators.</td></tr>
           <tr><td><code>{@link #Theme_listViewStyle app.guchagucharr.guchagucharunrecorder:listViewStyle}</code></td><td> Default ListView style.</td></tr>
           <tr><td><code>{@link #Theme_listViewWhiteStyle app.guchagucharr.guchagucharunrecorder:listViewWhiteStyle}</code></td><td> ListView with white background.</td></tr>
           <tr><td><code>{@link #Theme_mapViewStyle app.guchagucharr.guchagucharunrecorder:mapViewStyle}</code></td><td> Default MapView style.</td></tr>
           <tr><td><code>{@link #Theme_mediaRouteButtonStyle app.guchagucharr.guchagucharunrecorder:mediaRouteButtonStyle}</code></td><td> Default style for the MediaRouteButton widget.</td></tr>
           <tr><td><code>{@link #Theme_numberPickerStyle app.guchagucharr.guchagucharunrecorder:numberPickerStyle}</code></td><td> NumberPicker style.</td></tr>
           <tr><td><code>{@link #Theme_panelBackground app.guchagucharr.guchagucharunrecorder:panelBackground}</code></td><td> The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
           <tr><td><code>{@link #Theme_panelColorBackground app.guchagucharr.guchagucharunrecorder:panelColorBackground}</code></td><td> Color that matches (as closely as possible) the panel background.</td></tr>
           <tr><td><code>{@link #Theme_panelColorForeground app.guchagucharr.guchagucharunrecorder:panelColorForeground}</code></td><td> Default color of foreground panel imagery.</td></tr>
           <tr><td><code>{@link #Theme_panelFullBackground app.guchagucharr.guchagucharunrecorder:panelFullBackground}</code></td><td> The background of a panel when it extends to the left and right edges of the screen.</td></tr>
           <tr><td><code>{@link #Theme_panelMenuIsCompact app.guchagucharr.guchagucharunrecorder:panelMenuIsCompact}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_panelMenuListTheme app.guchagucharr.guchagucharunrecorder:panelMenuListTheme}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_panelMenuListWidth app.guchagucharr.guchagucharunrecorder:panelMenuListWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_panelTextAppearance app.guchagucharr.guchagucharunrecorder:panelTextAppearance}</code></td><td> Default appearance of panel text.</td></tr>
           <tr><td><code>{@link #Theme_pointerStyle app.guchagucharr.guchagucharunrecorder:pointerStyle}</code></td><td> Reference to the Pointer style </td></tr>
           <tr><td><code>{@link #Theme_popupMenuStyle app.guchagucharr.guchagucharunrecorder:popupMenuStyle}</code></td><td> Default PopupMenu style.</td></tr>
           <tr><td><code>{@link #Theme_popupWindowStyle app.guchagucharr.guchagucharunrecorder:popupWindowStyle}</code></td><td> Default PopupWindow style.</td></tr>
           <tr><td><code>{@link #Theme_preferenceCategoryStyle app.guchagucharr.guchagucharunrecorder:preferenceCategoryStyle}</code></td><td> Default style for PreferenceCategory.</td></tr>
           <tr><td><code>{@link #Theme_preferenceFragmentStyle app.guchagucharr.guchagucharunrecorder:preferenceFragmentStyle}</code></td><td> Default style for Headers pane in PreferenceActivity.</td></tr>
           <tr><td><code>{@link #Theme_preferenceFrameLayoutStyle app.guchagucharr.guchagucharunrecorder:preferenceFrameLayoutStyle}</code></td><td> Preference frame layout styles.</td></tr>
           <tr><td><code>{@link #Theme_preferenceInformationStyle app.guchagucharr.guchagucharunrecorder:preferenceInformationStyle}</code></td><td> Default style for informational Preference.</td></tr>
           <tr><td><code>{@link #Theme_preferenceLayoutChild app.guchagucharr.guchagucharunrecorder:preferenceLayoutChild}</code></td><td> The preference layout that has the child/tabbed effect.</td></tr>
           <tr><td><code>{@link #Theme_preferencePanelStyle app.guchagucharr.guchagucharunrecorder:preferencePanelStyle}</code></td><td> Preference panel style </td></tr>
           <tr><td><code>{@link #Theme_preferenceScreenStyle app.guchagucharr.guchagucharunrecorder:preferenceScreenStyle}</code></td><td> Default style for PreferenceScreen.</td></tr>
           <tr><td><code>{@link #Theme_preferenceStyle app.guchagucharr.guchagucharunrecorder:preferenceStyle}</code></td><td> Default style for Preference.</td></tr>
           <tr><td><code>{@link #Theme_presentationTheme app.guchagucharr.guchagucharunrecorder:presentationTheme}</code></td><td> Theme to use for presentations spawned from this theme.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyle app.guchagucharr.guchagucharunrecorder:progressBarStyle}</code></td><td> Default ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleHorizontal app.guchagucharr.guchagucharunrecorder:progressBarStyleHorizontal}</code></td><td> Horizontal ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleInverse app.guchagucharr.guchagucharunrecorder:progressBarStyleInverse}</code></td><td> Inverse ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleLarge app.guchagucharr.guchagucharunrecorder:progressBarStyleLarge}</code></td><td> Large ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleLargeInverse app.guchagucharr.guchagucharunrecorder:progressBarStyleLargeInverse}</code></td><td> Large inverse ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleSmall app.guchagucharr.guchagucharunrecorder:progressBarStyleSmall}</code></td><td> Small ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleSmallInverse app.guchagucharr.guchagucharunrecorder:progressBarStyleSmallInverse}</code></td><td> Small inverse ProgressBar style.</td></tr>
           <tr><td><code>{@link #Theme_progressBarStyleSmallTitle app.guchagucharr.guchagucharunrecorder:progressBarStyleSmallTitle}</code></td><td> Small ProgressBar in title style.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeOverlay app.guchagucharr.guchagucharunrecorder:quickContactBadgeOverlay}</code></td><td> Drawable used as an overlay on top of quickcontact photos.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleSmallWindowLarge app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleSmallWindowLarge}</code></td><td> Default quickcontact badge style with large quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleSmallWindowMedium app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleSmallWindowMedium}</code></td><td> Default quickcontact badge style with medium quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleSmallWindowSmall app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleSmallWindowSmall}</code></td><td> Default quickcontact badge style with small quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleWindowLarge app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleWindowLarge}</code></td><td> Default quickcontact badge style with large quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleWindowMedium app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleWindowMedium}</code></td><td> Default quickcontact badge style with medium quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_quickContactBadgeStyleWindowSmall app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleWindowSmall}</code></td><td> Default quickcontact badge style with small quickcontact window.</td></tr>
           <tr><td><code>{@link #Theme_radioButtonStyle app.guchagucharr.guchagucharunrecorder:radioButtonStyle}</code></td><td> Default RadioButton style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyle app.guchagucharr.guchagucharunrecorder:ratingBarStyle}</code></td><td> Default RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyleIndicator app.guchagucharr.guchagucharunrecorder:ratingBarStyleIndicator}</code></td><td> Indicator RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_ratingBarStyleSmall app.guchagucharr.guchagucharunrecorder:ratingBarStyleSmall}</code></td><td> Small indicator RatingBar style.</td></tr>
           <tr><td><code>{@link #Theme_ringtonePreferenceStyle app.guchagucharr.guchagucharunrecorder:ringtonePreferenceStyle}</code></td><td> Default style for RingtonePreference.</td></tr>
           <tr><td><code>{@link #Theme_scrollViewStyle app.guchagucharr.guchagucharunrecorder:scrollViewStyle}</code></td><td> Default ScrollView style.</td></tr>
           <tr><td><code>{@link #Theme_searchDialogTheme app.guchagucharr.guchagucharunrecorder:searchDialogTheme}</code></td><td> Theme to use for Search Dialogs </td></tr>
           <tr><td><code>{@link #Theme_searchDropdownBackground app.guchagucharr.guchagucharunrecorder:searchDropdownBackground}</code></td><td> SearchView dropdown background </td></tr>
           <tr><td><code>{@link #Theme_searchResultListItemHeight app.guchagucharr.guchagucharunrecorder:searchResultListItemHeight}</code></td><td> The list item height for search results.</td></tr>
           <tr><td><code>{@link #Theme_searchViewCloseIcon app.guchagucharr.guchagucharunrecorder:searchViewCloseIcon}</code></td><td> SearchView close button icon </td></tr>
           <tr><td><code>{@link #Theme_searchViewEditQuery app.guchagucharr.guchagucharunrecorder:searchViewEditQuery}</code></td><td> SearchView query refinement icon </td></tr>
           <tr><td><code>{@link #Theme_searchViewEditQueryBackground app.guchagucharr.guchagucharunrecorder:searchViewEditQueryBackground}</code></td><td> SearchView query refinement icon background </td></tr>
           <tr><td><code>{@link #Theme_searchViewGoIcon app.guchagucharr.guchagucharunrecorder:searchViewGoIcon}</code></td><td> SearchView Go button icon </td></tr>
           <tr><td><code>{@link #Theme_searchViewSearchIcon app.guchagucharr.guchagucharunrecorder:searchViewSearchIcon}</code></td><td> SearchView Search icon </td></tr>
           <tr><td><code>{@link #Theme_searchViewTextField app.guchagucharr.guchagucharunrecorder:searchViewTextField}</code></td><td> SearchView text field background for the left section </td></tr>
           <tr><td><code>{@link #Theme_searchViewTextFieldRight app.guchagucharr.guchagucharunrecorder:searchViewTextFieldRight}</code></td><td> SearchView text field background for the right section </td></tr>
           <tr><td><code>{@link #Theme_searchViewVoiceIcon app.guchagucharr.guchagucharunrecorder:searchViewVoiceIcon}</code></td><td> SearchView Voice button icon </td></tr>
           <tr><td><code>{@link #Theme_searchWidgetCorpusItemBackground app.guchagucharr.guchagucharunrecorder:searchWidgetCorpusItemBackground}</code></td><td> Search widget more corpus result item background.</td></tr>
           <tr><td><code>{@link #Theme_seekBarStyle app.guchagucharr.guchagucharunrecorder:seekBarStyle}</code></td><td> Default SeekBar style.</td></tr>
           <tr><td><code>{@link #Theme_segmentedButtonStyle app.guchagucharr.guchagucharunrecorder:segmentedButtonStyle}</code></td><td> Style for segmented buttons - a container that houses several buttons
             with the appearance of a singel button broken into segments.</td></tr>
           <tr><td><code>{@link #Theme_selectableItemBackground app.guchagucharr.guchagucharunrecorder:selectableItemBackground}</code></td><td> Background drawable for standalone items that need focus/pressed states.</td></tr>
           <tr><td><code>{@link #Theme_spinnerDropDownItemStyle app.guchagucharr.guchagucharunrecorder:spinnerDropDownItemStyle}</code></td><td> Default style for spinner drop down items.</td></tr>
           <tr><td><code>{@link #Theme_spinnerItemStyle app.guchagucharr.guchagucharunrecorder:spinnerItemStyle}</code></td><td> Default spinner item style.</td></tr>
           <tr><td><code>{@link #Theme_spinnerStyle app.guchagucharr.guchagucharunrecorder:spinnerStyle}</code></td><td> Default Spinner style.</td></tr>
           <tr><td><code>{@link #Theme_stackViewStyle app.guchagucharr.guchagucharunrecorder:stackViewStyle}</code></td><td> Default StackView style.</td></tr>
           <tr><td><code>{@link #Theme_starStyle app.guchagucharr.guchagucharunrecorder:starStyle}</code></td><td> Default Star style.</td></tr>
           <tr><td><code>{@link #Theme_switchPreferenceStyle app.guchagucharr.guchagucharunrecorder:switchPreferenceStyle}</code></td><td> Default style for switch preferences.</td></tr>
           <tr><td><code>{@link #Theme_switchStyle app.guchagucharr.guchagucharunrecorder:switchStyle}</code></td><td> Default style for the Switch widget.</td></tr>
           <tr><td><code>{@link #Theme_tabWidgetStyle app.guchagucharr.guchagucharunrecorder:tabWidgetStyle}</code></td><td> Default TabWidget style.</td></tr>
           <tr><td><code>{@link #Theme_textAppearance app.guchagucharr.guchagucharunrecorder:textAppearance}</code></td><td> Default appearance of text: color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceAutoCorrectionSuggestion app.guchagucharr.guchagucharunrecorder:textAppearanceAutoCorrectionSuggestion}</code></td><td> The underline color and thickness for auto correction suggestion </td></tr>
           <tr><td><code>{@link #Theme_textAppearanceButton app.guchagucharr.guchagucharunrecorder:textAppearanceButton}</code></td><td> Text color, typeface, size, and style for the text inside of a button.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceEasyCorrectSuggestion app.guchagucharr.guchagucharunrecorder:textAppearanceEasyCorrectSuggestion}</code></td><td> The underline color and thickness for easy correct suggestion </td></tr>
           <tr><td><code>{@link #Theme_textAppearanceInverse app.guchagucharr.guchagucharunrecorder:textAppearanceInverse}</code></td><td> Default appearance of text against an inverted background:
             color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceLarge app.guchagucharr.guchagucharunrecorder:textAppearanceLarge}</code></td><td> Text color, typeface, size, and style for "large" text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceLargeInverse app.guchagucharr.guchagucharunrecorder:textAppearanceLargeInverse}</code></td><td> Text color, typeface, size, and style for "large" inverse text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceLargePopupMenu app.guchagucharr.guchagucharunrecorder:textAppearanceLargePopupMenu}</code></td><td> Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceListItem app.guchagucharr.guchagucharunrecorder:textAppearanceListItem}</code></td><td> The preferred TextAppearance for the primary text of list items.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceListItemSmall app.guchagucharr.guchagucharunrecorder:textAppearanceListItemSmall}</code></td><td> The preferred TextAppearance for the primary text of small list items.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceMedium app.guchagucharr.guchagucharunrecorder:textAppearanceMedium}</code></td><td> Text color, typeface, size, and style for "medium" text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceMediumInverse app.guchagucharr.guchagucharunrecorder:textAppearanceMediumInverse}</code></td><td> Text color, typeface, size, and style for "medium" inverse text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceMisspelledSuggestion app.guchagucharr.guchagucharunrecorder:textAppearanceMisspelledSuggestion}</code></td><td> The underline color and thickness for misspelled suggestion </td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSearchResultSubtitle app.guchagucharr.guchagucharunrecorder:textAppearanceSearchResultSubtitle}</code></td><td> Text color, typeface, size, and style for system search result subtitle.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSearchResultTitle app.guchagucharr.guchagucharunrecorder:textAppearanceSearchResultTitle}</code></td><td> Text color, typeface, size, and style for system search result title.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSmall app.guchagucharr.guchagucharunrecorder:textAppearanceSmall}</code></td><td> Text color, typeface, size, and style for "small" text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSmallInverse app.guchagucharr.guchagucharunrecorder:textAppearanceSmallInverse}</code></td><td> Text color, typeface, size, and style for "small" inverse text.</td></tr>
           <tr><td><code>{@link #Theme_textAppearanceSmallPopupMenu app.guchagucharr.guchagucharunrecorder:textAppearanceSmallPopupMenu}</code></td><td> Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
           <tr><td><code>{@link #Theme_textCheckMark app.guchagucharr.guchagucharunrecorder:textCheckMark}</code></td><td> Drawable to use for check marks.</td></tr>
           <tr><td><code>{@link #Theme_textCheckMarkInverse app.guchagucharr.guchagucharunrecorder:textCheckMarkInverse}</code></td><td></td></tr>
           <tr><td><code>{@link #Theme_textColorAlertDialogListItem app.guchagucharr.guchagucharunrecorder:textColorAlertDialogListItem}</code></td><td> Color of list item text in alert dialogs.</td></tr>
           <tr><td><code>{@link #Theme_textColorHighlightInverse app.guchagucharr.guchagucharunrecorder:textColorHighlightInverse}</code></td><td> Color of highlighted text, when used in a light theme.</td></tr>
           <tr><td><code>{@link #Theme_textColorHintInverse app.guchagucharr.guchagucharunrecorder:textColorHintInverse}</code></td><td> Inverse hint text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorLinkInverse app.guchagucharr.guchagucharunrecorder:textColorLinkInverse}</code></td><td> Color of link text (URLs), when used in a light theme.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimary app.guchagucharr.guchagucharunrecorder:textColorPrimary}</code></td><td> The most prominent text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryDisableOnly app.guchagucharr.guchagucharunrecorder:textColorPrimaryDisableOnly}</code></td><td> Bright text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryInverse app.guchagucharr.guchagucharunrecorder:textColorPrimaryInverse}</code></td><td> Primary inverse text color, useful for inverted backgrounds.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryInverseDisableOnly app.guchagucharr.guchagucharunrecorder:textColorPrimaryInverseDisableOnly}</code></td><td> Bright inverse text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryInverseNoDisable app.guchagucharr.guchagucharunrecorder:textColorPrimaryInverseNoDisable}</code></td><td> Bright inverse text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorPrimaryNoDisable app.guchagucharr.guchagucharunrecorder:textColorPrimaryNoDisable}</code></td><td> Bright text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorSearchUrl app.guchagucharr.guchagucharunrecorder:textColorSearchUrl}</code></td><td> Text color for urls in search suggestions, used by things like global search and the browser.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondary app.guchagucharr.guchagucharunrecorder:textColorSecondary}</code></td><td> Secondary text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondaryInverse app.guchagucharr.guchagucharunrecorder:textColorSecondaryInverse}</code></td><td> Secondary inverse text color, useful for inverted backgrounds.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondaryInverseNoDisable app.guchagucharr.guchagucharunrecorder:textColorSecondaryInverseNoDisable}</code></td><td> Dim inverse text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorSecondaryNoDisable app.guchagucharr.guchagucharunrecorder:textColorSecondaryNoDisable}</code></td><td> Dim text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorTertiary app.guchagucharr.guchagucharunrecorder:textColorTertiary}</code></td><td> Tertiary text color.</td></tr>
           <tr><td><code>{@link #Theme_textColorTertiaryInverse app.guchagucharr.guchagucharunrecorder:textColorTertiaryInverse}</code></td><td> Tertiary inverse text color, useful for inverted backgrounds.</td></tr>
           <tr><td><code>{@link #Theme_textEditNoPasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditNoPasteWindowLayout}</code></td><td> Variation of textEditPasteWindowLayout displayed when the clipboard is empty.</td></tr>
           <tr><td><code>{@link #Theme_textEditPasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditPasteWindowLayout}</code></td><td> The layout of the view that is displayed on top of the cursor to paste inside a
             TextEdit field.</td></tr>
           <tr><td><code>{@link #Theme_textEditSideNoPasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditSideNoPasteWindowLayout}</code></td><td> Variation of textEditSidePasteWindowLayout displayed when the clipboard is empty.</td></tr>
           <tr><td><code>{@link #Theme_textEditSidePasteWindowLayout app.guchagucharr.guchagucharunrecorder:textEditSidePasteWindowLayout}</code></td><td> Used instead of textEditPasteWindowLayout when the window is moved on the side of the
             insertion cursor because it would be clipped if it were positioned on top.</td></tr>
           <tr><td><code>{@link #Theme_textEditSuggestionItemLayout app.guchagucharr.guchagucharunrecorder:textEditSuggestionItemLayout}</code></td><td> Layout of the TextView item that will populate the suggestion popup window.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandle app.guchagucharr.guchagucharunrecorder:textSelectHandle}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandleLeft app.guchagucharr.guchagucharunrecorder:textSelectHandleLeft}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandleRight app.guchagucharr.guchagucharunrecorder:textSelectHandleRight}</code></td><td> Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region.</td></tr>
           <tr><td><code>{@link #Theme_textSelectHandleWindowStyle app.guchagucharr.guchagucharunrecorder:textSelectHandleWindowStyle}</code></td><td> Reference to a style that will be used for the window containing a text
             selection anchor.</td></tr>
           <tr><td><code>{@link #Theme_textSuggestionsWindowStyle app.guchagucharr.guchagucharunrecorder:textSuggestionsWindowStyle}</code></td><td> Reference to a style that will be used for the window containing a list of possible
             text suggestions in an EditText.</td></tr>
           <tr><td><code>{@link #Theme_textUnderlineColor app.guchagucharr.guchagucharunrecorder:textUnderlineColor}</code></td><td>  The underline color </td></tr>
           <tr><td><code>{@link #Theme_textUnderlineThickness app.guchagucharr.guchagucharunrecorder:textUnderlineThickness}</code></td><td>  The underline thickness </td></tr>
           <tr><td><code>{@link #Theme_textViewStyle app.guchagucharr.guchagucharunrecorder:textViewStyle}</code></td><td> Default TextView style.</td></tr>
           <tr><td><code>{@link #Theme_timePickerStyle app.guchagucharr.guchagucharunrecorder:timePickerStyle}</code></td><td> The TimePicker style.</td></tr>
           <tr><td><code>{@link #Theme_toastFrameBackground app.guchagucharr.guchagucharunrecorder:toastFrameBackground}</code></td><td> Background to use for toasts </td></tr>
           <tr><td><code>{@link #Theme_webTextViewStyle app.guchagucharr.guchagucharunrecorder:webTextViewStyle}</code></td><td> Default WebTextView style.</td></tr>
           <tr><td><code>{@link #Theme_webViewStyle app.guchagucharr.guchagucharunrecorder:webViewStyle}</code></td><td> Default WebView style.</td></tr>
           <tr><td><code>{@link #Theme_windowActionBar app.guchagucharr.guchagucharunrecorder:windowActionBar}</code></td><td> Flag indicating whether this window should have an Action Bar
             in place of the usual title bar.</td></tr>
           <tr><td><code>{@link #Theme_windowActionBarOverlay app.guchagucharr.guchagucharunrecorder:windowActionBarOverlay}</code></td><td> Flag indicating whether this window's Action Bar should overlay
             application content.</td></tr>
           <tr><td><code>{@link #Theme_windowActionModeOverlay app.guchagucharr.guchagucharunrecorder:windowActionModeOverlay}</code></td><td> Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar).</td></tr>
           <tr><td><code>{@link #Theme_windowAnimationStyle app.guchagucharr.guchagucharunrecorder:windowAnimationStyle}</code></td><td> Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}.</td></tr>
           <tr><td><code>{@link #Theme_windowBackground app.guchagucharr.guchagucharunrecorder:windowBackground}</code></td><td> Drawable to use as the overall window background.</td></tr>
           <tr><td><code>{@link #Theme_windowCloseOnTouchOutside app.guchagucharr.guchagucharunrecorder:windowCloseOnTouchOutside}</code></td><td> Control whether a container should automatically close itself if
             the user touches outside of it.</td></tr>
           <tr><td><code>{@link #Theme_windowContentOverlay app.guchagucharr.guchagucharunrecorder:windowContentOverlay}</code></td><td> This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.</td></tr>
           <tr><td><code>{@link #Theme_windowDisablePreview app.guchagucharr.guchagucharunrecorder:windowDisablePreview}</code></td><td> Flag allowing you to disable the preview animation for a window.</td></tr>
           <tr><td><code>{@link #Theme_windowEnableSplitTouch app.guchagucharr.guchagucharunrecorder:windowEnableSplitTouch}</code></td><td> Flag indicating that this window should allow touches to be split
             across other windows that also support split touch.</td></tr>
           <tr><td><code>{@link #Theme_windowFrame app.guchagucharr.guchagucharunrecorder:windowFrame}</code></td><td> Drawable to use as a frame around the window.</td></tr>
           <tr><td><code>{@link #Theme_windowFullscreen app.guchagucharr.guchagucharunrecorder:windowFullscreen}</code></td><td> Flag indicating whether this window should fill the entire screen.</td></tr>
           <tr><td><code>{@link #Theme_windowIsFloating app.guchagucharr.guchagucharunrecorder:windowIsFloating}</code></td><td> Flag indicating whether this is a floating window.</td></tr>
           <tr><td><code>{@link #Theme_windowIsTranslucent app.guchagucharr.guchagucharunrecorder:windowIsTranslucent}</code></td><td> Flag indicating whether this is a translucent window.</td></tr>
           <tr><td><code>{@link #Theme_windowNoDisplay app.guchagucharr.guchagucharunrecorder:windowNoDisplay}</code></td><td> Flag indicating that this window should not be displayed at all.</td></tr>
           <tr><td><code>{@link #Theme_windowNoTitle app.guchagucharr.guchagucharunrecorder:windowNoTitle}</code></td><td> Flag indicating whether there should be no title on this window.</td></tr>
           <tr><td><code>{@link #Theme_windowShowWallpaper app.guchagucharr.guchagucharunrecorder:windowShowWallpaper}</code></td><td> Flag indicating that this window's background should be the
           user's current wallpaper.</td></tr>
           <tr><td><code>{@link #Theme_windowSoftInputMode app.guchagucharr.guchagucharunrecorder:windowSoftInputMode}</code></td><td> Defines the default soft input state that this window would
             like when it is displayed.</td></tr>
           <tr><td><code>{@link #Theme_windowSplitActionBar app.guchagucharr.guchagucharunrecorder:windowSplitActionBar}</code></td><td> Flag indicating that the action bar should be split to provide more
             room for elements.</td></tr>
           <tr><td><code>{@link #Theme_windowTitleBackgroundStyle app.guchagucharr.guchagucharunrecorder:windowTitleBackgroundStyle}</code></td><td> The style resource to use for a window's title area.</td></tr>
           <tr><td><code>{@link #Theme_windowTitleSize app.guchagucharr.guchagucharunrecorder:windowTitleSize}</code></td><td> The style resource to use for a window's title bar height.</td></tr>
           <tr><td><code>{@link #Theme_windowTitleStyle app.guchagucharr.guchagucharunrecorder:windowTitleStyle}</code></td><td> The style resource to use for a window's title text.</td></tr>
           <tr><td><code>{@link #Theme_yesNoPreferenceStyle app.guchagucharr.guchagucharunrecorder:yesNoPreferenceStyle}</code></td><td> Default style for YesNoPreference.</td></tr>
           </table>
           @see #Theme_absListViewStyle
           @see #Theme_accessibilityFocusedDrawable
           @see #Theme_actionBarDivider
           @see #Theme_actionBarItemBackground
           @see #Theme_actionBarSize
           @see #Theme_actionBarSplitStyle
           @see #Theme_actionBarStyle
           @see #Theme_actionBarTabBarStyle
           @see #Theme_actionBarTabStyle
           @see #Theme_actionBarTabTextStyle
           @see #Theme_actionBarWidgetTheme
           @see #Theme_actionButtonStyle
           @see #Theme_actionDropDownStyle
           @see #Theme_actionMenuTextAppearance
           @see #Theme_actionMenuTextColor
           @see #Theme_actionModeBackground
           @see #Theme_actionModeCloseButtonStyle
           @see #Theme_actionModeCloseDrawable
           @see #Theme_actionModeCopyDrawable
           @see #Theme_actionModeCutDrawable
           @see #Theme_actionModeFindDrawable
           @see #Theme_actionModePasteDrawable
           @see #Theme_actionModePopupWindowStyle
           @see #Theme_actionModeSelectAllDrawable
           @see #Theme_actionModeShareDrawable
           @see #Theme_actionModeSplitBackground
           @see #Theme_actionModeStyle
           @see #Theme_actionModeWebSearchDrawable
           @see #Theme_actionOverflowButtonStyle
           @see #Theme_activatedBackgroundIndicator
           @see #Theme_activityChooserViewStyle
           @see #Theme_alertDialogButtonGroupStyle
           @see #Theme_alertDialogCenterButtons
           @see #Theme_alertDialogIcon
           @see #Theme_alertDialogStyle
           @see #Theme_alertDialogTheme
           @see #Theme_autoCompleteTextViewStyle
           @see #Theme_backgroundDimAmount
           @see #Theme_backgroundDimEnabled
           @see #Theme_borderlessButtonStyle
           @see #Theme_buttonStyle
           @see #Theme_buttonStyleInset
           @see #Theme_buttonStyleSmall
           @see #Theme_buttonStyleToggle
           @see #Theme_candidatesTextStyleSpans
           @see #Theme_checkBoxPreferenceStyle
           @see #Theme_checkboxStyle
           @see #Theme_checkedTextViewStyle
           @see #Theme_colorActivatedHighlight
           @see #Theme_colorBackground
           @see #Theme_colorBackgroundCacheHint
           @see #Theme_colorFocusedHighlight
           @see #Theme_colorForeground
           @see #Theme_colorForegroundInverse
           @see #Theme_colorLongPressedHighlight
           @see #Theme_colorMultiSelectHighlight
           @see #Theme_colorPressedHighlight
           @see #Theme_datePickerStyle
           @see #Theme_detailsElementBackground
           @see #Theme_dialogCustomTitleDecorLayout
           @see #Theme_dialogPreferenceStyle
           @see #Theme_dialogTheme
           @see #Theme_dialogTitleDecorLayout
           @see #Theme_dialogTitleIconsDecorLayout
           @see #Theme_disabledAlpha
           @see #Theme_dividerHorizontal
           @see #Theme_dividerVertical
           @see #Theme_dropDownHintAppearance
           @see #Theme_dropDownItemStyle
           @see #Theme_dropDownListViewStyle
           @see #Theme_dropDownSpinnerStyle
           @see #Theme_dropdownListPreferredItemHeight
           @see #Theme_editTextBackground
           @see #Theme_editTextColor
           @see #Theme_editTextPreferenceStyle
           @see #Theme_editTextStyle
           @see #Theme_errorMessageAboveBackground
           @see #Theme_errorMessageBackground
           @see #Theme_expandableListPreferredChildIndicatorLeft
           @see #Theme_expandableListPreferredChildIndicatorRight
           @see #Theme_expandableListPreferredChildPaddingLeft
           @see #Theme_expandableListPreferredItemIndicatorLeft
           @see #Theme_expandableListPreferredItemIndicatorRight
           @see #Theme_expandableListPreferredItemPaddingLeft
           @see #Theme_expandableListViewStyle
           @see #Theme_expandableListViewWhiteStyle
           @see #Theme_fastScrollOverlayPosition
           @see #Theme_fastScrollPreviewBackgroundLeft
           @see #Theme_fastScrollPreviewBackgroundRight
           @see #Theme_fastScrollTextColor
           @see #Theme_fastScrollThumbDrawable
           @see #Theme_fastScrollTrackDrawable
           @see #Theme_findOnPageNextDrawable
           @see #Theme_findOnPagePreviousDrawable
           @see #Theme_galleryItemBackground
           @see #Theme_galleryStyle
           @see #Theme_gestureOverlayViewStyle
           @see #Theme_gridViewStyle
           @see #Theme_homeAsUpIndicator
           @see #Theme_horizontalScrollViewStyle
           @see #Theme_imageButtonStyle
           @see #Theme_imageWellStyle
           @see #Theme_listChoiceBackgroundIndicator
           @see #Theme_listChoiceIndicatorMultiple
           @see #Theme_listChoiceIndicatorSingle
           @see #Theme_listDivider
           @see #Theme_listDividerAlertDialog
           @see #Theme_listPopupWindowStyle
           @see #Theme_listPreferredItemHeight
           @see #Theme_listPreferredItemHeightLarge
           @see #Theme_listPreferredItemHeightSmall
           @see #Theme_listPreferredItemPaddingEnd
           @see #Theme_listPreferredItemPaddingLeft
           @see #Theme_listPreferredItemPaddingRight
           @see #Theme_listPreferredItemPaddingStart
           @see #Theme_listSeparatorTextViewStyle
           @see #Theme_listViewStyle
           @see #Theme_listViewWhiteStyle
           @see #Theme_mapViewStyle
           @see #Theme_mediaRouteButtonStyle
           @see #Theme_numberPickerStyle
           @see #Theme_panelBackground
           @see #Theme_panelColorBackground
           @see #Theme_panelColorForeground
           @see #Theme_panelFullBackground
           @see #Theme_panelMenuIsCompact
           @see #Theme_panelMenuListTheme
           @see #Theme_panelMenuListWidth
           @see #Theme_panelTextAppearance
           @see #Theme_pointerStyle
           @see #Theme_popupMenuStyle
           @see #Theme_popupWindowStyle
           @see #Theme_preferenceCategoryStyle
           @see #Theme_preferenceFragmentStyle
           @see #Theme_preferenceFrameLayoutStyle
           @see #Theme_preferenceInformationStyle
           @see #Theme_preferenceLayoutChild
           @see #Theme_preferencePanelStyle
           @see #Theme_preferenceScreenStyle
           @see #Theme_preferenceStyle
           @see #Theme_presentationTheme
           @see #Theme_progressBarStyle
           @see #Theme_progressBarStyleHorizontal
           @see #Theme_progressBarStyleInverse
           @see #Theme_progressBarStyleLarge
           @see #Theme_progressBarStyleLargeInverse
           @see #Theme_progressBarStyleSmall
           @see #Theme_progressBarStyleSmallInverse
           @see #Theme_progressBarStyleSmallTitle
           @see #Theme_quickContactBadgeOverlay
           @see #Theme_quickContactBadgeStyleSmallWindowLarge
           @see #Theme_quickContactBadgeStyleSmallWindowMedium
           @see #Theme_quickContactBadgeStyleSmallWindowSmall
           @see #Theme_quickContactBadgeStyleWindowLarge
           @see #Theme_quickContactBadgeStyleWindowMedium
           @see #Theme_quickContactBadgeStyleWindowSmall
           @see #Theme_radioButtonStyle
           @see #Theme_ratingBarStyle
           @see #Theme_ratingBarStyleIndicator
           @see #Theme_ratingBarStyleSmall
           @see #Theme_ringtonePreferenceStyle
           @see #Theme_scrollViewStyle
           @see #Theme_searchDialogTheme
           @see #Theme_searchDropdownBackground
           @see #Theme_searchResultListItemHeight
           @see #Theme_searchViewCloseIcon
           @see #Theme_searchViewEditQuery
           @see #Theme_searchViewEditQueryBackground
           @see #Theme_searchViewGoIcon
           @see #Theme_searchViewSearchIcon
           @see #Theme_searchViewTextField
           @see #Theme_searchViewTextFieldRight
           @see #Theme_searchViewVoiceIcon
           @see #Theme_searchWidgetCorpusItemBackground
           @see #Theme_seekBarStyle
           @see #Theme_segmentedButtonStyle
           @see #Theme_selectableItemBackground
           @see #Theme_spinnerDropDownItemStyle
           @see #Theme_spinnerItemStyle
           @see #Theme_spinnerStyle
           @see #Theme_stackViewStyle
           @see #Theme_starStyle
           @see #Theme_switchPreferenceStyle
           @see #Theme_switchStyle
           @see #Theme_tabWidgetStyle
           @see #Theme_textAppearance
           @see #Theme_textAppearanceAutoCorrectionSuggestion
           @see #Theme_textAppearanceButton
           @see #Theme_textAppearanceEasyCorrectSuggestion
           @see #Theme_textAppearanceInverse
           @see #Theme_textAppearanceLarge
           @see #Theme_textAppearanceLargeInverse
           @see #Theme_textAppearanceLargePopupMenu
           @see #Theme_textAppearanceListItem
           @see #Theme_textAppearanceListItemSmall
           @see #Theme_textAppearanceMedium
           @see #Theme_textAppearanceMediumInverse
           @see #Theme_textAppearanceMisspelledSuggestion
           @see #Theme_textAppearanceSearchResultSubtitle
           @see #Theme_textAppearanceSearchResultTitle
           @see #Theme_textAppearanceSmall
           @see #Theme_textAppearanceSmallInverse
           @see #Theme_textAppearanceSmallPopupMenu
           @see #Theme_textCheckMark
           @see #Theme_textCheckMarkInverse
           @see #Theme_textColorAlertDialogListItem
           @see #Theme_textColorHighlightInverse
           @see #Theme_textColorHintInverse
           @see #Theme_textColorLinkInverse
           @see #Theme_textColorPrimary
           @see #Theme_textColorPrimaryDisableOnly
           @see #Theme_textColorPrimaryInverse
           @see #Theme_textColorPrimaryInverseDisableOnly
           @see #Theme_textColorPrimaryInverseNoDisable
           @see #Theme_textColorPrimaryNoDisable
           @see #Theme_textColorSearchUrl
           @see #Theme_textColorSecondary
           @see #Theme_textColorSecondaryInverse
           @see #Theme_textColorSecondaryInverseNoDisable
           @see #Theme_textColorSecondaryNoDisable
           @see #Theme_textColorTertiary
           @see #Theme_textColorTertiaryInverse
           @see #Theme_textEditNoPasteWindowLayout
           @see #Theme_textEditPasteWindowLayout
           @see #Theme_textEditSideNoPasteWindowLayout
           @see #Theme_textEditSidePasteWindowLayout
           @see #Theme_textEditSuggestionItemLayout
           @see #Theme_textSelectHandle
           @see #Theme_textSelectHandleLeft
           @see #Theme_textSelectHandleRight
           @see #Theme_textSelectHandleWindowStyle
           @see #Theme_textSuggestionsWindowStyle
           @see #Theme_textUnderlineColor
           @see #Theme_textUnderlineThickness
           @see #Theme_textViewStyle
           @see #Theme_timePickerStyle
           @see #Theme_toastFrameBackground
           @see #Theme_webTextViewStyle
           @see #Theme_webViewStyle
           @see #Theme_windowActionBar
           @see #Theme_windowActionBarOverlay
           @see #Theme_windowActionModeOverlay
           @see #Theme_windowAnimationStyle
           @see #Theme_windowBackground
           @see #Theme_windowCloseOnTouchOutside
           @see #Theme_windowContentOverlay
           @see #Theme_windowDisablePreview
           @see #Theme_windowEnableSplitTouch
           @see #Theme_windowFrame
           @see #Theme_windowFullscreen
           @see #Theme_windowIsFloating
           @see #Theme_windowIsTranslucent
           @see #Theme_windowNoDisplay
           @see #Theme_windowNoTitle
           @see #Theme_windowShowWallpaper
           @see #Theme_windowSoftInputMode
           @see #Theme_windowSplitActionBar
           @see #Theme_windowTitleBackgroundStyle
           @see #Theme_windowTitleSize
           @see #Theme_windowTitleStyle
           @see #Theme_yesNoPreferenceStyle
         */
        public static final int[] Theme = {
            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
            0x7f010017, 0x7f010018, 0x7f010019, 0x7f01001a,
            0x7f01001b, 0x7f01001c, 0x7f01001d, 0x7f01001e,
            0x7f01001f, 0x7f010020, 0x7f010021, 0x7f010022,
            0x7f010023, 0x7f010024, 0x7f010025, 0x7f010026,
            0x7f010027, 0x7f010028, 0x7f010029, 0x7f01002a,
            0x7f01002b, 0x7f01002c, 0x7f01002d, 0x7f01002e,
            0x7f01002f, 0x7f010030, 0x7f010031, 0x7f010032,
            0x7f010033, 0x7f010034, 0x7f010035, 0x7f010036,
            0x7f010037, 0x7f010038, 0x7f010039, 0x7f01003a,
            0x7f01003b, 0x7f01003c, 0x7f01003d, 0x7f01003e,
            0x7f01003f, 0x7f010040, 0x7f010041, 0x7f010042,
            0x7f010043, 0x7f010044, 0x7f010045, 0x7f010046,
            0x7f010047, 0x7f010048, 0x7f010049, 0x7f01004a,
            0x7f01004b, 0x7f01004c, 0x7f01004d, 0x7f01004e,
            0x7f01004f, 0x7f010050, 0x7f010051, 0x7f010052,
            0x7f010053, 0x7f010054, 0x7f010055, 0x7f010056,
            0x7f010057, 0x7f010058, 0x7f010059, 0x7f01005a,
            0x7f01005b, 0x7f01005c, 0x7f01005d, 0x7f01005e,
            0x7f01005f, 0x7f010060, 0x7f010061, 0x7f010062,
            0x7f010063, 0x7f010064, 0x7f010065, 0x7f010066,
            0x7f010067, 0x7f010068, 0x7f010069, 0x7f01006a,
            0x7f01006b, 0x7f01006c, 0x7f01006d, 0x7f01006e,
            0x7f01006f, 0x7f010070, 0x7f010071, 0x7f010072,
            0x7f010073, 0x7f010074, 0x7f010075, 0x7f010076,
            0x7f010077, 0x7f010078, 0x7f010079, 0x7f01007a,
            0x7f01007b, 0x7f01007c, 0x7f01007d, 0x7f01007e,
            0x7f01007f, 0x7f010080, 0x7f010081, 0x7f010082,
            0x7f010083, 0x7f010084, 0x7f010085, 0x7f010086,
            0x7f010087, 0x7f010088, 0x7f010089, 0x7f01008a,
            0x7f01008b, 0x7f01008c, 0x7f01008d, 0x7f01008e,
            0x7f01008f, 0x7f010090, 0x7f010091, 0x7f010092,
            0x7f010093, 0x7f010094, 0x7f010095, 0x7f010096,
            0x7f010097, 0x7f010098, 0x7f010099, 0x7f01009a,
            0x7f01009b, 0x7f01009c, 0x7f01009d, 0x7f01009e,
            0x7f01009f, 0x7f0100a0, 0x7f0100a1, 0x7f0100a2,
            0x7f0100a3, 0x7f0100a4, 0x7f0100a5, 0x7f0100a6,
            0x7f0100a7, 0x7f0100a8, 0x7f0100a9, 0x7f0100aa,
            0x7f0100ab, 0x7f0100ac, 0x7f0100ad, 0x7f0100ae,
            0x7f0100af, 0x7f0100b0, 0x7f0100b1, 0x7f0100b2,
            0x7f0100b3, 0x7f0100b4, 0x7f0100b5, 0x7f0100b6,
            0x7f0100b7, 0x7f0100b8, 0x7f0100b9, 0x7f0100ba,
            0x7f0100bb, 0x7f0100bc, 0x7f0100bd, 0x7f0100be,
            0x7f0100bf, 0x7f0100c0, 0x7f0100c1, 0x7f0100c2,
            0x7f0100c3, 0x7f0100c4, 0x7f0100c5, 0x7f0100c6,
            0x7f0100c7, 0x7f0100c8, 0x7f0100c9, 0x7f0100ca,
            0x7f0100cb, 0x7f0100cc, 0x7f0100cd, 0x7f0100ce,
            0x7f0100cf, 0x7f0100d0, 0x7f0100d1, 0x7f0100d2,
            0x7f0100d3, 0x7f0100d4, 0x7f0100d5, 0x7f0100d6,
            0x7f0100d7, 0x7f0100d8, 0x7f0100d9, 0x7f0100da,
            0x7f0100db, 0x7f0100dc, 0x7f0100dd, 0x7f0100de,
            0x7f0100df, 0x7f0100e0, 0x7f0100e1, 0x7f0100e2,
            0x7f0100e3, 0x7f0100e4, 0x7f0100e5, 0x7f0100e6,
            0x7f0100e7, 0x7f0100e8, 0x7f0100e9, 0x7f0100ea,
            0x7f0100eb, 0x7f0100ec, 0x7f0100ed, 0x7f0100ee,
            0x7f0100ef, 0x7f0100f0, 0x7f0100f1, 0x7f0100f2,
            0x7f0100f3, 0x7f0100f4, 0x7f0100f5, 0x7f0100f6,
            0x7f0100f7, 0x7f0100f8, 0x7f0100f9, 0x7f0100fa,
            0x7f0100fb, 0x7f0100fc, 0x7f0100fd, 0x7f0100fe,
            0x7f0100ff, 0x7f010100, 0x7f010101, 0x7f010102,
            0x7f010103, 0x7f010104, 0x7f010105, 0x7f010106,
            0x7f010107, 0x7f010108, 0x7f010109, 0x7f01010a,
            0x7f01010b, 0x7f01010c, 0x7f01010d, 0x7f01010e,
            0x7f01010f, 0x7f010110, 0x7f010111, 0x7f010112,
            0x7f010113, 0x7f010114, 0x7f010115, 0x7f010116,
            0x7f010117
        };
        /**
          <p>
          @attr description
           Default AbsListView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:absListViewStyle
        */
        public static final int Theme_absListViewStyle = 117;
        /**
          <p>
          @attr description
           The drawable for accessibility focused views. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:accessibilityFocusedDrawable
        */
        public static final int Theme_accessibilityFocusedDrawable = 258;
        /**
          <p>
          @attr description
           Custom divider drawable to use for elements in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarDivider
        */
        public static final int Theme_actionBarDivider = 192;
        /**
          <p>
          @attr description
           Custom item state list drawable background for action bar items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarItemBackground
        */
        public static final int Theme_actionBarItemBackground = 193;
        /**
          <p>
          @attr description
           Size of the Action Bar, including the contextual
             bar used to present Action Modes. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>wrap_content</code></td><td>0</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarSize
        */
        public static final int Theme_actionBarSize = 191;
        /**
          <p>
          @attr description
           Reference to a style for the split Action Bar. This style
             controls the split component that holds the menu/action
             buttons. actionBarStyle is still used for the primary
             bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarSplitStyle
        */
        public static final int Theme_actionBarSplitStyle = 189;
        /**
          <p>
          @attr description
           Reference to a style for the Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarStyle
        */
        public static final int Theme_actionBarStyle = 188;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#actionBarTabBarStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarTabBarStyle
        */
        public static final int Theme_actionBarTabBarStyle = 185;
        /**
          <p>
          @attr description
           Default style for tabs within an action bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarTabStyle
        */
        public static final int Theme_actionBarTabStyle = 184;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#actionBarTabTextStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarTabTextStyle
        */
        public static final int Theme_actionBarTabTextStyle = 186;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar. Most of the time
             this will be a reference to the current theme, but when
             the action bar has a significantly different contrast
             profile than the rest of the activity the difference
             can become important. If this is set to @null the current
             theme will be used.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionBarWidgetTheme
        */
        public static final int Theme_actionBarWidgetTheme = 190;
        /**
          <p>
          @attr description
           Default action button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionButtonStyle
        */
        public static final int Theme_actionButtonStyle = 151;
        /**
          <p>
          @attr description
           Default ActionBar dropdown style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionDropDownStyle
        */
        public static final int Theme_actionDropDownStyle = 150;
        /**
          <p>
          @attr description
           TextAppearance style that will be applied to text that
             appears within action menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionMenuTextAppearance
        */
        public static final int Theme_actionMenuTextAppearance = 194;
        /**
          <p>
          @attr description
           Color for text that appears within action menu items. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionMenuTextColor
        */
        public static final int Theme_actionMenuTextColor = 195;
        /**
          <p>
          @attr description
           Background drawable to use for action mode UI 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeBackground
        */
        public static final int Theme_actionModeBackground = 198;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#actionModeCloseButtonStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeCloseButtonStyle
        */
        public static final int Theme_actionModeCloseButtonStyle = 197;
        /**
          <p>
          @attr description
           Drawable to use for the close action mode button 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeCloseDrawable
        */
        public static final int Theme_actionModeCloseDrawable = 200;
        /**
          <p>
          @attr description
           Drawable to use for the Copy action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeCopyDrawable
        */
        public static final int Theme_actionModeCopyDrawable = 202;
        /**
          <p>
          @attr description
           Drawable to use for the Cut action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeCutDrawable
        */
        public static final int Theme_actionModeCutDrawable = 201;
        /**
          <p>
          @attr description
           Drawable to use for the Find action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeFindDrawable
        */
        public static final int Theme_actionModeFindDrawable = 206;
        /**
          <p>
          @attr description
           Drawable to use for the Paste action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModePasteDrawable
        */
        public static final int Theme_actionModePasteDrawable = 203;
        /**
          <p>
          @attr description
           PopupWindow style to use for action modes when showing as a window overlay. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModePopupWindowStyle
        */
        public static final int Theme_actionModePopupWindowStyle = 208;
        /**
          <p>
          @attr description
           Drawable to use for the Select all action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeSelectAllDrawable
        */
        public static final int Theme_actionModeSelectAllDrawable = 204;
        /**
          <p>
          @attr description
           Drawable to use for the Share action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeShareDrawable
        */
        public static final int Theme_actionModeShareDrawable = 205;
        /**
          <p>
          @attr description
           Background drawable to use for action mode UI in the lower split bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeSplitBackground
        */
        public static final int Theme_actionModeSplitBackground = 199;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#actionModeStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeStyle
        */
        public static final int Theme_actionModeStyle = 196;
        /**
          <p>
          @attr description
           Drawable to use for the Web Search action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:actionModeWebSearchDrawable
        */
        public static final int Theme_actionModeWebSearchDrawable = 207;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#actionOverflowButtonStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:actionOverflowButtonStyle
        */
        public static final int Theme_actionOverflowButtonStyle = 187;
        /**
          <p>
          @attr description
           Drawable used as a background for activated items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:activatedBackgroundIndicator
        */
        public static final int Theme_activatedBackgroundIndicator = 58;
        /**
          <p>
          @attr description
           Default ActivityChooserView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:activityChooserViewStyle
        */
        public static final int Theme_activityChooserViewStyle = 177;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#alertDialogButtonGroupStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:alertDialogButtonGroupStyle
        */
        public static final int Theme_alertDialogButtonGroupStyle = 106;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#alertDialogCenterButtons}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:alertDialogCenterButtons
        */
        public static final int Theme_alertDialogCenterButtons = 107;
        /**
          <p>
          @attr description
           Icon drawable to use for alerts 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alertDialogIcon
        */
        public static final int Theme_alertDialogIcon = 235;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#alertDialogStyle}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:alertDialogStyle
        */
        public static final int Theme_alertDialogStyle = 105;
        /**
          <p>
          @attr description
           Theme to use for alert dialogs spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alertDialogTheme
        */
        public static final int Theme_alertDialogTheme = 234;
        /**
          <p>
          @attr description
           Default AutoCompleteTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoCompleteTextViewStyle
        */
        public static final int Theme_autoCompleteTextViewStyle = 118;
        /**
          <p>
          @attr description
           Default background dim amount when a menu, dialog, or something similar pops up. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundDimAmount
        */
        public static final int Theme_backgroundDimAmount = 10;
        /**
          <p>
          @attr description
           Control whether dimming behind the window is enabled.  The default
             theme does not set this value, meaning it is based on whether the
             window is floating. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundDimEnabled
        */
        public static final int Theme_backgroundDimEnabled = 11;
        /**
          <p>
          @attr description
           Style for buttons without an explicit border, often used in groups. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:borderlessButtonStyle
        */
        public static final int Theme_borderlessButtonStyle = 241;
        /**
          <p>
          @attr description
           Normal Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:buttonStyle
        */
        public static final int Theme_buttonStyle = 59;
        /**
          <p>
          @attr description
           Button style to inset into an EditText. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:buttonStyleInset
        */
        public static final int Theme_buttonStyleInset = 61;
        /**
          <p>
          @attr description
           Small Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:buttonStyleSmall
        */
        public static final int Theme_buttonStyleSmall = 60;
        /**
          <p>
          @attr description
           ToggleButton style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:buttonStyleToggle
        */
        public static final int Theme_buttonStyleToggle = 62;
        /**
          <p>
          @attr description
           A styled string, specifying the style to be used for showing
             inline candidate text when composing with an input method.  The
             text itself will be ignored, but the style spans will be applied
             to the candidate text as it is edited. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:candidatesTextStyleSpans
        */
        public static final int Theme_candidatesTextStyleSpans = 52;
        /**
          <p>
          @attr description
           Default style for CheckBoxPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkBoxPreferenceStyle
        */
        public static final int Theme_checkBoxPreferenceStyle = 214;
        /**
          <p>
          @attr description
           Default Checkbox style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkboxStyle
        */
        public static final int Theme_checkboxStyle = 119;
        /**
          <p>
          @attr description
           Default CheckedTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:checkedTextViewStyle
        */
        public static final int Theme_checkedTextViewStyle = 120;
        /**
          <p>
          @attr description
           Default highlight color for items that are
             activated. (Activated meaning persistent selection.) 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorActivatedHighlight
        */
        public static final int Theme_colorActivatedHighlight = 7;
        /**
          <p>
          @attr description
           Color that matches (as closely as possible) the window background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorBackground
        */
        public static final int Theme_colorBackground = 2;
        /**
          <p>
          @attr description
           This is a hint for a solid color that can be used for caching
             rendered views.  This should be the color of the background when
             there is a solid background color; it should be null when the
             background is a texture or translucent.  When a device is able
             to use accelerated drawing (thus setting state_accelerated), the
             cache hint is ignored and always assumed to be transparent. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorBackgroundCacheHint
        */
        public static final int Theme_colorBackgroundCacheHint = 3;
        /**
          <p>
          @attr description
           Default highlight color for items that are
             focused. (Focused meaning cursor-based selection.) 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorFocusedHighlight
        */
        public static final int Theme_colorFocusedHighlight = 6;
        /**
          <p>
          @attr description
           Default color of foreground imagery. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorForeground
        */
        public static final int Theme_colorForeground = 0;
        /**
          <p>
          @attr description
           Default color of foreground imagery on an inverted background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorForegroundInverse
        */
        public static final int Theme_colorForegroundInverse = 1;
        /**
          <p>
          @attr description
           Default highlight color for items that are long-pressed. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorLongPressedHighlight
        */
        public static final int Theme_colorLongPressedHighlight = 5;
        /**
          <p>
          @attr description
           Default highlight color for items in multiple selection
             mode. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorMultiSelectHighlight
        */
        public static final int Theme_colorMultiSelectHighlight = 8;
        /**
          <p>
          @attr description
           Default highlight color for items that are pressed. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:colorPressedHighlight
        */
        public static final int Theme_colorPressedHighlight = 4;
        /**
          <p>
          @attr description
           The DatePicker style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:datePickerStyle
        */
        public static final int Theme_datePickerStyle = 176;
        /**
          <p>
          @attr description
           Background that can be used behind parts of a UI that provide
             details on data the user is selecting.  For example, this is
             the background element of PreferenceActivity's embedded
             preference fragment. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:detailsElementBackground
        */
        public static final int Theme_detailsElementBackground = 108;
        /**
          <p>
          @attr description
           Window decor layout to use in dialog mode with custom titles 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogCustomTitleDecorLayout
        */
        public static final int Theme_dialogCustomTitleDecorLayout = 232;
        /**
          <p>
          @attr description
           Default style for DialogPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogPreferenceStyle
        */
        public static final int Theme_dialogPreferenceStyle = 216;
        /**
          <p>
          @attr description
           Theme to use for dialogs spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogTheme
        */
        public static final int Theme_dialogTheme = 230;
        /**
          <p>
          @attr description
           Window decor layout to use in dialog mode with title only 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogTitleDecorLayout
        */
        public static final int Theme_dialogTitleDecorLayout = 233;
        /**
          <p>
          @attr description
           Window decor layout to use in dialog mode with icons 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dialogTitleIconsDecorLayout
        */
        public static final int Theme_dialogTitleIconsDecorLayout = 231;
        /**
          <p>
          @attr description
           Default disabled alpha for widgets that set enabled/disabled alpha programmatically. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:disabledAlpha
        */
        public static final int Theme_disabledAlpha = 9;
        /**
          <p>
          @attr description
           Drawable to use for generic horizontal dividers. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dividerHorizontal
        */
        public static final int Theme_dividerHorizontal = 238;
        /**
          <p>
          @attr description
           Drawable to use for generic vertical dividers. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dividerVertical
        */
        public static final int Theme_dividerVertical = 237;
        /**
          <p>
          @attr description
           Default style for drop down hints. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownHintAppearance
        */
        public static final int Theme_dropDownHintAppearance = 159;
        /**
          <p>
          @attr description
           Default style for drop down items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownItemStyle
        */
        public static final int Theme_dropDownItemStyle = 157;
        /**
          <p>
          @attr description
           Default ListView style for drop downs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownListViewStyle
        */
        public static final int Theme_dropDownListViewStyle = 121;
        /**
          <p>
          @attr description
           Default dropdown Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropDownSpinnerStyle
        */
        public static final int Theme_dropDownSpinnerStyle = 149;
        /**
          <p>
          @attr description
           The preferred item height for dropdown lists. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:dropdownListPreferredItemHeight
        */
        public static final int Theme_dropdownListPreferredItemHeight = 81;
        /**
          <p>
          @attr description
           EditText background drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:editTextBackground
        */
        public static final int Theme_editTextBackground = 49;
        /**
          <p>
          @attr description
           EditText text foreground color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:editTextColor
        */
        public static final int Theme_editTextColor = 48;
        /**
          <p>
          @attr description
           Default style for EditTextPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:editTextPreferenceStyle
        */
        public static final int Theme_editTextPreferenceStyle = 217;
        /**
          <p>
          @attr description
           Default EditText style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:editTextStyle
        */
        public static final int Theme_editTextStyle = 122;
        /**
          <p>
          @attr description
           Background used instead of errorMessageBackground when the popup has to be above. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:errorMessageAboveBackground
        */
        public static final int Theme_errorMessageAboveBackground = 51;
        /**
          <p>
          @attr description
           Popup text displayed in TextView when setError is used. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:errorMessageBackground
        */
        public static final int Theme_errorMessageBackground = 50;
        /**
          <p>
          @attr description
           The preferred left bound for an expandable list child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListPreferredChildIndicatorLeft
        */
        public static final int Theme_expandableListPreferredChildIndicatorLeft = 79;
        /**
          <p>
          @attr description
           The preferred right bound for an expandable list child's indicator. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListPreferredChildIndicatorRight
        */
        public static final int Theme_expandableListPreferredChildIndicatorRight = 80;
        /**
          <p>
          @attr description
           The preferred left padding for an expandable list item that is a child.
             If this is not provided, it defaults to the expandableListPreferredItemPaddingLeft. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListPreferredChildPaddingLeft
        */
        public static final int Theme_expandableListPreferredChildPaddingLeft = 76;
        /**
          <p>
          @attr description
           The preferred left bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorLeft. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListPreferredItemIndicatorLeft
        */
        public static final int Theme_expandableListPreferredItemIndicatorLeft = 77;
        /**
          <p>
          @attr description
           The preferred right bound for an expandable list item's indicator. For a child-specific
             indicator, use expandableListPreferredChildIndicatorRight. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListPreferredItemIndicatorRight
        */
        public static final int Theme_expandableListPreferredItemIndicatorRight = 78;
        /**
          <p>
          @attr description
           The preferred left padding for an expandable list item (for child-specific layouts,
             use expandableListPreferredChildPaddingLeft). This takes into account
             the indicator that will be shown to next to the item. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListPreferredItemPaddingLeft
        */
        public static final int Theme_expandableListPreferredItemPaddingLeft = 75;
        /**
          <p>
          @attr description
           Default ExpandableListView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListViewStyle
        */
        public static final int Theme_expandableListViewStyle = 123;
        /**
          <p>
          @attr description
           ExpandableListView with white background. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:expandableListViewWhiteStyle
        */
        public static final int Theme_expandableListViewWhiteStyle = 124;
        /**
          <p>
          @attr description
           Position of the fast scroll index overlay window. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>floating</code></td><td>0</td><td></td></tr>
<tr><td><code>atThumb</code></td><td>1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollOverlayPosition
        */
        public static final int Theme_fastScrollOverlayPosition = 182;
        /**
          <p>
          @attr description
           Drawable to use as the fast scroll index preview window background
             when shown on the left. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollPreviewBackgroundLeft
        */
        public static final int Theme_fastScrollPreviewBackgroundLeft = 180;
        /**
          <p>
          @attr description
           Drawable to use as the fast scroll index preview window background
             when shown on the right. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollPreviewBackgroundRight
        */
        public static final int Theme_fastScrollPreviewBackgroundRight = 179;
        /**
          <p>
          @attr description
           Text color for the fast scroll index overlay. Make sure it
             plays nicely with fastScrollPreviewBackground[Left|Right]. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollTextColor
        */
        public static final int Theme_fastScrollTextColor = 183;
        /**
          <p>
          @attr description
           Drawable to use as the fast scroll thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollThumbDrawable
        */
        public static final int Theme_fastScrollThumbDrawable = 178;
        /**
          <p>
          @attr description
           Drawable to use as the track for the fast scroll thumb.
             This may be null. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fastScrollTrackDrawable
        */
        public static final int Theme_fastScrollTrackDrawable = 181;
        /**
          <p>
          @attr description
           Drawable for WebView find-on-page dialogue's "next" button. @hide 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:findOnPageNextDrawable
        */
        public static final int Theme_findOnPageNextDrawable = 259;
        /**
          <p>
          @attr description
           Drawable for WebView find-on-page dialogue's "previous" button. @hide 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:findOnPagePreviousDrawable
        */
        public static final int Theme_findOnPagePreviousDrawable = 260;
        /**
          <p>
          @attr description
           The preferred background for gallery items. This should be set
             as the background of any Views you provide from the Adapter. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:galleryItemBackground
        */
        public static final int Theme_galleryItemBackground = 63;
        /**
          <p>
          @attr description
           Default Gallery style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:galleryStyle
        */
        public static final int Theme_galleryStyle = 125;
        /**
          <p>
          @attr description
           Default GestureOverlayView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gestureOverlayViewStyle
        */
        public static final int Theme_gestureOverlayViewStyle = 126;
        /**
          <p>
          @attr description
           Default GridView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:gridViewStyle
        */
        public static final int Theme_gridViewStyle = 127;
        /**
          <p>
          @attr description
           Specifies a drawable to use for the 'home as up' indicator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:homeAsUpIndicator
        */
        public static final int Theme_homeAsUpIndicator = 253;
        /**
          <p>
          @attr description
           Default HorizontalScrollView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:horizontalScrollViewStyle
        */
        public static final int Theme_horizontalScrollViewStyle = 147;
        /**
          <p>
          @attr description
           The style resource to use for an ImageButton. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imageButtonStyle
        */
        public static final int Theme_imageButtonStyle = 128;
        /**
          <p>
          @attr description
           The style resource to use for an ImageButton that is an image well. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:imageWellStyle
        */
        public static final int Theme_imageWellStyle = 129;
        /**
          <p>
          @attr description
           Drawable used as a background for selected list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listChoiceBackgroundIndicator
        */
        public static final int Theme_listChoiceBackgroundIndicator = 57;
        /**
          <p>
          @attr description
           Drawable to use for multiple choice indicators. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listChoiceIndicatorMultiple
        */
        public static final int Theme_listChoiceIndicatorMultiple = 55;
        /**
          <p>
          @attr description
           Drawable to use for single choice indicators. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listChoiceIndicatorSingle
        */
        public static final int Theme_listChoiceIndicatorSingle = 56;
        /**
          <p>
          @attr description
           The drawable for the list divider. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listDivider
        */
        public static final int Theme_listDivider = 72;
        /**
          <p>
          @attr description
           The list divider used in alert dialogs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listDividerAlertDialog
        */
        public static final int Theme_listDividerAlertDialog = 73;
        /**
          <p>
          @attr description
           Default ListPopupWindow style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPopupWindowStyle
        */
        public static final int Theme_listPopupWindowStyle = 171;
        /**
          <p>
          @attr description
           The preferred list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemHeight
        */
        public static final int Theme_listPreferredItemHeight = 64;
        /**
          <p>
          @attr description
           A larger, more robust list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemHeightLarge
        */
        public static final int Theme_listPreferredItemHeightLarge = 66;
        /**
          <p>
          @attr description
           A smaller, sleeker list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemHeightSmall
        */
        public static final int Theme_listPreferredItemHeightSmall = 65;
        /**
          <p>
          @attr description
           The preferred padding along the end edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingEnd
        */
        public static final int Theme_listPreferredItemPaddingEnd = 83;
        /**
          <p>
          @attr description
           The preferred padding along the left edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingLeft
        */
        public static final int Theme_listPreferredItemPaddingLeft = 68;
        /**
          <p>
          @attr description
           The preferred padding along the right edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingRight
        */
        public static final int Theme_listPreferredItemPaddingRight = 69;
        /**
          <p>
          @attr description
           The preferred padding along the start edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listPreferredItemPaddingStart
        */
        public static final int Theme_listPreferredItemPaddingStart = 82;
        /**
          <p>
          @attr description
           TextView style for list separators. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listSeparatorTextViewStyle
        */
        public static final int Theme_listSeparatorTextViewStyle = 74;
        /**
          <p>
          @attr description
           Default ListView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listViewStyle
        */
        public static final int Theme_listViewStyle = 130;
        /**
          <p>
          @attr description
           ListView with white background. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:listViewWhiteStyle
        */
        public static final int Theme_listViewWhiteStyle = 131;
        /**
          <p>
          @attr description
           Default MapView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mapViewStyle
        */
        public static final int Theme_mapViewStyle = 161;
        /**
          <p>
          @attr description
           Default style for the MediaRouteButton widget. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:mediaRouteButtonStyle
        */
        public static final int Theme_mediaRouteButtonStyle = 256;
        /**
          <p>
          @attr description
           NumberPicker style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:numberPickerStyle
        */
        public static final int Theme_numberPickerStyle = 174;
        /**
          <p>
          @attr description
           The background of a panel when it is inset from the left and right edges of the screen. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:panelBackground
        */
        public static final int Theme_panelBackground = 109;
        /**
          <p>
          @attr description
           Color that matches (as closely as possible) the panel background. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:panelColorBackground
        */
        public static final int Theme_panelColorBackground = 112;
        /**
          <p>
          @attr description
           Default color of foreground panel imagery. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:panelColorForeground
        */
        public static final int Theme_panelColorForeground = 111;
        /**
          <p>
          @attr description
           The background of a panel when it extends to the left and right edges of the screen. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:panelFullBackground
        */
        public static final int Theme_panelFullBackground = 110;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#panelMenuIsCompact}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:panelMenuIsCompact
        */
        public static final int Theme_panelMenuIsCompact = 114;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#panelMenuListTheme}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:panelMenuListTheme
        */
        public static final int Theme_panelMenuListTheme = 116;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#panelMenuListWidth}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:panelMenuListWidth
        */
        public static final int Theme_panelMenuListWidth = 115;
        /**
          <p>
          @attr description
           Default appearance of panel text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:panelTextAppearance
        */
        public static final int Theme_panelTextAppearance = 113;
        /**
          <p>
          @attr description
           Reference to the Pointer style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:pointerStyle
        */
        public static final int Theme_pointerStyle = 257;
        /**
          <p>
          @attr description
           Default PopupMenu style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupMenuStyle
        */
        public static final int Theme_popupMenuStyle = 172;
        /**
          <p>
          @attr description
           Default PopupWindow style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:popupWindowStyle
        */
        public static final int Theme_popupWindowStyle = 132;
        /**
          <p>
          @attr description
           Default style for PreferenceCategory. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceCategoryStyle
        */
        public static final int Theme_preferenceCategoryStyle = 211;
        /**
          <p>
          @attr description
           Default style for Headers pane in PreferenceActivity. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceFragmentStyle
        */
        public static final int Theme_preferenceFragmentStyle = 210;
        /**
          <p>
          @attr description
           Preference frame layout styles. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceFrameLayoutStyle
        */
        public static final int Theme_preferenceFrameLayoutStyle = 254;
        /**
          <p>
          @attr description
           Default style for informational Preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceInformationStyle
        */
        public static final int Theme_preferenceInformationStyle = 213;
        /**
          <p>
          @attr description
           The preference layout that has the child/tabbed effect. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceLayoutChild
        */
        public static final int Theme_preferenceLayoutChild = 219;
        /**
          <p>
          @attr description
           Preference panel style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferencePanelStyle
        */
        public static final int Theme_preferencePanelStyle = 220;
        /**
          <p>
          @attr description
           Default style for PreferenceScreen. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceScreenStyle
        */
        public static final int Theme_preferenceScreenStyle = 209;
        /**
          <p>
          @attr description
           Default style for Preference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:preferenceStyle
        */
        public static final int Theme_preferenceStyle = 212;
        /**
          <p>
          @attr description
           Theme to use for presentations spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:presentationTheme
        */
        public static final int Theme_presentationTheme = 236;
        /**
          <p>
          @attr description
           Default ProgressBar style. This is a medium circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyle
        */
        public static final int Theme_progressBarStyle = 133;
        /**
          <p>
          @attr description
           Horizontal ProgressBar style. This is a horizontal progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleHorizontal
        */
        public static final int Theme_progressBarStyleHorizontal = 134;
        /**
          <p>
          @attr description
           Inverse ProgressBar style. This is a medium circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleInverse
        */
        public static final int Theme_progressBarStyleInverse = 138;
        /**
          <p>
          @attr description
           Large ProgressBar style. This is a large circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleLarge
        */
        public static final int Theme_progressBarStyleLarge = 137;
        /**
          <p>
          @attr description
           Large inverse ProgressBar style. This is a large circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleLargeInverse
        */
        public static final int Theme_progressBarStyleLargeInverse = 140;
        /**
          <p>
          @attr description
           Small ProgressBar style. This is a small circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleSmall
        */
        public static final int Theme_progressBarStyleSmall = 135;
        /**
          <p>
          @attr description
           Small inverse ProgressBar style. This is a small circular progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleSmallInverse
        */
        public static final int Theme_progressBarStyleSmallInverse = 139;
        /**
          <p>
          @attr description
           Small ProgressBar in title style. This is a small circular progress bar that will be placed in title bars. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:progressBarStyleSmallTitle
        */
        public static final int Theme_progressBarStyleSmallTitle = 136;
        /**
          <p>
          @attr description
           Drawable used as an overlay on top of quickcontact photos. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeOverlay
        */
        public static final int Theme_quickContactBadgeOverlay = 162;
        /**
          <p>
          @attr description
           Default quickcontact badge style with large quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleSmallWindowLarge
        */
        public static final int Theme_quickContactBadgeStyleSmallWindowLarge = 168;
        /**
          <p>
          @attr description
           Default quickcontact badge style with medium quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleSmallWindowMedium
        */
        public static final int Theme_quickContactBadgeStyleSmallWindowMedium = 167;
        /**
          <p>
          @attr description
           Default quickcontact badge style with small quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleSmallWindowSmall
        */
        public static final int Theme_quickContactBadgeStyleSmallWindowSmall = 166;
        /**
          <p>
          @attr description
           Default quickcontact badge style with large quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleWindowLarge
        */
        public static final int Theme_quickContactBadgeStyleWindowLarge = 165;
        /**
          <p>
          @attr description
           Default quickcontact badge style with medium quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleWindowMedium
        */
        public static final int Theme_quickContactBadgeStyleWindowMedium = 164;
        /**
          <p>
          @attr description
           Default quickcontact badge style with small quickcontact window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:quickContactBadgeStyleWindowSmall
        */
        public static final int Theme_quickContactBadgeStyleWindowSmall = 163;
        /**
          <p>
          @attr description
           Default RadioButton style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:radioButtonStyle
        */
        public static final int Theme_radioButtonStyle = 145;
        /**
          <p>
          @attr description
           Default RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ratingBarStyle
        */
        public static final int Theme_ratingBarStyle = 142;
        /**
          <p>
          @attr description
           Indicator RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ratingBarStyleIndicator
        */
        public static final int Theme_ratingBarStyleIndicator = 143;
        /**
          <p>
          @attr description
           Small indicator RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ratingBarStyleSmall
        */
        public static final int Theme_ratingBarStyleSmall = 144;
        /**
          <p>
          @attr description
           Default style for RingtonePreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:ringtonePreferenceStyle
        */
        public static final int Theme_ringtonePreferenceStyle = 218;
        /**
          <p>
          @attr description
           Default ScrollView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollViewStyle
        */
        public static final int Theme_scrollViewStyle = 146;
        /**
          <p>
          @attr description
           Theme to use for Search Dialogs 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchDialogTheme
        */
        public static final int Theme_searchDialogTheme = 252;
        /**
          <p>
          @attr description
           SearchView dropdown background 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchDropdownBackground
        */
        public static final int Theme_searchDropdownBackground = 243;
        /**
          <p>
          @attr description
           The list item height for search results. @hide 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchResultListItemHeight
        */
        public static final int Theme_searchResultListItemHeight = 67;
        /**
          <p>
          @attr description
           SearchView close button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewCloseIcon
        */
        public static final int Theme_searchViewCloseIcon = 244;
        /**
          <p>
          @attr description
           SearchView query refinement icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewEditQuery
        */
        public static final int Theme_searchViewEditQuery = 248;
        /**
          <p>
          @attr description
           SearchView query refinement icon background 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewEditQueryBackground
        */
        public static final int Theme_searchViewEditQueryBackground = 249;
        /**
          <p>
          @attr description
           SearchView Go button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewGoIcon
        */
        public static final int Theme_searchViewGoIcon = 245;
        /**
          <p>
          @attr description
           SearchView Search icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewSearchIcon
        */
        public static final int Theme_searchViewSearchIcon = 246;
        /**
          <p>
          @attr description
           SearchView text field background for the left section 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewTextField
        */
        public static final int Theme_searchViewTextField = 250;
        /**
          <p>
          @attr description
           SearchView text field background for the right section 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewTextFieldRight
        */
        public static final int Theme_searchViewTextFieldRight = 251;
        /**
          <p>
          @attr description
           SearchView Voice button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchViewVoiceIcon
        */
        public static final int Theme_searchViewVoiceIcon = 247;
        /**
          <p>
          @attr description
           Search widget more corpus result item background. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:searchWidgetCorpusItemBackground
        */
        public static final int Theme_searchWidgetCorpusItemBackground = 31;
        /**
          <p>
          @attr description
           Default SeekBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:seekBarStyle
        */
        public static final int Theme_seekBarStyle = 141;
        /**
          <p>
          @attr description
           Style for segmented buttons - a container that houses several buttons
             with the appearance of a singel button broken into segments. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:segmentedButtonStyle
        */
        public static final int Theme_segmentedButtonStyle = 239;
        /**
          <p>
          @attr description
           Background drawable for standalone items that need focus/pressed states. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:selectableItemBackground
        */
        public static final int Theme_selectableItemBackground = 240;
        /**
          <p>
          @attr description
           Default style for spinner drop down items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:spinnerDropDownItemStyle
        */
        public static final int Theme_spinnerDropDownItemStyle = 158;
        /**
          <p>
          @attr description
           Default spinner item style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:spinnerItemStyle
        */
        public static final int Theme_spinnerItemStyle = 160;
        /**
          <p>
          @attr description
           Default Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:spinnerStyle
        */
        public static final int Theme_spinnerStyle = 148;
        /**
          <p>
          @attr description
           Default StackView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:stackViewStyle
        */
        public static final int Theme_stackViewStyle = 173;
        /**
          <p>
          @attr description
           Default Star style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:starStyle
        */
        public static final int Theme_starStyle = 152;
        /**
          <p>
          @attr description
           Default style for switch preferences. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchPreferenceStyle
        */
        public static final int Theme_switchPreferenceStyle = 221;
        /**
          <p>
          @attr description
           Default style for the Switch widget. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:switchStyle
        */
        public static final int Theme_switchStyle = 255;
        /**
          <p>
          @attr description
           Default TabWidget style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tabWidgetStyle
        */
        public static final int Theme_tabWidgetStyle = 153;
        /**
          <p>
          @attr description
           Default appearance of text: color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearance
        */
        public static final int Theme_textAppearance = 12;
        /**
          <p>
          @attr description
           The underline color and thickness for auto correction suggestion 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceAutoCorrectionSuggestion
        */
        public static final int Theme_textAppearanceAutoCorrectionSuggestion = 45;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for the text inside of a button. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceButton
        */
        public static final int Theme_textAppearanceButton = 40;
        /**
          <p>
          @attr description
           The underline color and thickness for easy correct suggestion 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceEasyCorrectSuggestion
        */
        public static final int Theme_textAppearanceEasyCorrectSuggestion = 43;
        /**
          <p>
          @attr description
           Default appearance of text against an inverted background:
             color, typeface, size, and style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceInverse
        */
        public static final int Theme_textAppearanceInverse = 13;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "large" text. Defaults to primary text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceLarge
        */
        public static final int Theme_textAppearanceLarge = 32;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "large" inverse text. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceLargeInverse
        */
        public static final int Theme_textAppearanceLargeInverse = 35;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for the text inside of a popup menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceLargePopupMenu
        */
        public static final int Theme_textAppearanceLargePopupMenu = 41;
        /**
          <p>
          @attr description
           The preferred TextAppearance for the primary text of list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceListItem
        */
        public static final int Theme_textAppearanceListItem = 70;
        /**
          <p>
          @attr description
           The preferred TextAppearance for the primary text of small list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceListItemSmall
        */
        public static final int Theme_textAppearanceListItemSmall = 71;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "medium" text. Defaults to primary text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceMedium
        */
        public static final int Theme_textAppearanceMedium = 33;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "medium" inverse text. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceMediumInverse
        */
        public static final int Theme_textAppearanceMediumInverse = 36;
        /**
          <p>
          @attr description
           The underline color and thickness for misspelled suggestion 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceMisspelledSuggestion
        */
        public static final int Theme_textAppearanceMisspelledSuggestion = 44;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceSearchResultSubtitle
        */
        public static final int Theme_textAppearanceSearchResultSubtitle = 39;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceSearchResultTitle
        */
        public static final int Theme_textAppearanceSearchResultTitle = 38;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "small" text. Defaults to secondary text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceSmall
        */
        public static final int Theme_textAppearanceSmall = 34;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for "small" inverse text. Defaults to secondary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceSmallInverse
        */
        public static final int Theme_textAppearanceSmallInverse = 37;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for small text inside of a popup menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAppearanceSmallPopupMenu
        */
        public static final int Theme_textAppearanceSmallPopupMenu = 42;
        /**
          <p>
          @attr description
           Drawable to use for check marks. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textCheckMark
        */
        public static final int Theme_textCheckMark = 53;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#textCheckMarkInverse}
          attribute's value can be found in the {@link #Theme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name app.guchagucharr.guchagucharunrecorder:textCheckMarkInverse
        */
        public static final int Theme_textCheckMarkInverse = 54;
        /**
          <p>
          @attr description
           Color of list item text in alert dialogs. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorAlertDialogListItem
        */
        public static final int Theme_textColorAlertDialogListItem = 30;
        /**
          <p>
          @attr description
           Color of highlighted text, when used in a light theme. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorHighlightInverse
        */
        public static final int Theme_textColorHighlightInverse = 28;
        /**
          <p>
          @attr description
           Inverse hint text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorHintInverse
        */
        public static final int Theme_textColorHintInverse = 20;
        /**
          <p>
          @attr description
           Color of link text (URLs), when used in a light theme. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorLinkInverse
        */
        public static final int Theme_textColorLinkInverse = 29;
        /**
          <p>
          @attr description
           The most prominent text color.  


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorPrimary
        */
        public static final int Theme_textColorPrimary = 14;
        /**
          <p>
          @attr description
           Bright text color. Only differentiates based on the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorPrimaryDisableOnly
        */
        public static final int Theme_textColorPrimaryDisableOnly = 21;
        /**
          <p>
          @attr description
           Primary inverse text color, useful for inverted backgrounds. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorPrimaryInverse
        */
        public static final int Theme_textColorPrimaryInverse = 17;
        /**
          <p>
          @attr description
           Bright inverse text color. Only differentiates based on the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorPrimaryInverseDisableOnly
        */
        public static final int Theme_textColorPrimaryInverseDisableOnly = 22;
        /**
          <p>
          @attr description
           Bright inverse text color. This does not differentiate the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorPrimaryInverseNoDisable
        */
        public static final int Theme_textColorPrimaryInverseNoDisable = 25;
        /**
          <p>
          @attr description
           Bright text color. This does not differentiate the disabled state. As an example,
             buttons use this since they display the disabled state via the background and not the
             foreground text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorPrimaryNoDisable
        */
        public static final int Theme_textColorPrimaryNoDisable = 23;
        /**
          <p>
          @attr description
           Text color for urls in search suggestions, used by things like global search and the browser. @hide 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorSearchUrl
        */
        public static final int Theme_textColorSearchUrl = 27;
        /**
          <p>
          @attr description
           Secondary text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorSecondary
        */
        public static final int Theme_textColorSecondary = 15;
        /**
          <p>
          @attr description
           Secondary inverse text color, useful for inverted backgrounds. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorSecondaryInverse
        */
        public static final int Theme_textColorSecondaryInverse = 18;
        /**
          <p>
          @attr description
           Dim inverse text color. This does not differentiate the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorSecondaryInverseNoDisable
        */
        public static final int Theme_textColorSecondaryInverseNoDisable = 26;
        /**
          <p>
          @attr description
           Dim text color. This does not differentiate the disabled state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorSecondaryNoDisable
        */
        public static final int Theme_textColorSecondaryNoDisable = 24;
        /**
          <p>
          @attr description
           Tertiary text color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorTertiary
        */
        public static final int Theme_textColorTertiary = 16;
        /**
          <p>
          @attr description
           Tertiary inverse text color, useful for inverted backgrounds. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColorTertiaryInverse
        */
        public static final int Theme_textColorTertiaryInverse = 19;
        /**
          <p>
          @attr description
           Variation of textEditPasteWindowLayout displayed when the clipboard is empty. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditNoPasteWindowLayout
        */
        public static final int Theme_textEditNoPasteWindowLayout = 226;
        /**
          <p>
          @attr description
           The layout of the view that is displayed on top of the cursor to paste inside a
             TextEdit field. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditPasteWindowLayout
        */
        public static final int Theme_textEditPasteWindowLayout = 225;
        /**
          <p>
          @attr description
           Variation of textEditSidePasteWindowLayout displayed when the clipboard is empty. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditSideNoPasteWindowLayout
        */
        public static final int Theme_textEditSideNoPasteWindowLayout = 228;
        /**
          <p>
          @attr description
           Used instead of textEditPasteWindowLayout when the window is moved on the side of the
             insertion cursor because it would be clipped if it were positioned on top. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditSidePasteWindowLayout
        */
        public static final int Theme_textEditSidePasteWindowLayout = 227;
        /**
          <p>
          @attr description
           Layout of the TextView item that will populate the suggestion popup window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textEditSuggestionItemLayout
        */
        public static final int Theme_textEditSuggestionItemLayout = 229;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor for positioning the cursor within text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandle
        */
        public static final int Theme_textSelectHandle = 224;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the left side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandleLeft
        */
        public static final int Theme_textSelectHandleLeft = 222;
        /**
          <p>
          @attr description
           Reference to a drawable that will be used to display a text selection
             anchor on the right side of a selection region. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandleRight
        */
        public static final int Theme_textSelectHandleRight = 223;
        /**
          <p>
          @attr description
           Reference to a style that will be used for the window containing a text
             selection anchor. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSelectHandleWindowStyle
        */
        public static final int Theme_textSelectHandleWindowStyle = 169;
        /**
          <p>
          @attr description
           Reference to a style that will be used for the window containing a list of possible
             text suggestions in an EditText. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textSuggestionsWindowStyle
        */
        public static final int Theme_textSuggestionsWindowStyle = 170;
        /**
          <p>
          @attr description
            The underline color 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textUnderlineColor
        */
        public static final int Theme_textUnderlineColor = 46;
        /**
          <p>
          @attr description
            The underline thickness 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textUnderlineThickness
        */
        public static final int Theme_textUnderlineThickness = 47;
        /**
          <p>
          @attr description
           Default TextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textViewStyle
        */
        public static final int Theme_textViewStyle = 154;
        /**
          <p>
          @attr description
           The TimePicker style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:timePickerStyle
        */
        public static final int Theme_timePickerStyle = 175;
        /**
          <p>
          @attr description
           Background to use for toasts 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:toastFrameBackground
        */
        public static final int Theme_toastFrameBackground = 242;
        /**
          <p>
          @attr description
           Default WebTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:webTextViewStyle
        */
        public static final int Theme_webTextViewStyle = 155;
        /**
          <p>
          @attr description
           Default WebView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:webViewStyle
        */
        public static final int Theme_webViewStyle = 156;
        /**
          <p>
          @attr description
           Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowActionBar
        */
        public static final int Theme_windowActionBar = 96;
        /**
          <p>
          @attr description
           Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowActionBarOverlay
        */
        public static final int Theme_windowActionBarOverlay = 97;
        /**
          <p>
          @attr description
           Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowActionModeOverlay
        */
        public static final int Theme_windowActionModeOverlay = 98;
        /**
          <p>
          @attr description
           Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowAnimationStyle
        */
        public static final int Theme_windowAnimationStyle = 95;
        /**
          <p>
          @attr description
           Drawable to use as the overall window background.  As of
             {@link android.os.Build.VERSION_CODES#HONEYCOMB}, this may
             be a selector that uses state_accelerated to pick a non-solid
             color when running on devices that can draw such a bitmap
             with complex compositing on top at 60fps.

             <p>There are a few special considerations to use when setting this
             drawable:
             <ul>
             <li> This information will be used to infer the pixel format
                  for your window's surface.  If the drawable has any
                  non-opaque pixels, your window will be translucent
                  (32 bpp).
             <li> If you want to draw the entire background
                  yourself, you should set this drawable to some solid
                  color that closely matches that background (so the
                  system's preview of your window will match), and
                  then in code manually set your window's background to
                  null so it will not be drawn.
             </ul> 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowBackground
        */
        public static final int Theme_windowBackground = 84;
        /**
          <p>
          @attr description
           Control whether a container should automatically close itself if
             the user touches outside of it.  This only applies to activities
             and dialogs.

             <p>Note: this attribute will only be respected for applications
             that are targeting {@link android.os.Build.VERSION_CODES#HONEYCOMB}
             or later. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowCloseOnTouchOutside
        */
        public static final int Theme_windowCloseOnTouchOutside = 104;
        /**
          <p>
          @attr description
           This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.  


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowContentOverlay
        */
        public static final int Theme_windowContentOverlay = 91;
        /**
          <p>
          @attr description
           Flag allowing you to disable the preview animation for a window.
             The default value is false; if set to true, the system can never
             use the window's theme to show a preview of it before your
             actual instance is shown to the user. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowDisablePreview
        */
        public static final int Theme_windowDisablePreview = 101;
        /**
          <p>
          @attr description
           Flag indicating that this window should allow touches to be split
             across other windows that also support split touch.
             The default value is true for applications with a targetSdkVersion
             of Honeycomb or newer; false otherwise.
             When this flag is false, the first pointer that goes down determines
             the window to which all subsequent touches go until all pointers go up.
             When this flag is true, each pointer (not necessarily the first) that
             goes down determines the window to which all subsequent touches of that
             pointer will go until that pointers go up thereby enabling touches
             with multiple pointers to be split across multiple windows. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowEnableSplitTouch
        */
        public static final int Theme_windowEnableSplitTouch = 103;
        /**
          <p>
          @attr description
           Drawable to use as a frame around the window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFrame
        */
        public static final int Theme_windowFrame = 85;
        /**
          <p>
          @attr description
           Flag indicating whether this window should fill the entire screen. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFullscreen
        */
        public static final int Theme_windowFullscreen = 87;
        /**
          <p>
          @attr description
           Flag indicating whether this is a floating window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowIsFloating
        */
        public static final int Theme_windowIsFloating = 88;
        /**
          <p>
          @attr description
           Flag indicating whether this is a translucent window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowIsTranslucent
        */
        public static final int Theme_windowIsTranslucent = 89;
        /**
          <p>
          @attr description
           Flag indicating that this window should not be displayed at all.
             The default value is false; if set to true, and this window is
             the main window of an Activity, then it will never actually
             be added to the window manager.  This means that your activity
             must immediately quit without waiting for user interaction,
             because there will be no such interaction coming. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowNoDisplay
        */
        public static final int Theme_windowNoDisplay = 102;
        /**
          <p>
          @attr description
           Flag indicating whether there should be no title on this window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowNoTitle
        */
        public static final int Theme_windowNoTitle = 86;
        /**
          <p>
          @attr description
           Flag indicating that this window's background should be the
           user's current wallpaper. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowShowWallpaper
        */
        public static final int Theme_windowShowWallpaper = 90;
        /**
          <p>
          @attr description
           Defines the default soft input state that this window would
             like when it is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
<tr><td><code>adjustNothing</code></td><td>0x30</td><td> Don't resize <em>or</em> pan the window to make room for the
                 soft input area; the window is never adjusted for it. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowSoftInputMode
        */
        public static final int Theme_windowSoftInputMode = 100;
        /**
          <p>
          @attr description
           Flag indicating that the action bar should be split to provide more
             room for elements. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowSplitActionBar
        */
        public static final int Theme_windowSplitActionBar = 99;
        /**
          <p>
          @attr description
           The style resource to use for a window's title area. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowTitleBackgroundStyle
        */
        public static final int Theme_windowTitleBackgroundStyle = 94;
        /**
          <p>
          @attr description
           The style resource to use for a window's title bar height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowTitleSize
        */
        public static final int Theme_windowTitleSize = 92;
        /**
          <p>
          @attr description
           The style resource to use for a window's title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowTitleStyle
        */
        public static final int Theme_windowTitleStyle = 93;
        /**
          <p>
          @attr description
           Default style for YesNoPreference. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:yesNoPreferenceStyle
        */
        public static final int Theme_yesNoPreferenceStyle = 215;
        /** Attributes that can be used with a TimePicker.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TimePicker_internalLayout app.guchagucharr.guchagucharunrecorder:internalLayout}</code></td><td> @hide The layout of the time picker.</td></tr>
           </table>
           @see #TimePicker_internalLayout
         */
        public static final int[] TimePicker = {
            0x7f01028b
        };
        /**
          <p>
          @attr description
           @hide The layout of the time picker. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:internalLayout
        */
        public static final int TimePicker_internalLayout = 0;
        /** Attributes that can be used with a ToggleButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ToggleButton_disabledAlpha app.guchagucharr.guchagucharunrecorder:disabledAlpha}</code></td><td> The alpha to apply to the indicator when disabled.</td></tr>
           <tr><td><code>{@link #ToggleButton_textOff app.guchagucharr.guchagucharunrecorder:textOff}</code></td><td> The text for the button when it is not checked.</td></tr>
           <tr><td><code>{@link #ToggleButton_textOn app.guchagucharr.guchagucharunrecorder:textOn}</code></td><td> The text for the button when it is checked.</td></tr>
           </table>
           @see #ToggleButton_disabledAlpha
           @see #ToggleButton_textOff
           @see #ToggleButton_textOn
         */
        public static final int[] ToggleButton = {
            0x7f01001c, 0x7f0101f8, 0x7f0101f9
        };
        /**
          <p>
          @attr description
           The alpha to apply to the indicator when disabled. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:disabledAlpha
        */
        public static final int ToggleButton_disabledAlpha = 0;
        /**
          <p>
          @attr description
           The text for the button when it is not checked. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textOff
        */
        public static final int ToggleButton_textOff = 2;
        /**
          <p>
          @attr description
           The text for the button when it is checked. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textOn
        */
        public static final int ToggleButton_textOn = 1;
        /** Attributes that can be used with a TranslateAnimation.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TranslateAnimation_fromXDelta app.guchagucharr.guchagucharunrecorder:fromXDelta}</code></td><td></td></tr>
           <tr><td><code>{@link #TranslateAnimation_fromYDelta app.guchagucharr.guchagucharunrecorder:fromYDelta}</code></td><td></td></tr>
           <tr><td><code>{@link #TranslateAnimation_toXDelta app.guchagucharr.guchagucharunrecorder:toXDelta}</code></td><td></td></tr>
           <tr><td><code>{@link #TranslateAnimation_toYDelta app.guchagucharr.guchagucharunrecorder:toYDelta}</code></td><td></td></tr>
           </table>
           @see #TranslateAnimation_fromXDelta
           @see #TranslateAnimation_fromYDelta
           @see #TranslateAnimation_toXDelta
           @see #TranslateAnimation_toYDelta
         */
        public static final int[] TranslateAnimation = {
            0x7f01031a, 0x7f01031b, 0x7f01031c, 0x7f01031d
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromXDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromXDelta
        */
        public static final int TranslateAnimation_fromXDelta = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#fromYDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:fromYDelta
        */
        public static final int TranslateAnimation_fromYDelta = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toXDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toXDelta
        */
        public static final int TranslateAnimation_toXDelta = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#toYDelta}
          attribute's value can be found in the {@link #TranslateAnimation} array.


          <p>May be a floating point value, such as "<code>1.2</code>".
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:toYDelta
        */
        public static final int TranslateAnimation_toYDelta = 3;
        /** Attributes that can be used with a TwoLineListItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TwoLineListItem_mode app.guchagucharr.guchagucharunrecorder:mode}</code></td><td></td></tr>
           </table>
           @see #TwoLineListItem_mode
         */
        public static final int[] TwoLineListItem = {
            0x7f01028c
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#mode}
          attribute's value can be found in the {@link #TwoLineListItem} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>oneLine</code></td><td>1</td><td> Always show only the first line. </td></tr>
<tr><td><code>collapsing</code></td><td>2</td><td> When selected show both lines, otherwise show only the first line.
                 This is the default mode. </td></tr>
<tr><td><code>twoLine</code></td><td>3</td><td> Always show both lines. </td></tr>
</table>
          @attr name app.guchagucharr.guchagucharunrecorder:mode
        */
        public static final int TwoLineListItem_mode = 0;
        /** Attributes that can be used with a VerticalSlider_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #VerticalSlider_Layout_layout_scale app.guchagucharr.guchagucharunrecorder:layout_scale}</code></td><td></td></tr>
           </table>
           @see #VerticalSlider_Layout_layout_scale
         */
        public static final int[] VerticalSlider_Layout = {
            0x7f0102bc
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#layout_scale}
          attribute's value can be found in the {@link #VerticalSlider_Layout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_scale
        */
        public static final int VerticalSlider_Layout_layout_scale = 0;
        /**  Attributes that can be used with {@link android.view.View} or
         any of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that are processed by the view's parent. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #View_alpha app.guchagucharr.guchagucharunrecorder:alpha}</code></td><td> alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).</td></tr>
           <tr><td><code>{@link #View_background app.guchagucharr.guchagucharunrecorder:background}</code></td><td> A drawable to use as the background.</td></tr>
           <tr><td><code>{@link #View_clickable app.guchagucharr.guchagucharunrecorder:clickable}</code></td><td> Defines whether this view reacts to click events.</td></tr>
           <tr><td><code>{@link #View_contentDescription app.guchagucharr.guchagucharunrecorder:contentDescription}</code></td><td> Defines text that briefly describes content of the view.</td></tr>
           <tr><td><code>{@link #View_drawingCacheQuality app.guchagucharr.guchagucharunrecorder:drawingCacheQuality}</code></td><td> Defines the quality of translucent drawing caches.</td></tr>
           <tr><td><code>{@link #View_duplicateParentState app.guchagucharr.guchagucharunrecorder:duplicateParentState}</code></td><td> When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.</td></tr>
           <tr><td><code>{@link #View_fadeScrollbars app.guchagucharr.guchagucharunrecorder:fadeScrollbars}</code></td><td> Defines whether to fade out scrollbars when they are not in use.</td></tr>
           <tr><td><code>{@link #View_fadingEdge app.guchagucharr.guchagucharunrecorder:fadingEdge}</code></td><td> This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).</td></tr>
           <tr><td><code>{@link #View_fadingEdgeLength app.guchagucharr.guchagucharunrecorder:fadingEdgeLength}</code></td><td> Defines the length of the fading edges.</td></tr>
           <tr><td><code>{@link #View_filterTouchesWhenObscured app.guchagucharr.guchagucharunrecorder:filterTouchesWhenObscured}</code></td><td> Specifies whether to filter touches when the view's window is obscured by
             another visible window.</td></tr>
           <tr><td><code>{@link #View_fitsSystemWindows app.guchagucharr.guchagucharunrecorder:fitsSystemWindows}</code></td><td> Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.</td></tr>
           <tr><td><code>{@link #View_focusable app.guchagucharr.guchagucharunrecorder:focusable}</code></td><td> Boolean that controls whether a view can take focus.</td></tr>
           <tr><td><code>{@link #View_focusableInTouchMode app.guchagucharr.guchagucharunrecorder:focusableInTouchMode}</code></td><td> Boolean that controls whether a view can take focus while in touch mode.</td></tr>
           <tr><td><code>{@link #View_hapticFeedbackEnabled app.guchagucharr.guchagucharunrecorder:hapticFeedbackEnabled}</code></td><td> Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.</td></tr>
           <tr><td><code>{@link #View_id app.guchagucharr.guchagucharunrecorder:id}</code></td><td> Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.</td></tr>
           <tr><td><code>{@link #View_importantForAccessibility app.guchagucharr.guchagucharunrecorder:importantForAccessibility}</code></td><td> Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen.</td></tr>
           <tr><td><code>{@link #View_isScrollContainer app.guchagucharr.guchagucharunrecorder:isScrollContainer}</code></td><td> Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.</td></tr>
           <tr><td><code>{@link #View_keepScreenOn app.guchagucharr.guchagucharunrecorder:keepScreenOn}</code></td><td> Controls whether the view's window should keep the screen on
             while visible.</td></tr>
           <tr><td><code>{@link #View_labelFor app.guchagucharr.guchagucharunrecorder:labelFor}</code></td><td> Specifies the id of a view for which this view serves as a label for
             accessibility purposes.</td></tr>
           <tr><td><code>{@link #View_layerType app.guchagucharr.guchagucharunrecorder:layerType}</code></td><td> Specifies the type of layer backing this view.</td></tr>
           <tr><td><code>{@link #View_layoutDirection app.guchagucharr.guchagucharunrecorder:layoutDirection}</code></td><td> Defines the direction of layout drawing.</td></tr>
           <tr><td><code>{@link #View_longClickable app.guchagucharr.guchagucharunrecorder:longClickable}</code></td><td> Defines whether this view reacts to long click events.</td></tr>
           <tr><td><code>{@link #View_minHeight app.guchagucharr.guchagucharunrecorder:minHeight}</code></td><td> Defines the minimum height of the view.</td></tr>
           <tr><td><code>{@link #View_minWidth app.guchagucharr.guchagucharunrecorder:minWidth}</code></td><td> Defines the minimum width of the view.</td></tr>
           <tr><td><code>{@link #View_nextFocusDown app.guchagucharr.guchagucharunrecorder:nextFocusDown}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusForward app.guchagucharr.guchagucharunrecorder:nextFocusForward}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusLeft app.guchagucharr.guchagucharunrecorder:nextFocusLeft}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.</td></tr>
           <tr><td><code>{@link #View_nextFocusRight app.guchagucharr.guchagucharunrecorder:nextFocusRight}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusUp app.guchagucharr.guchagucharunrecorder:nextFocusUp}</code></td><td> Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_onClick app.guchagucharr.guchagucharunrecorder:onClick}</code></td><td> Name of the method in this View's context to invoke when the view is
             clicked.</td></tr>
           <tr><td><code>{@link #View_overScrollMode app.guchagucharr.guchagucharunrecorder:overScrollMode}</code></td><td> Defines over-scrolling behavior.</td></tr>
           <tr><td><code>{@link #View_padding app.guchagucharr.guchagucharunrecorder:padding}</code></td><td> Sets the padding, in pixels, of all four edges.</td></tr>
           <tr><td><code>{@link #View_paddingBottom app.guchagucharr.guchagucharunrecorder:paddingBottom}</code></td><td> Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingEnd app.guchagucharr.guchagucharunrecorder:paddingEnd}</code></td><td> Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingLeft app.guchagucharr.guchagucharunrecorder:paddingLeft}</code></td><td> Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingRight app.guchagucharr.guchagucharunrecorder:paddingRight}</code></td><td> Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingStart app.guchagucharr.guchagucharunrecorder:paddingStart}</code></td><td> Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingTop app.guchagucharr.guchagucharunrecorder:paddingTop}</code></td><td> Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_requiresFadingEdge app.guchagucharr.guchagucharunrecorder:requiresFadingEdge}</code></td><td> Defines which edges should be faded on scrolling.</td></tr>
           <tr><td><code>{@link #View_rotation app.guchagucharr.guchagucharunrecorder:rotation}</code></td><td> rotation of the view, in degrees.</td></tr>
           <tr><td><code>{@link #View_rotationX app.guchagucharr.guchagucharunrecorder:rotationX}</code></td><td> rotation of the view around the x axis, in degrees.</td></tr>
           <tr><td><code>{@link #View_rotationY app.guchagucharr.guchagucharunrecorder:rotationY}</code></td><td> rotation of the view around the y axis, in degrees.</td></tr>
           <tr><td><code>{@link #View_saveEnabled app.guchagucharr.guchagucharunrecorder:saveEnabled}</code></td><td> If unset, no state will be saved for this view when it is being
             frozen.</td></tr>
           <tr><td><code>{@link #View_scaleX app.guchagucharr.guchagucharunrecorder:scaleX}</code></td><td> scale of the view in the x direction.</td></tr>
           <tr><td><code>{@link #View_scaleY app.guchagucharr.guchagucharunrecorder:scaleY}</code></td><td> scale of the view in the y direction.</td></tr>
           <tr><td><code>{@link #View_scrollX app.guchagucharr.guchagucharunrecorder:scrollX}</code></td><td> The initial horizontal scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollY app.guchagucharr.guchagucharunrecorder:scrollY}</code></td><td> The initial vertical scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawHorizontalTrack app.guchagucharr.guchagucharunrecorder:scrollbarAlwaysDrawHorizontalTrack}</code></td><td> Defines whether the horizontal scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawVerticalTrack app.guchagucharr.guchagucharunrecorder:scrollbarAlwaysDrawVerticalTrack}</code></td><td> Defines whether the vertical scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarDefaultDelayBeforeFade app.guchagucharr.guchagucharunrecorder:scrollbarDefaultDelayBeforeFade}</code></td><td> Defines the delay in milliseconds that a scrollbar waits before fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarFadeDuration app.guchagucharr.guchagucharunrecorder:scrollbarFadeDuration}</code></td><td> Defines the delay in milliseconds that a scrollbar takes to fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarSize app.guchagucharr.guchagucharunrecorder:scrollbarSize}</code></td><td> Sets the width of vertical scrollbars and height of horizontal scrollbars.</td></tr>
           <tr><td><code>{@link #View_scrollbarStyle app.guchagucharr.guchagucharunrecorder:scrollbarStyle}</code></td><td> Controls the scrollbar style and position.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbHorizontal app.guchagucharr.guchagucharunrecorder:scrollbarThumbHorizontal}</code></td><td> Defines the horizontal scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbVertical app.guchagucharr.guchagucharunrecorder:scrollbarThumbVertical}</code></td><td> Defines the vertical scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackHorizontal app.guchagucharr.guchagucharunrecorder:scrollbarTrackHorizontal}</code></td><td> Defines the horizontal scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackVertical app.guchagucharr.guchagucharunrecorder:scrollbarTrackVertical}</code></td><td> Defines the vertical scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbars app.guchagucharr.guchagucharunrecorder:scrollbars}</code></td><td> Defines which scrollbars should be displayed on scrolling or not.</td></tr>
           <tr><td><code>{@link #View_soundEffectsEnabled app.guchagucharr.guchagucharunrecorder:soundEffectsEnabled}</code></td><td> Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.</td></tr>
           <tr><td><code>{@link #View_tag app.guchagucharr.guchagucharunrecorder:tag}</code></td><td> Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.</td></tr>
           <tr><td><code>{@link #View_textAlignment app.guchagucharr.guchagucharunrecorder:textAlignment}</code></td><td> Defines the alignment of the text.</td></tr>
           <tr><td><code>{@link #View_textDirection app.guchagucharr.guchagucharunrecorder:textDirection}</code></td><td> Defines the direction of the text.</td></tr>
           <tr><td><code>{@link #View_transformPivotX app.guchagucharr.guchagucharunrecorder:transformPivotX}</code></td><td> x location of the pivot point around which the view will rotate and scale.</td></tr>
           <tr><td><code>{@link #View_transformPivotY app.guchagucharr.guchagucharunrecorder:transformPivotY}</code></td><td> y location of the pivot point around which the view will rotate and scale.</td></tr>
           <tr><td><code>{@link #View_translationX app.guchagucharr.guchagucharunrecorder:translationX}</code></td><td> translation in x of the view.</td></tr>
           <tr><td><code>{@link #View_translationY app.guchagucharr.guchagucharunrecorder:translationY}</code></td><td> translation in y of the view.</td></tr>
           <tr><td><code>{@link #View_verticalScrollbarPosition app.guchagucharr.guchagucharunrecorder:verticalScrollbarPosition}</code></td><td> Determines which side the vertical scroll bar should be placed on.</td></tr>
           <tr><td><code>{@link #View_visibility app.guchagucharr.guchagucharunrecorder:visibility}</code></td><td> Controls the initial visibility of the view.</td></tr>
           </table>
           @see #View_alpha
           @see #View_background
           @see #View_clickable
           @see #View_contentDescription
           @see #View_drawingCacheQuality
           @see #View_duplicateParentState
           @see #View_fadeScrollbars
           @see #View_fadingEdge
           @see #View_fadingEdgeLength
           @see #View_filterTouchesWhenObscured
           @see #View_fitsSystemWindows
           @see #View_focusable
           @see #View_focusableInTouchMode
           @see #View_hapticFeedbackEnabled
           @see #View_id
           @see #View_importantForAccessibility
           @see #View_isScrollContainer
           @see #View_keepScreenOn
           @see #View_labelFor
           @see #View_layerType
           @see #View_layoutDirection
           @see #View_longClickable
           @see #View_minHeight
           @see #View_minWidth
           @see #View_nextFocusDown
           @see #View_nextFocusForward
           @see #View_nextFocusLeft
           @see #View_nextFocusRight
           @see #View_nextFocusUp
           @see #View_onClick
           @see #View_overScrollMode
           @see #View_padding
           @see #View_paddingBottom
           @see #View_paddingEnd
           @see #View_paddingLeft
           @see #View_paddingRight
           @see #View_paddingStart
           @see #View_paddingTop
           @see #View_requiresFadingEdge
           @see #View_rotation
           @see #View_rotationX
           @see #View_rotationY
           @see #View_saveEnabled
           @see #View_scaleX
           @see #View_scaleY
           @see #View_scrollX
           @see #View_scrollY
           @see #View_scrollbarAlwaysDrawHorizontalTrack
           @see #View_scrollbarAlwaysDrawVerticalTrack
           @see #View_scrollbarDefaultDelayBeforeFade
           @see #View_scrollbarFadeDuration
           @see #View_scrollbarSize
           @see #View_scrollbarStyle
           @see #View_scrollbarThumbHorizontal
           @see #View_scrollbarThumbVertical
           @see #View_scrollbarTrackHorizontal
           @see #View_scrollbarTrackVertical
           @see #View_scrollbars
           @see #View_soundEffectsEnabled
           @see #View_tag
           @see #View_textAlignment
           @see #View_textDirection
           @see #View_transformPivotX
           @see #View_transformPivotY
           @see #View_translationX
           @see #View_translationY
           @see #View_verticalScrollbarPosition
           @see #View_visibility
         */
        public static final int[] View = {
            0x7f010162, 0x7f010163, 0x7f010164, 0x7f010165,
            0x7f010166, 0x7f010167, 0x7f010168, 0x7f010169,
            0x7f01016a, 0x7f01016b, 0x7f01016c, 0x7f01016d,
            0x7f01016e, 0x7f01016f, 0x7f010170, 0x7f010171,
            0x7f010172, 0x7f010173, 0x7f010174, 0x7f010175,
            0x7f010176, 0x7f010177, 0x7f010178, 0x7f010179,
            0x7f01017a, 0x7f01017b, 0x7f01017c, 0x7f01017d,
            0x7f01017e, 0x7f01017f, 0x7f010180, 0x7f010181,
            0x7f010182, 0x7f010183, 0x7f010184, 0x7f010185,
            0x7f010186, 0x7f010187, 0x7f010188, 0x7f010189,
            0x7f01018a, 0x7f01018b, 0x7f01018c, 0x7f01018d,
            0x7f01018e, 0x7f01018f, 0x7f010190, 0x7f010191,
            0x7f010192, 0x7f010193, 0x7f010194, 0x7f010195,
            0x7f010196, 0x7f010197, 0x7f010198, 0x7f010199,
            0x7f01019a, 0x7f01019b, 0x7f01019c, 0x7f01019d,
            0x7f01019e, 0x7f01019f, 0x7f0101a0, 0x7f0101a1,
            0x7f0101a2, 0x7f0101a3, 0x7f010226, 0x7f010227
        };
        /**
          <p>
          @attr description
           alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque). 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alpha
        */
        public static final int View_alpha = 49;
        /**
          <p>
          @attr description
           A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black). 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:background
        */
        public static final int View_background = 4;
        /**
          <p>
          @attr description
           Defines whether this view reacts to click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:clickable
        */
        public static final int View_clickable = 37;
        /**
          <p>
          @attr description
           Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:contentDescription
        */
        public static final int View_contentDescription = 46;
        /**
          <p>
          @attr description
           Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> Lets the framework decide what quality level should be used
                 for the drawing cache. </td></tr>
<tr><td><code>low</code></td><td>1</td><td> Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory. </td></tr>
<tr><td><code>high</code></td><td>2</td><td> High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:drawingCacheQuality
        */
        public static final int View_drawingCacheQuality = 41;
        /**
          <p>
          @attr description
           When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:duplicateParentState
        */
        public static final int View_duplicateParentState = 43;
        /**
          <p>
          @attr description
           Defines whether to fade out scrollbars when they are not in use. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fadeScrollbars
        */
        public static final int View_fadeScrollbars = 19;
        /**
          <p>
          @attr description
           This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).
             Using fading edges may introduce noticeable performance
             degradations and should be used only when required by the application's
             visual design. To request fading edges with API level 14 and above,
             use the <code>android:requiresFadingEdge</code> attribute instead. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fadingEdge
        */
        public static final int View_fadingEdge = 29;
        /**
          <p>
          @attr description
           Defines the length of the fading edges. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fadingEdgeLength
        */
        public static final int View_fadingEdgeLength = 31;
        /**
          <p>
          @attr description
           Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:filterTouchesWhenObscured
        */
        public static final int View_filterTouchesWhenObscured = 40;
        /**
          <p>
          @attr description
           Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:fitsSystemWindows
        */
        public static final int View_fitsSystemWindows = 15;
        /**
          <p>
          @attr description
           Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:focusable
        */
        public static final int View_focusable = 12;
        /**
          <p>
          @attr description
           Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:focusableInTouchMode
        */
        public static final int View_focusableInTouchMode = 13;
        /**
          <p>
          @attr description
           Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:hapticFeedbackEnabled
        */
        public static final int View_hapticFeedbackEnabled = 45;
        /**
          <p>
          @attr description
           Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:id
        */
        public static final int View_id = 0;
        /**
          <p>
          @attr description
           Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen. Note: While not recommended, an accessibility service may
             decide to ignore this attribute and operate on all views in the view tree. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td> The system determines whether the view is important for accessibility - default
                 (recommended). </td></tr>
<tr><td><code>yes</code></td><td>1</td><td> The view is important for accessibility. </td></tr>
<tr><td><code>no</code></td><td>2</td><td> The view is not important for accessibility. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:importantForAccessibility
        */
        public static final int View_importantForAccessibility = 64;
        /**
          <p>
          @attr description
           Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:isScrollContainer
        */
        public static final int View_isScrollContainer = 18;
        /**
          <p>
          @attr description
           Controls whether the view's window should keep the screen on
             while visible. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:keepScreenOn
        */
        public static final int View_keepScreenOn = 42;
        /**
          <p>
          @attr description
           Specifies the id of a view for which this view serves as a label for
             accessibility purposes. For example, a TextView before an EditText in
             the UI usually specifies what infomation is contained in the EditText.
             Hence, the TextView is a label for the EditText. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:labelFor
        */
        public static final int View_labelFor = 65;
        /**
          <p>
          @attr description
           Specifies the type of layer backing this view. The default value is none.
             Refer to {@link android.view.View#setLayerType(int, android.graphics.Paint)}
             for more information.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't use a layer. </td></tr>
<tr><td><code>software</code></td><td>1</td><td> Use a software layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information. </td></tr>
<tr><td><code>hardware</code></td><td>2</td><td> Use a hardware layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layerType
        */
        public static final int View_layerType = 60;
        /**
          <p>
          @attr description
           Defines the direction of layout drawing. This typically is associated with writing
             direction of the language script used. The possible values are "ltr" for Left-to-Right,
             "rtl" for Right-to-Left, "locale" and "inherit" from parent view. If there is nothing
             to inherit, "locale" is used. "locale" falls back to "en-US". "ltr" is the direction
             used in "en-US". The default for this attribute is "inherit". 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ltr</code></td><td>0</td><td> Left-to-Right </td></tr>
<tr><td><code>rtl</code></td><td>1</td><td> Right-to-Left </td></tr>
<tr><td><code>inherit</code></td><td>2</td><td> Inherit from parent </td></tr>
<tr><td><code>locale</code></td><td>3</td><td> Locale </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layoutDirection
        */
        public static final int View_layoutDirection = 61;
        /**
          <p>
          @attr description
           Defines whether this view reacts to long click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:longClickable
        */
        public static final int View_longClickable = 38;
        /**
          <p>
          @attr description
           Defines the minimum height of the view. It is not guaranteed
             the view will be able to achieve this minimum height (for example,
             if its parent layout constrains it with less available height). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minHeight
        */
        public static final int View_minHeight = 67;
        /**
          <p>
          @attr description
           Defines the minimum width of the view. It is not guaranteed
             the view will be able to achieve this minimum width (for example,
             if its parent layout constrains it with less available width). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:minWidth
        */
        public static final int View_minWidth = 66;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:nextFocusDown
        */
        public static final int View_nextFocusDown = 35;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:nextFocusForward
        */
        public static final int View_nextFocusForward = 36;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:nextFocusLeft
        */
        public static final int View_nextFocusLeft = 32;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:nextFocusRight
        */
        public static final int View_nextFocusRight = 33;
        /**
          <p>
          @attr description
           Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:nextFocusUp
        */
        public static final int View_nextFocusUp = 34;
        /**
          <p>
          @attr description
           Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity). 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:onClick
        */
        public static final int View_onClick = 47;
        /**
          <p>
          @attr description
           Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td> Always show over-scroll effects, even if the content fits entirely
                 within the available space. </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td> Only show over-scroll effects if the content is large
                 enough to meaningfully scroll. </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:overScrollMode
        */
        public static final int View_overScrollMode = 48;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:padding
        */
        public static final int View_padding = 5;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:paddingBottom
        */
        public static final int View_paddingBottom = 9;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:paddingEnd
        */
        public static final int View_paddingEnd = 11;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:paddingLeft
        */
        public static final int View_paddingLeft = 6;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:paddingRight
        */
        public static final int View_paddingRight = 8;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:paddingStart
        */
        public static final int View_paddingStart = 10;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:paddingTop
        */
        public static final int View_paddingTop = 7;
        /**
          <p>
          @attr description
           Defines which edges should be faded on scrolling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:requiresFadingEdge
        */
        public static final int View_requiresFadingEdge = 30;
        /**
          <p>
          @attr description
           rotation of the view, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rotation
        */
        public static final int View_rotation = 54;
        /**
          <p>
          @attr description
           rotation of the view around the x axis, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rotationX
        */
        public static final int View_rotationX = 55;
        /**
          <p>
          @attr description
           rotation of the view around the y axis, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:rotationY
        */
        public static final int View_rotationY = 56;
        /**
          <p>
          @attr description
           If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:saveEnabled
        */
        public static final int View_saveEnabled = 39;
        /**
          <p>
          @attr description
           scale of the view in the x direction. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scaleX
        */
        public static final int View_scaleX = 57;
        /**
          <p>
          @attr description
           scale of the view in the y direction. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scaleY
        */
        public static final int View_scaleY = 58;
        /**
          <p>
          @attr description
           The initial horizontal scroll offset, in pixels.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollX
        */
        public static final int View_scrollX = 2;
        /**
          <p>
          @attr description
           The initial vertical scroll offset, in pixels. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollY
        */
        public static final int View_scrollY = 3;
        /**
          <p>
          @attr description
           Defines whether the horizontal scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarAlwaysDrawHorizontalTrack
        */
        public static final int View_scrollbarAlwaysDrawHorizontalTrack = 27;
        /**
          <p>
          @attr description
           Defines whether the vertical scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarAlwaysDrawVerticalTrack
        */
        public static final int View_scrollbarAlwaysDrawVerticalTrack = 28;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar waits before fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarDefaultDelayBeforeFade
        */
        public static final int View_scrollbarDefaultDelayBeforeFade = 21;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar takes to fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarFadeDuration
        */
        public static final int View_scrollbarFadeDuration = 20;
        /**
          <p>
          @attr description
           Sets the width of vertical scrollbars and height of horizontal scrollbars. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarSize
        */
        public static final int View_scrollbarSize = 22;
        /**
          <p>
          @attr description
           Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarStyle
        */
        public static final int View_scrollbarStyle = 17;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarThumbHorizontal
        */
        public static final int View_scrollbarThumbHorizontal = 23;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarThumbVertical
        */
        public static final int View_scrollbarThumbVertical = 24;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarTrackHorizontal
        */
        public static final int View_scrollbarTrackHorizontal = 25;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbarTrackVertical
        */
        public static final int View_scrollbarTrackVertical = 26;
        /**
          <p>
          @attr description
           Defines which scrollbars should be displayed on scrolling or not. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:scrollbars
        */
        public static final int View_scrollbars = 16;
        /**
          <p>
          @attr description
           Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:soundEffectsEnabled
        */
        public static final int View_soundEffectsEnabled = 44;
        /**
          <p>
          @attr description
           Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:tag
        */
        public static final int View_tag = 1;
        /**
          <p>
          @attr description
           Defines the alignment of the text. A heuristic is used to determine the resolved
            text alignment. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>gravity</code></td><td>1</td><td> Default for the root view. The gravity determines the alignment, ALIGN_NORMAL,
                ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph’s
                text direction </td></tr>
<tr><td><code>textStart</code></td><td>2</td><td> Align to the start of the paragraph, e.g. ALIGN_NORMAL. </td></tr>
<tr><td><code>textEnd</code></td><td>3</td><td> Align to the end of the paragraph, e.g. ALIGN_OPPOSITE. </td></tr>
<tr><td><code>center</code></td><td>4</td><td> Center the paragraph, e.g. ALIGN_CENTER. </td></tr>
<tr><td><code>viewStart</code></td><td>5</td><td> Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
                layoutDirection is LTR, and ALIGN_RIGHT otherwise. </td></tr>
<tr><td><code>viewEnd</code></td><td>6</td><td> Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
                layoutDirection is LTR, and ALIGN_LEFT otherwise </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textAlignment
        */
        public static final int View_textAlignment = 63;
        /**
          <p>
          @attr description
           Defines the direction of the text. A heuristic is used to determine the resolved text
              direction of paragraphs. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>firstStrong</code></td><td>1</td><td> Default for the root view. The first strong directional character determines the
                 paragraph direction.  If there is no strong directional character, the paragraph
                 direction is the view’s resolved layout direction. </td></tr>
<tr><td><code>anyRtl</code></td><td>2</td><td> The paragraph direction is RTL if it contains any strong RTL character, otherwise
                 it is LTR if it contains any strong LTR characters.  If there are neither, the
                 paragraph direction is the view’s resolved layout direction. </td></tr>
<tr><td><code>ltr</code></td><td>3</td><td> The paragraph direction is left to right. </td></tr>
<tr><td><code>rtl</code></td><td>4</td><td> The paragraph direction is right to left. </td></tr>
<tr><td><code>locale</code></td><td>5</td><td> The paragraph direction is coming from the system Locale. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textDirection
        */
        public static final int View_textDirection = 62;
        /**
          <p>
          @attr description
           x location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotX property of the View. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:transformPivotX
        */
        public static final int View_transformPivotX = 52;
        /**
          <p>
          @attr description
           y location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotY property of the View. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:transformPivotY
        */
        public static final int View_transformPivotY = 53;
        /**
          <p>
          @attr description
           translation in x of the view. This value is added post-layout to the left
             property of the view, which is set by its layout. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:translationX
        */
        public static final int View_translationX = 50;
        /**
          <p>
          @attr description
           translation in y of the view. This value is added post-layout to the left
             property of the view, which is set by its layout. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:translationY
        */
        public static final int View_translationY = 51;
        /**
          <p>
          @attr description
           Determines which side the vertical scroll bar should be placed on. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>defaultPosition</code></td><td>0</td><td> Place the scroll bar wherever the system default determines. </td></tr>
<tr><td><code>left</code></td><td>1</td><td> Place the scroll bar on the left. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Place the scroll bar on the right. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:verticalScrollbarPosition
        */
        public static final int View_verticalScrollbarPosition = 59;
        /**
          <p>
          @attr description
           Controls the initial visibility of the view.  


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:visibility
        */
        public static final int View_visibility = 14;
        /** Attributes that can be used with a ViewAnimator.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewAnimator_animateFirstView app.guchagucharr.guchagucharunrecorder:animateFirstView}</code></td><td> Defines whether to animate the current View when the ViewAnimation
             is first displayed.</td></tr>
           <tr><td><code>{@link #ViewAnimator_inAnimation app.guchagucharr.guchagucharunrecorder:inAnimation}</code></td><td> Identifier for the animation to use when a view is shown.</td></tr>
           <tr><td><code>{@link #ViewAnimator_outAnimation app.guchagucharr.guchagucharunrecorder:outAnimation}</code></td><td> Identifier for the animation to use when a view is hidden.</td></tr>
           </table>
           @see #ViewAnimator_animateFirstView
           @see #ViewAnimator_inAnimation
           @see #ViewAnimator_outAnimation
         */
        public static final int[] ViewAnimator = {
            0x7f01027a, 0x7f01027b, 0x7f01027c
        };
        /**
          <p>
          @attr description
           Defines whether to animate the current View when the ViewAnimation
             is first displayed. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animateFirstView
        */
        public static final int ViewAnimator_animateFirstView = 2;
        /**
          <p>
          @attr description
           Identifier for the animation to use when a view is shown. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inAnimation
        */
        public static final int ViewAnimator_inAnimation = 0;
        /**
          <p>
          @attr description
           Identifier for the animation to use when a view is hidden. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:outAnimation
        */
        public static final int ViewAnimator_outAnimation = 1;
        /** Attributes that can be used with a ViewDrawableStates.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_accelerated app.guchagucharr.guchagucharunrecorder:state_accelerated}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             indicating that the Drawable is in a view that is hardware accelerated.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_activated app.guchagucharr.guchagucharunrecorder:state_activated}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view or its parent has been "activated" meaning the user has currently
             marked it as being of interest.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_drag_can_accept app.guchagucharr.guchagucharunrecorder:state_drag_can_accept}</code></td><td> State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that the Drawable is in a view that is capable of accepting a drop of
             the content currently being manipulated in a drag-and-drop operation.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_drag_hovered app.guchagucharr.guchagucharunrecorder:state_drag_hovered}</code></td><td> State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a drag operation (for which the Drawable's view is a valid recipient)
             is currently positioned over the Drawable.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_enabled app.guchagucharr.guchagucharunrecorder:state_enabled}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view is enabled.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_focused app.guchagucharr.guchagucharunrecorder:state_focused}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_hovered app.guchagucharr.guchagucharunrecorder:state_hovered}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a pointer is hovering over the view.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_pressed app.guchagucharr.guchagucharunrecorder:state_pressed}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when the user is pressing down in a view.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_selected app.guchagucharr.guchagucharunrecorder:state_selected}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view (or one of its parents) is currently selected.</td></tr>
           <tr><td><code>{@link #ViewDrawableStates_state_window_focused app.guchagucharr.guchagucharunrecorder:state_window_focused}</code></td><td> State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view's window has input focus.</td></tr>
           </table>
           @see #ViewDrawableStates_state_accelerated
           @see #ViewDrawableStates_state_activated
           @see #ViewDrawableStates_state_drag_can_accept
           @see #ViewDrawableStates_state_drag_hovered
           @see #ViewDrawableStates_state_enabled
           @see #ViewDrawableStates_state_focused
           @see #ViewDrawableStates_state_hovered
           @see #ViewDrawableStates_state_pressed
           @see #ViewDrawableStates_state_selected
           @see #ViewDrawableStates_state_window_focused
         */
        public static final int[] ViewDrawableStates = {
            0x7f010330, 0x7f010331, 0x7f010332, 0x7f010335,
            0x7f010336, 0x7f010337, 0x7f01033d, 0x7f01033e,
            0x7f01033f, 0x7f010340
        };
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             indicating that the Drawable is in a view that is hardware accelerated.
             This means that the device can at least render a full-screen scaled
             bitmap with one layer of text and bitmaps composited on top of it
             at 60fps.  When this is set, the colorBackgroundCacheHint will be
             ignored even if it specifies a solid color, since that optimization
             is not needed. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_accelerated
        */
        public static final int ViewDrawableStates_state_accelerated = 6;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view or its parent has been "activated" meaning the user has currently
             marked it as being of interest.  This is an alternative representation of
             state_checked for when the state should be propagated down the view hierarchy. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_activated
        */
        public static final int ViewDrawableStates_state_activated = 5;
        /**
          <p>
          @attr description
           State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that the Drawable is in a view that is capable of accepting a drop of
             the content currently being manipulated in a drag-and-drop operation. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_drag_can_accept
        */
        public static final int ViewDrawableStates_state_drag_can_accept = 8;
        /**
          <p>
          @attr description
           State for {@link android.graphics.drawable.StateListDrawable StateListDrawable}
             indicating that a drag operation (for which the Drawable's view is a valid recipient)
             is currently positioned over the Drawable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_drag_hovered
        */
        public static final int ViewDrawableStates_state_drag_hovered = 9;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view is enabled. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_enabled
        */
        public static final int ViewDrawableStates_state_enabled = 2;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view has input focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_focused
        */
        public static final int ViewDrawableStates_state_focused = 0;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a pointer is hovering over the view. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_hovered
        */
        public static final int ViewDrawableStates_state_hovered = 7;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when the user is pressing down in a view. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_pressed
        */
        public static final int ViewDrawableStates_state_pressed = 4;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view (or one of its parents) is currently selected. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_selected
        */
        public static final int ViewDrawableStates_state_selected = 3;
        /**
          <p>
          @attr description
           State value for {@link android.graphics.drawable.StateListDrawable StateListDrawable},
             set when a view's window has input focus. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:state_window_focused
        */
        public static final int ViewDrawableStates_state_window_focused = 1;
        /** Attributes that can be used with a ViewFlipper.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewFlipper_autoStart app.guchagucharr.guchagucharunrecorder:autoStart}</code></td><td> When true, automatically start animating </td></tr>
           <tr><td><code>{@link #ViewFlipper_flipInterval app.guchagucharr.guchagucharunrecorder:flipInterval}</code></td><td></td></tr>
           </table>
           @see #ViewFlipper_autoStart
           @see #ViewFlipper_flipInterval
         */
        public static final int[] ViewFlipper = {
            0x7f01027d, 0x7f01027e
        };
        /**
          <p>
          @attr description
           When true, automatically start animating 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:autoStart
        */
        public static final int ViewFlipper_autoStart = 1;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#flipInterval}
          attribute's value can be found in the {@link #ViewFlipper} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:flipInterval
        */
        public static final int ViewFlipper_flipInterval = 0;
        /**  Attributes that can be used with a {@link android.view.ViewGroup} or any
         of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that this class processes in its children. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_addStatesFromChildren app.guchagucharr.guchagucharunrecorder:addStatesFromChildren}</code></td><td> Sets whether this ViewGroup's drawable states also include
             its children's drawable states.</td></tr>
           <tr><td><code>{@link #ViewGroup_alwaysDrawnWithCache app.guchagucharr.guchagucharunrecorder:alwaysDrawnWithCache}</code></td><td> Defines whether the ViewGroup should always draw its children using their
             drawing cache or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_animateLayoutChanges app.guchagucharr.guchagucharunrecorder:animateLayoutChanges}</code></td><td> Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run.</td></tr>
           <tr><td><code>{@link #ViewGroup_animationCache app.guchagucharr.guchagucharunrecorder:animationCache}</code></td><td> Defines whether layout animations should create a drawing cache for their
             children.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipChildren app.guchagucharr.guchagucharunrecorder:clipChildren}</code></td><td> Defines whether a child is limited to draw inside of its bounds or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipToPadding app.guchagucharr.guchagucharunrecorder:clipToPadding}</code></td><td> Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area.</td></tr>
           <tr><td><code>{@link #ViewGroup_descendantFocusability app.guchagucharr.guchagucharunrecorder:descendantFocusability}</code></td><td> Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.</td></tr>
           <tr><td><code>{@link #ViewGroup_layoutAnimation app.guchagucharr.guchagucharunrecorder:layoutAnimation}</code></td><td> Defines the layout animation to use the first time the ViewGroup is laid out.</td></tr>
           <tr><td><code>{@link #ViewGroup_persistentDrawingCache app.guchagucharr.guchagucharunrecorder:persistentDrawingCache}</code></td><td> Defines the persistence of the drawing cache.</td></tr>
           <tr><td><code>{@link #ViewGroup_splitMotionEvents app.guchagucharr.guchagucharunrecorder:splitMotionEvents}</code></td><td> Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.</td></tr>
           </table>
           @see #ViewGroup_addStatesFromChildren
           @see #ViewGroup_alwaysDrawnWithCache
           @see #ViewGroup_animateLayoutChanges
           @see #ViewGroup_animationCache
           @see #ViewGroup_clipChildren
           @see #ViewGroup_clipToPadding
           @see #ViewGroup_descendantFocusability
           @see #ViewGroup_layoutAnimation
           @see #ViewGroup_persistentDrawingCache
           @see #ViewGroup_splitMotionEvents
         */
        public static final int[] ViewGroup = {
            0x7f0101a4, 0x7f0101a5, 0x7f0101a6, 0x7f0101a7,
            0x7f0101a8, 0x7f0101a9, 0x7f0101aa, 0x7f0101ab,
            0x7f0101ac, 0x7f0101ad
        };
        /**
          <p>
          @attr description
           Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:addStatesFromChildren
        */
        public static final int ViewGroup_addStatesFromChildren = 7;
        /**
          <p>
          @attr description
           Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:alwaysDrawnWithCache
        */
        public static final int ViewGroup_alwaysDrawnWithCache = 6;
        /**
          <p>
          @attr description
           Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animateLayoutChanges
        */
        public static final int ViewGroup_animateLayoutChanges = 0;
        /**
          <p>
          @attr description
           Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:animationCache
        */
        public static final int ViewGroup_animationCache = 4;
        /**
          <p>
          @attr description
           Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:clipChildren
        */
        public static final int ViewGroup_clipChildren = 1;
        /**
          <p>
          @attr description
           Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:clipToPadding
        */
        public static final int ViewGroup_clipToPadding = 2;
        /**
          <p>
          @attr description
           Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:descendantFocusability
        */
        public static final int ViewGroup_descendantFocusability = 8;
        /**
          <p>
          @attr description
           Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layoutAnimation
        */
        public static final int ViewGroup_layoutAnimation = 3;
        /**
          <p>
          @attr description
           Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:persistentDrawingCache
        */
        public static final int ViewGroup_persistentDrawingCache = 5;
        /**
          <p>
          @attr description
           Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:splitMotionEvents
        */
        public static final int ViewGroup_splitMotionEvents = 9;
        /**  This is the basic set of layout attributes that are common to all
         layout managers.  These attributes are specified with the rest of
         a view's normal attributes (such as {@link android.R.attr#background},
         but will be parsed by the view's parent and ignored by the child.
        <p>The values defined here correspond to the base layout attribute
        class {@link android.view.ViewGroup.LayoutParams}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_Layout_layout_height app.guchagucharr.guchagucharunrecorder:layout_height}</code></td><td> Specifies the basic height of the view.</td></tr>
           <tr><td><code>{@link #ViewGroup_Layout_layout_width app.guchagucharr.guchagucharunrecorder:layout_width}</code></td><td> Specifies the basic width of the view.</td></tr>
           </table>
           @see #ViewGroup_Layout_layout_height
           @see #ViewGroup_Layout_layout_width
         */
        public static final int[] ViewGroup_Layout = {
            0x7f0101b0, 0x7f0101b1
        };
        /**
          <p>
          @attr description
           Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_height
        */
        public static final int ViewGroup_Layout_layout_height = 1;
        /**
          <p>
          @attr description
           Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_width
        */
        public static final int ViewGroup_Layout_layout_width = 0;
        /**  This is the basic set of layout attributes for layout managers that
         wish to place margins around their child views.
         These attributes are specified with the rest of
         a view's normal attributes (such as {@link android.R.attr#background},
         but will be parsed by the view's parent and ignored by the child.
        <p>The values defined here correspond to the base layout attribute
        class {@link android.view.ViewGroup.MarginLayoutParams}. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_height app.guchagucharr.guchagucharunrecorder:layout_height}</code></td><td> Specifies the basic height of the view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_margin app.guchagucharr.guchagucharunrecorder:layout_margin}</code></td><td>  Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginBottom app.guchagucharr.guchagucharunrecorder:layout_marginBottom}</code></td><td>  Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginEnd app.guchagucharr.guchagucharunrecorder:layout_marginEnd}</code></td><td>  Specifies extra space on the end side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginLeft app.guchagucharr.guchagucharunrecorder:layout_marginLeft}</code></td><td>  Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginRight app.guchagucharr.guchagucharunrecorder:layout_marginRight}</code></td><td>  Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginStart app.guchagucharr.guchagucharunrecorder:layout_marginStart}</code></td><td>  Specifies extra space on the start side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_marginTop app.guchagucharr.guchagucharunrecorder:layout_marginTop}</code></td><td>  Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #ViewGroup_MarginLayout_layout_width app.guchagucharr.guchagucharunrecorder:layout_width}</code></td><td> Specifies the basic width of the view.</td></tr>
           </table>
           @see #ViewGroup_MarginLayout_layout_height
           @see #ViewGroup_MarginLayout_layout_margin
           @see #ViewGroup_MarginLayout_layout_marginBottom
           @see #ViewGroup_MarginLayout_layout_marginEnd
           @see #ViewGroup_MarginLayout_layout_marginLeft
           @see #ViewGroup_MarginLayout_layout_marginRight
           @see #ViewGroup_MarginLayout_layout_marginStart
           @see #ViewGroup_MarginLayout_layout_marginTop
           @see #ViewGroup_MarginLayout_layout_width
         */
        public static final int[] ViewGroup_MarginLayout = {
            0x7f0101b0, 0x7f0101b1, 0x7f0101b2, 0x7f0101b3,
            0x7f0101b4, 0x7f0101b5, 0x7f0101b6, 0x7f0101b7,
            0x7f0101b8
        };
        /**
          <p>
          @attr description
           Specifies the basic height of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant height or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_height
        */
        public static final int ViewGroup_MarginLayout_layout_height = 1;
        /**
          <p>
          @attr description
            Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_margin
        */
        public static final int ViewGroup_MarginLayout_layout_margin = 2;
        /**
          <p>
          @attr description
            Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_marginBottom
        */
        public static final int ViewGroup_MarginLayout_layout_marginBottom = 6;
        /**
          <p>
          @attr description
            Specifies extra space on the end side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_marginEnd
        */
        public static final int ViewGroup_MarginLayout_layout_marginEnd = 8;
        /**
          <p>
          @attr description
            Specifies extra space on the left side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_marginLeft
        */
        public static final int ViewGroup_MarginLayout_layout_marginLeft = 3;
        /**
          <p>
          @attr description
            Specifies extra space on the right side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_marginRight
        */
        public static final int ViewGroup_MarginLayout_layout_marginRight = 5;
        /**
          <p>
          @attr description
            Specifies extra space on the start side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_marginStart
        */
        public static final int ViewGroup_MarginLayout_layout_marginStart = 7;
        /**
          <p>
          @attr description
            Specifies extra space on the top side of this view.
              This space is outside this view's bounds. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_marginTop
        */
        public static final int ViewGroup_MarginLayout_layout_marginTop = 4;
        /**
          <p>
          @attr description
           Specifies the basic width of the view.  This is a required attribute
             for any view inside of a containing layout manager.  Its value may
             be a dimension (such as "12dip") for a constant width or one of
             the special constants. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fill_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 This constant is deprecated starting from API Level 8 and
                 is replaced by {@code match_parent}. </td></tr>
<tr><td><code>match_parent</code></td><td>-1</td><td> The view should be as big as its parent (minus padding).
                 Introduced in API Level 8. </td></tr>
<tr><td><code>wrap_content</code></td><td>-2</td><td> The view should be only big enough to enclose its content (plus padding). </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout_width
        */
        public static final int ViewGroup_MarginLayout_layout_width = 0;
        /**  A {@link android.view.ViewStub} lets you lazily include other XML layouts
         inside your application at runtime. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewStub_inflatedId app.guchagucharr.guchagucharunrecorder:inflatedId}</code></td><td> Overrides the id of the inflated View with this value.</td></tr>
           <tr><td><code>{@link #ViewStub_layout app.guchagucharr.guchagucharunrecorder:layout}</code></td><td> Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so.</td></tr>
           </table>
           @see #ViewStub_inflatedId
           @see #ViewStub_layout
         */
        public static final int[] ViewStub = {
            0x7f0101ae, 0x7f0101af
        };
        /**
          <p>
          @attr description
           Overrides the id of the inflated View with this value. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:inflatedId
        */
        public static final int ViewStub_inflatedId = 1;
        /**
          <p>
          @attr description
           Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:layout
        */
        public static final int ViewStub_layout = 0;
        /** Attributes that can be used with a ViewSwitcher.
         */
        public static final int[] ViewSwitcher = {
            
        };
        /**  Base attributes available to VolumePreference. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #VolumePreference_streamType app.guchagucharr.guchagucharunrecorder:streamType}</code></td><td> Different audio stream types.</td></tr>
           </table>
           @see #VolumePreference_streamType
         */
        public static final int[] VolumePreference = {
            0x7f010382
        };
        /**
          <p>
          @attr description
           Different audio stream types. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>0</td><td></td></tr>
<tr><td><code>system</code></td><td>1</td><td></td></tr>
<tr><td><code>ring</code></td><td>2</td><td></td></tr>
<tr><td><code>music</code></td><td>3</td><td></td></tr>
<tr><td><code>alarm</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:streamType
        */
        public static final int VolumePreference_streamType = 0;
        /**  Use <code>wallpaper</code> as the root tag of the XML resource that
         describes an
         {@link android.service.wallpaper.WallpaperService}, which is
         referenced from its
         {@link android.service.wallpaper.WallpaperService#SERVICE_META_DATA}
         meta-data entry.  Described here are the attributes that can be
         included in that tag. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Wallpaper_author app.guchagucharr.guchagucharunrecorder:author}</code></td><td> Name of the author of this component, e.</td></tr>
           <tr><td><code>{@link #Wallpaper_description app.guchagucharr.guchagucharunrecorder:description}</code></td><td> Short description of the component's purpose or behavior.</td></tr>
           <tr><td><code>{@link #Wallpaper_settingsActivity app.guchagucharr.guchagucharunrecorder:settingsActivity}</code></td><td> Component name of an activity that allows the user to modify
             the settings for this service.</td></tr>
           <tr><td><code>{@link #Wallpaper_thumbnail app.guchagucharr.guchagucharunrecorder:thumbnail}</code></td><td> Reference to a the wallpaper's thumbnail bitmap.</td></tr>
           </table>
           @see #Wallpaper_author
           @see #Wallpaper_description
           @see #Wallpaper_settingsActivity
           @see #Wallpaper_thumbnail
         */
        public static final int[] Wallpaper = {
            0x7f0101b9, 0x7f0103ad, 0x7f0103ae, 0x7f010432
        };
        /**
          <p>
          @attr description
           Name of the author of this component, e.g. Google. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:author
        */
        public static final int Wallpaper_author = 2;
        /**
          <p>
          @attr description
           Short description of the component's purpose or behavior. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:description
        */
        public static final int Wallpaper_description = 3;
        /**
          <p>
          @attr description
           Component name of an activity that allows the user to modify
             the settings for this service. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:settingsActivity
        */
        public static final int Wallpaper_settingsActivity = 0;
        /**
          <p>
          @attr description
           Reference to a the wallpaper's thumbnail bitmap. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:thumbnail
        */
        public static final int Wallpaper_thumbnail = 1;
        /**  Use <code>wallpaper-preview</code> as the root tag of the XML resource that
         describes a wallpaper preview. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WallpaperPreviewInfo_staticWallpaperPreview app.guchagucharr.guchagucharunrecorder:staticWallpaperPreview}</code></td><td> A resource id of a static drawable.</td></tr>
           </table>
           @see #WallpaperPreviewInfo_staticWallpaperPreview
         */
        public static final int[] WallpaperPreviewInfo = {
            0x7f0103ac
        };
        /**
          <p>
          @attr description
           A resource id of a static drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:staticWallpaperPreview
        */
        public static final int WallpaperPreviewInfo_staticWallpaperPreview = 0;
        /**  @hide 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WeightedLinearLayout_majorWeightMax app.guchagucharr.guchagucharunrecorder:majorWeightMax}</code></td><td></td></tr>
           <tr><td><code>{@link #WeightedLinearLayout_majorWeightMin app.guchagucharr.guchagucharunrecorder:majorWeightMin}</code></td><td></td></tr>
           <tr><td><code>{@link #WeightedLinearLayout_minorWeightMax app.guchagucharr.guchagucharunrecorder:minorWeightMax}</code></td><td></td></tr>
           <tr><td><code>{@link #WeightedLinearLayout_minorWeightMin app.guchagucharr.guchagucharunrecorder:minorWeightMin}</code></td><td></td></tr>
           </table>
           @see #WeightedLinearLayout_majorWeightMax
           @see #WeightedLinearLayout_majorWeightMin
           @see #WeightedLinearLayout_minorWeightMax
           @see #WeightedLinearLayout_minorWeightMin
         */
        public static final int[] WeightedLinearLayout = {
            0x7f0102bd, 0x7f0102be, 0x7f0102bf, 0x7f0102c0
        };
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#majorWeightMax}
          attribute's value can be found in the {@link #WeightedLinearLayout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:majorWeightMax
        */
        public static final int WeightedLinearLayout_majorWeightMax = 2;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#majorWeightMin}
          attribute's value can be found in the {@link #WeightedLinearLayout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:majorWeightMin
        */
        public static final int WeightedLinearLayout_majorWeightMin = 0;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minorWeightMax}
          attribute's value can be found in the {@link #WeightedLinearLayout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minorWeightMax
        */
        public static final int WeightedLinearLayout_minorWeightMax = 3;
        /**
          <p>This symbol is the offset where the {@link app.guchagucharr.guchagucharunrecorder.R.attr#minorWeightMin}
          attribute's value can be found in the {@link #WeightedLinearLayout} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name app.guchagucharr.guchagucharunrecorder:minorWeightMin
        */
        public static final int WeightedLinearLayout_minorWeightMin = 1;
        /**  The set of attributes that describe a Windows's theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Window_backgroundDimAmount app.guchagucharr.guchagucharunrecorder:backgroundDimAmount}</code></td><td> Default background dim amount when a menu, dialog, or something similar pops up.</td></tr>
           <tr><td><code>{@link #Window_backgroundDimEnabled app.guchagucharr.guchagucharunrecorder:backgroundDimEnabled}</code></td><td> Control whether dimming behind the window is enabled.</td></tr>
           <tr><td><code>{@link #Window_textColor app.guchagucharr.guchagucharunrecorder:textColor}</code></td><td> Color of text (usually same as colorForeground).</td></tr>
           <tr><td><code>{@link #Window_windowActionBar app.guchagucharr.guchagucharunrecorder:windowActionBar}</code></td><td> Flag indicating whether this window should have an Action Bar
             in place of the usual title bar.</td></tr>
           <tr><td><code>{@link #Window_windowActionBarOverlay app.guchagucharr.guchagucharunrecorder:windowActionBarOverlay}</code></td><td> Flag indicating whether this window's Action Bar should overlay
             application content.</td></tr>
           <tr><td><code>{@link #Window_windowActionModeOverlay app.guchagucharr.guchagucharunrecorder:windowActionModeOverlay}</code></td><td> Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar).</td></tr>
           <tr><td><code>{@link #Window_windowAnimationStyle app.guchagucharr.guchagucharunrecorder:windowAnimationStyle}</code></td><td> Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}.</td></tr>
           <tr><td><code>{@link #Window_windowBackground app.guchagucharr.guchagucharunrecorder:windowBackground}</code></td><td> Drawable to use as the overall window background.</td></tr>
           <tr><td><code>{@link #Window_windowCloseOnTouchOutside app.guchagucharr.guchagucharunrecorder:windowCloseOnTouchOutside}</code></td><td> Control whether a container should automatically close itself if
             the user touches outside of it.</td></tr>
           <tr><td><code>{@link #Window_windowContentOverlay app.guchagucharr.guchagucharunrecorder:windowContentOverlay}</code></td><td> This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.</td></tr>
           <tr><td><code>{@link #Window_windowDisablePreview app.guchagucharr.guchagucharunrecorder:windowDisablePreview}</code></td><td> Flag allowing you to disable the preview animation for a window.</td></tr>
           <tr><td><code>{@link #Window_windowEnableSplitTouch app.guchagucharr.guchagucharunrecorder:windowEnableSplitTouch}</code></td><td> Flag indicating that this window should allow touches to be split
             across other windows that also support split touch.</td></tr>
           <tr><td><code>{@link #Window_windowFixedHeightMajor app.guchagucharr.guchagucharunrecorder:windowFixedHeightMajor}</code></td><td> A fixed height for the window along the major axis of the screen,
             that is, when in portrait.</td></tr>
           <tr><td><code>{@link #Window_windowFixedHeightMinor app.guchagucharr.guchagucharunrecorder:windowFixedHeightMinor}</code></td><td> A fixed height for the window along the minor axis of the screen,
             that is, when in landscape.</td></tr>
           <tr><td><code>{@link #Window_windowFixedWidthMajor app.guchagucharr.guchagucharunrecorder:windowFixedWidthMajor}</code></td><td> A fixed width for the window along the major axis of the screen,
             that is, when in landscape.</td></tr>
           <tr><td><code>{@link #Window_windowFixedWidthMinor app.guchagucharr.guchagucharunrecorder:windowFixedWidthMinor}</code></td><td> A fixed width for the window along the minor axis of the screen,
             that is, when in portrait.</td></tr>
           <tr><td><code>{@link #Window_windowFrame app.guchagucharr.guchagucharunrecorder:windowFrame}</code></td><td> Drawable to use as a frame around the window.</td></tr>
           <tr><td><code>{@link #Window_windowFullscreen app.guchagucharr.guchagucharunrecorder:windowFullscreen}</code></td><td> Flag indicating whether this window should fill the entire screen.</td></tr>
           <tr><td><code>{@link #Window_windowIsFloating app.guchagucharr.guchagucharunrecorder:windowIsFloating}</code></td><td> Flag indicating whether this is a floating window.</td></tr>
           <tr><td><code>{@link #Window_windowIsTranslucent app.guchagucharr.guchagucharunrecorder:windowIsTranslucent}</code></td><td> Flag indicating whether this is a translucent window.</td></tr>
           <tr><td><code>{@link #Window_windowMinWidthMajor app.guchagucharr.guchagucharunrecorder:windowMinWidthMajor}</code></td><td> The minimum width the window is allowed to be, along the major
             axis of the screen.</td></tr>
           <tr><td><code>{@link #Window_windowMinWidthMinor app.guchagucharr.guchagucharunrecorder:windowMinWidthMinor}</code></td><td> The minimum width the window is allowed to be, along the minor
             axis of the screen.</td></tr>
           <tr><td><code>{@link #Window_windowNoDisplay app.guchagucharr.guchagucharunrecorder:windowNoDisplay}</code></td><td> Flag indicating that this window should not be displayed at all.</td></tr>
           <tr><td><code>{@link #Window_windowNoTitle app.guchagucharr.guchagucharunrecorder:windowNoTitle}</code></td><td> Flag indicating whether there should be no title on this window.</td></tr>
           <tr><td><code>{@link #Window_windowShowWallpaper app.guchagucharr.guchagucharunrecorder:windowShowWallpaper}</code></td><td> Flag indicating that this window's background should be the
           user's current wallpaper.</td></tr>
           <tr><td><code>{@link #Window_windowSoftInputMode app.guchagucharr.guchagucharunrecorder:windowSoftInputMode}</code></td><td> Defines the default soft input state that this window would
             like when it is displayed.</td></tr>
           <tr><td><code>{@link #Window_windowSplitActionBar app.guchagucharr.guchagucharunrecorder:windowSplitActionBar}</code></td><td> Flag indicating that the action bar should be split to provide more
             room for elements.</td></tr>
           </table>
           @see #Window_backgroundDimAmount
           @see #Window_backgroundDimEnabled
           @see #Window_textColor
           @see #Window_windowActionBar
           @see #Window_windowActionBarOverlay
           @see #Window_windowActionModeOverlay
           @see #Window_windowAnimationStyle
           @see #Window_windowBackground
           @see #Window_windowCloseOnTouchOutside
           @see #Window_windowContentOverlay
           @see #Window_windowDisablePreview
           @see #Window_windowEnableSplitTouch
           @see #Window_windowFixedHeightMajor
           @see #Window_windowFixedHeightMinor
           @see #Window_windowFixedWidthMajor
           @see #Window_windowFixedWidthMinor
           @see #Window_windowFrame
           @see #Window_windowFullscreen
           @see #Window_windowIsFloating
           @see #Window_windowIsTranslucent
           @see #Window_windowMinWidthMajor
           @see #Window_windowMinWidthMinor
           @see #Window_windowNoDisplay
           @see #Window_windowNoTitle
           @see #Window_windowShowWallpaper
           @see #Window_windowSoftInputMode
           @see #Window_windowSplitActionBar
         */
        public static final int[] Window = {
            0x7f01001d, 0x7f01001e, 0x7f010067, 0x7f010068,
            0x7f010069, 0x7f01006a, 0x7f01006b, 0x7f01006c,
            0x7f01006d, 0x7f01006e, 0x7f010072, 0x7f010073,
            0x7f010074, 0x7f010075, 0x7f010076, 0x7f010077,
            0x7f010078, 0x7f010079, 0x7f01007a, 0x7f01007b,
            0x7f01011c, 0x7f01012e, 0x7f01012f, 0x7f010130,
            0x7f010131, 0x7f010132, 0x7f010133
        };
        /**
          <p>
          @attr description
           Default background dim amount when a menu, dialog, or something similar pops up. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundDimAmount
        */
        public static final int Window_backgroundDimAmount = 0;
        /**
          <p>
          @attr description
           Control whether dimming behind the window is enabled.  The default
             theme does not set this value, meaning it is based on whether the
             window is floating. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:backgroundDimEnabled
        */
        public static final int Window_backgroundDimEnabled = 1;
        /**
          <p>
          @attr description
           Color of text (usually same as colorForeground). 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:textColor
        */
        public static final int Window_textColor = 20;
        /**
          <p>
          @attr description
           Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowActionBar
        */
        public static final int Window_windowActionBar = 11;
        /**
          <p>
          @attr description
           Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowActionBarOverlay
        */
        public static final int Window_windowActionBarOverlay = 12;
        /**
          <p>
          @attr description
           Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowActionModeOverlay
        */
        public static final int Window_windowActionModeOverlay = 13;
        /**
          <p>
          @attr description
           Reference to a style resource holding
             the set of window animations to use, which can be
             any of the attributes defined by
             {@link android.R.styleable#WindowAnimation}. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowAnimationStyle
        */
        public static final int Window_windowAnimationStyle = 10;
        /**
          <p>
          @attr description
           Drawable to use as the overall window background.  As of
             {@link android.os.Build.VERSION_CODES#HONEYCOMB}, this may
             be a selector that uses state_accelerated to pick a non-solid
             color when running on devices that can draw such a bitmap
             with complex compositing on top at 60fps.

             <p>There are a few special considerations to use when setting this
             drawable:
             <ul>
             <li> This information will be used to infer the pixel format
                  for your window's surface.  If the drawable has any
                  non-opaque pixels, your window will be translucent
                  (32 bpp).
             <li> If you want to draw the entire background
                  yourself, you should set this drawable to some solid
                  color that closely matches that background (so the
                  system's preview of your window will match), and
                  then in code manually set your window's background to
                  null so it will not be drawn.
             </ul> 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowBackground
        */
        public static final int Window_windowBackground = 2;
        /**
          <p>
          @attr description
           Control whether a container should automatically close itself if
             the user touches outside of it.  This only applies to activities
             and dialogs.

             <p>Note: this attribute will only be respected for applications
             that are targeting {@link android.os.Build.VERSION_CODES#HONEYCOMB}
             or later. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowCloseOnTouchOutside
        */
        public static final int Window_windowCloseOnTouchOutside = 19;
        /**
          <p>
          @attr description
           This Drawable is overlaid over the foreground of the Window's content area, usually
             to place a shadow below the title.  


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowContentOverlay
        */
        public static final int Window_windowContentOverlay = 9;
        /**
          <p>
          @attr description
           Flag allowing you to disable the preview animation for a window.
             The default value is false; if set to true, the system can never
             use the window's theme to show a preview of it before your
             actual instance is shown to the user. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowDisablePreview
        */
        public static final int Window_windowDisablePreview = 16;
        /**
          <p>
          @attr description
           Flag indicating that this window should allow touches to be split
             across other windows that also support split touch.
             The default value is true for applications with a targetSdkVersion
             of Honeycomb or newer; false otherwise.
             When this flag is false, the first pointer that goes down determines
             the window to which all subsequent touches go until all pointers go up.
             When this flag is true, each pointer (not necessarily the first) that
             goes down determines the window to which all subsequent touches of that
             pointer will go until that pointers go up thereby enabling touches
             with multiple pointers to be split across multiple windows. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowEnableSplitTouch
        */
        public static final int Window_windowEnableSplitTouch = 18;
        /**
          <p>
          @attr description
           A fixed height for the window along the major axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFixedHeightMajor
        */
        public static final int Window_windowFixedHeightMajor = 26;
        /**
          <p>
          @attr description
           A fixed height for the window along the minor axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFixedHeightMinor
        */
        public static final int Window_windowFixedHeightMinor = 24;
        /**
          <p>
          @attr description
           A fixed width for the window along the major axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFixedWidthMajor
        */
        public static final int Window_windowFixedWidthMajor = 23;
        /**
          <p>
          @attr description
           A fixed width for the window along the minor axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFixedWidthMinor
        */
        public static final int Window_windowFixedWidthMinor = 25;
        /**
          <p>
          @attr description
           Drawable to use as a frame around the window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFrame
        */
        public static final int Window_windowFrame = 3;
        /**
          <p>
          @attr description
           Flag indicating whether this window should fill the entire screen. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowFullscreen
        */
        public static final int Window_windowFullscreen = 5;
        /**
          <p>
          @attr description
           Flag indicating whether this is a floating window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowIsFloating
        */
        public static final int Window_windowIsFloating = 6;
        /**
          <p>
          @attr description
           Flag indicating whether this is a translucent window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowIsTranslucent
        */
        public static final int Window_windowIsTranslucent = 7;
        /**
          <p>
          @attr description
           The minimum width the window is allowed to be, along the major
             axis of the screen.  That is, when in landscape.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowMinWidthMajor
        */
        public static final int Window_windowMinWidthMajor = 21;
        /**
          <p>
          @attr description
           The minimum width the window is allowed to be, along the minor
             axis of the screen.  That is, when in portrait.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowMinWidthMinor
        */
        public static final int Window_windowMinWidthMinor = 22;
        /**
          <p>
          @attr description
           Flag indicating that this window should not be displayed at all.
             The default value is false; if set to true, and this window is
             the main window of an Activity, then it will never actually
             be added to the window manager.  This means that your activity
             must immediately quit without waiting for user interaction,
             because there will be no such interaction coming. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowNoDisplay
        */
        public static final int Window_windowNoDisplay = 17;
        /**
          <p>
          @attr description
           Flag indicating whether there should be no title on this window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowNoTitle
        */
        public static final int Window_windowNoTitle = 4;
        /**
          <p>
          @attr description
           Flag indicating that this window's background should be the
           user's current wallpaper. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowShowWallpaper
        */
        public static final int Window_windowShowWallpaper = 8;
        /**
          <p>
          @attr description
           Defines the default soft input state that this window would
             like when it is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>stateUnspecified</code></td><td>0</td><td> Not specified, use what the system thinks is best.  This
                 is the default. </td></tr>
<tr><td><code>stateUnchanged</code></td><td>1</td><td> Leave the soft input window as-is, in whatever state it
                 last was. </td></tr>
<tr><td><code>stateHidden</code></td><td>2</td><td> Make the soft input area hidden when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysHidden</code></td><td>3</td><td> Always make the soft input area hidden when this window
                 has input focus. </td></tr>
<tr><td><code>stateVisible</code></td><td>4</td><td> Make the soft input area visible when normally appropriate
                 (when the user is navigating forward to your window). </td></tr>
<tr><td><code>stateAlwaysVisible</code></td><td>5</td><td> Always make the soft input area visible when this window
                 has input focus. </td></tr>
<tr><td><code>adjustUnspecified</code></td><td>0x00</td><td> The window resize/pan adjustment has not been specified,
                 the system will automatically select between resize and pan
                 modes, depending
                 on whether the content of the window has any layout views
                 that can scroll their contents.  If there is such a view,
                 then the window will be resized, with the assumption being
                 that the resizeable area can be reduced to make room for
                 the input UI. </td></tr>
<tr><td><code>adjustResize</code></td><td>0x10</td><td> Always resize the window: the content area of the window is
                 reduced to make room for the soft input area. </td></tr>
<tr><td><code>adjustPan</code></td><td>0x20</td><td> Don't resize the window to make room for the soft input area;
                 instead pan the contents of the window as focus moves inside
                 of it so that the user can see what they are typing.  This is
                 generally less desireable than panning because the user may
                 need to close the input area to get at and interact with
                 parts of the window. </td></tr>
<tr><td><code>adjustNothing</code></td><td>0x30</td><td> Don't resize <em>or</em> pan the window to make room for the
                 soft input area; the window is never adjusted for it. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowSoftInputMode
        */
        public static final int Window_windowSoftInputMode = 15;
        /**
          <p>
          @attr description
           Flag indicating that the action bar should be split to provide more
             room for elements. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowSplitActionBar
        */
        public static final int Window_windowSplitActionBar = 14;
        /**  Window animation class attributes. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WindowAnimation_activityCloseEnterAnimation app.guchagucharr.guchagucharunrecorder:activityCloseEnterAnimation}</code></td><td>  When closing the current activity, this is the animation that is
              run on the next activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_activityCloseExitAnimation app.guchagucharr.guchagucharunrecorder:activityCloseExitAnimation}</code></td><td>  When closing the current activity, this is the animation that is
              run on the current activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_activityOpenEnterAnimation app.guchagucharr.guchagucharunrecorder:activityOpenEnterAnimation}</code></td><td>  When opening a new activity, this is the animation that is
              run on the next activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_activityOpenExitAnimation app.guchagucharr.guchagucharunrecorder:activityOpenExitAnimation}</code></td><td>  When opening a new activity, this is the animation that is
              run on the previous activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskCloseEnterAnimation app.guchagucharr.guchagucharunrecorder:taskCloseEnterAnimation}</code></td><td>  When closing the last activity of a task, this is the animation that is
              run on the activity of the next task (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskCloseExitAnimation app.guchagucharr.guchagucharunrecorder:taskCloseExitAnimation}</code></td><td>  When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskOpenEnterAnimation app.guchagucharr.guchagucharunrecorder:taskOpenEnterAnimation}</code></td><td>  When opening an activity in a new task, this is the animation that is
              run on the activity of the new task (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskOpenExitAnimation app.guchagucharr.guchagucharunrecorder:taskOpenExitAnimation}</code></td><td>  When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToBackEnterAnimation app.guchagucharr.guchagucharunrecorder:taskToBackEnterAnimation}</code></td><td>  When sending the current task to the background, this is the
              animation that is run on the top activity of the task behind
              it (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToBackExitAnimation app.guchagucharr.guchagucharunrecorder:taskToBackExitAnimation}</code></td><td>  When sending the current task to the background, this is the
              animation that is run on the top activity of the current task
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToFrontEnterAnimation app.guchagucharr.guchagucharunrecorder:taskToFrontEnterAnimation}</code></td><td>  When bringing an existing task to the foreground, this is the
              animation that is run on the top activity of the task being brought
              to the foreground (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_taskToFrontExitAnimation app.guchagucharr.guchagucharunrecorder:taskToFrontExitAnimation}</code></td><td>  When bringing an existing task to the foreground, this is the
              animation that is run on the current foreground activity
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperCloseEnterAnimation app.guchagucharr.guchagucharunrecorder:wallpaperCloseEnterAnimation}</code></td><td>  When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the new activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperCloseExitAnimation app.guchagucharr.guchagucharunrecorder:wallpaperCloseExitAnimation}</code></td><td>  When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the old wallpaper activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraCloseEnterAnimation app.guchagucharr.guchagucharunrecorder:wallpaperIntraCloseEnterAnimation}</code></td><td>  When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the previous activity
              (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraCloseExitAnimation app.guchagucharr.guchagucharunrecorder:wallpaperIntraCloseExitAnimation}</code></td><td>  When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraOpenEnterAnimation app.guchagucharr.guchagucharunrecorder:wallpaperIntraOpenEnterAnimation}</code></td><td>  When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the new activity
              (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperIntraOpenExitAnimation app.guchagucharr.guchagucharunrecorder:wallpaperIntraOpenExitAnimation}</code></td><td>  When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperOpenEnterAnimation app.guchagucharr.guchagucharunrecorder:wallpaperOpenEnterAnimation}</code></td><td>  When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the new wallpaper activity (which is entering the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_wallpaperOpenExitAnimation app.guchagucharr.guchagucharunrecorder:wallpaperOpenExitAnimation}</code></td><td>  When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the current activity (which is exiting the screen).</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowEnterAnimation app.guchagucharr.guchagucharunrecorder:windowEnterAnimation}</code></td><td> The animation used when a window is being added.</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowExitAnimation app.guchagucharr.guchagucharunrecorder:windowExitAnimation}</code></td><td> The animation used when a window is being removed.</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowHideAnimation app.guchagucharr.guchagucharunrecorder:windowHideAnimation}</code></td><td> The animation used when a window is going from VISIBLE to INVISIBLE.</td></tr>
           <tr><td><code>{@link #WindowAnimation_windowShowAnimation app.guchagucharr.guchagucharunrecorder:windowShowAnimation}</code></td><td> The animation used when a window is going from INVISIBLE to VISIBLE.</td></tr>
           </table>
           @see #WindowAnimation_activityCloseEnterAnimation
           @see #WindowAnimation_activityCloseExitAnimation
           @see #WindowAnimation_activityOpenEnterAnimation
           @see #WindowAnimation_activityOpenExitAnimation
           @see #WindowAnimation_taskCloseEnterAnimation
           @see #WindowAnimation_taskCloseExitAnimation
           @see #WindowAnimation_taskOpenEnterAnimation
           @see #WindowAnimation_taskOpenExitAnimation
           @see #WindowAnimation_taskToBackEnterAnimation
           @see #WindowAnimation_taskToBackExitAnimation
           @see #WindowAnimation_taskToFrontEnterAnimation
           @see #WindowAnimation_taskToFrontExitAnimation
           @see #WindowAnimation_wallpaperCloseEnterAnimation
           @see #WindowAnimation_wallpaperCloseExitAnimation
           @see #WindowAnimation_wallpaperIntraCloseEnterAnimation
           @see #WindowAnimation_wallpaperIntraCloseExitAnimation
           @see #WindowAnimation_wallpaperIntraOpenEnterAnimation
           @see #WindowAnimation_wallpaperIntraOpenExitAnimation
           @see #WindowAnimation_wallpaperOpenEnterAnimation
           @see #WindowAnimation_wallpaperOpenExitAnimation
           @see #WindowAnimation_windowEnterAnimation
           @see #WindowAnimation_windowExitAnimation
           @see #WindowAnimation_windowHideAnimation
           @see #WindowAnimation_windowShowAnimation
         */
        public static final int[] WindowAnimation = {
            0x7f01014a, 0x7f01014b, 0x7f01014c, 0x7f01014d,
            0x7f01014e, 0x7f01014f, 0x7f010150, 0x7f010151,
            0x7f010152, 0x7f010153, 0x7f010154, 0x7f010155,
            0x7f010156, 0x7f010157, 0x7f010158, 0x7f010159,
            0x7f01015a, 0x7f01015b, 0x7f01015c, 0x7f01015d,
            0x7f01015e, 0x7f01015f, 0x7f010160, 0x7f010161
        };
        /**
          <p>
          @attr description
            When closing the current activity, this is the animation that is
              run on the next activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:activityCloseEnterAnimation
        */
        public static final int WindowAnimation_activityCloseEnterAnimation = 6;
        /**
          <p>
          @attr description
            When closing the current activity, this is the animation that is
              run on the current activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:activityCloseExitAnimation
        */
        public static final int WindowAnimation_activityCloseExitAnimation = 7;
        /**
          <p>
          @attr description
            When opening a new activity, this is the animation that is
              run on the next activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:activityOpenEnterAnimation
        */
        public static final int WindowAnimation_activityOpenEnterAnimation = 4;
        /**
          <p>
          @attr description
            When opening a new activity, this is the animation that is
              run on the previous activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:activityOpenExitAnimation
        */
        public static final int WindowAnimation_activityOpenExitAnimation = 5;
        /**
          <p>
          @attr description
            When closing the last activity of a task, this is the animation that is
              run on the activity of the next task (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskCloseEnterAnimation
        */
        public static final int WindowAnimation_taskCloseEnterAnimation = 10;
        /**
          <p>
          @attr description
            When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskCloseExitAnimation
        */
        public static final int WindowAnimation_taskCloseExitAnimation = 11;
        /**
          <p>
          @attr description
            When opening an activity in a new task, this is the animation that is
              run on the activity of the new task (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskOpenEnterAnimation
        */
        public static final int WindowAnimation_taskOpenEnterAnimation = 8;
        /**
          <p>
          @attr description
            When opening an activity in a new task, this is the animation that is
              run on the activity of the old task (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskOpenExitAnimation
        */
        public static final int WindowAnimation_taskOpenExitAnimation = 9;
        /**
          <p>
          @attr description
            When sending the current task to the background, this is the
              animation that is run on the top activity of the task behind
              it (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskToBackEnterAnimation
        */
        public static final int WindowAnimation_taskToBackEnterAnimation = 14;
        /**
          <p>
          @attr description
            When sending the current task to the background, this is the
              animation that is run on the top activity of the current task
              (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskToBackExitAnimation
        */
        public static final int WindowAnimation_taskToBackExitAnimation = 15;
        /**
          <p>
          @attr description
            When bringing an existing task to the foreground, this is the
              animation that is run on the top activity of the task being brought
              to the foreground (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskToFrontEnterAnimation
        */
        public static final int WindowAnimation_taskToFrontEnterAnimation = 12;
        /**
          <p>
          @attr description
            When bringing an existing task to the foreground, this is the
              animation that is run on the current foreground activity
              (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:taskToFrontExitAnimation
        */
        public static final int WindowAnimation_taskToFrontExitAnimation = 13;
        /**
          <p>
          @attr description
            When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the new activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperCloseEnterAnimation
        */
        public static final int WindowAnimation_wallpaperCloseEnterAnimation = 18;
        /**
          <p>
          @attr description
            When opening a new activity that hides the wallpaper, while
              currently showing the wallpaper, this is the animation that
              is run on the old wallpaper activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperCloseExitAnimation
        */
        public static final int WindowAnimation_wallpaperCloseExitAnimation = 19;
        /**
          <p>
          @attr description
            When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the previous activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperIntraCloseEnterAnimation
        */
        public static final int WindowAnimation_wallpaperIntraCloseEnterAnimation = 22;
        /**
          <p>
          @attr description
            When closing a foreround activity that is on top of the wallpaper
              when the previous activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperIntraCloseExitAnimation
        */
        public static final int WindowAnimation_wallpaperIntraCloseExitAnimation = 23;
        /**
          <p>
          @attr description
            When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the new activity
              (which is entering the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperIntraOpenEnterAnimation
        */
        public static final int WindowAnimation_wallpaperIntraOpenEnterAnimation = 20;
        /**
          <p>
          @attr description
            When opening a new activity that is on top of the wallpaper
              when the current activity is also on top of the wallpaper,
              this is the animation that is run on the current activity
              (which is exiting the screen).  The wallpaper remains
              static behind the animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperIntraOpenExitAnimation
        */
        public static final int WindowAnimation_wallpaperIntraOpenExitAnimation = 21;
        /**
          <p>
          @attr description
            When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the new wallpaper activity (which is entering the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperOpenEnterAnimation
        */
        public static final int WindowAnimation_wallpaperOpenEnterAnimation = 16;
        /**
          <p>
          @attr description
            When opening a new activity that shows the wallpaper, while
              currently not showing the wallpaper, this is the animation that
              is run on the current activity (which is exiting the screen). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:wallpaperOpenExitAnimation
        */
        public static final int WindowAnimation_wallpaperOpenExitAnimation = 17;
        /**
          <p>
          @attr description
           The animation used when a window is being added. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowEnterAnimation
        */
        public static final int WindowAnimation_windowEnterAnimation = 0;
        /**
          <p>
          @attr description
           The animation used when a window is being removed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowExitAnimation
        */
        public static final int WindowAnimation_windowExitAnimation = 1;
        /**
          <p>
          @attr description
           The animation used when a window is going from VISIBLE to INVISIBLE. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowHideAnimation
        */
        public static final int WindowAnimation_windowHideAnimation = 3;
        /**
          <p>
          @attr description
           The animation used when a window is going from INVISIBLE to VISIBLE. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name app.guchagucharr.guchagucharunrecorder:windowShowAnimation
        */
        public static final int WindowAnimation_windowShowAnimation = 2;
    };
}
